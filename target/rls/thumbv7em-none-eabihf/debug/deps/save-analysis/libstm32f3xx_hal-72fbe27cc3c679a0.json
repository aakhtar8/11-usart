{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0","program":"/home/ahmed/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","stm32f3xx_hal","--edition=2018","/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"device-selected\"","--cfg","feature=\"direct-call-deprecated\"","--cfg","feature=\"stm32-usbd\"","--cfg","feature=\"stm32f303\"","--cfg","feature=\"stm32f303xc\"","--cfg","feature=\"unproven\"","-C","metadata=72fbe27cc3c679a0","-C","extra-filename=-72fbe27cc3c679a0","--out-dir","/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/ahmed/Desktop/11-usart/target/rls/debug/deps","--extern","bare_metal=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libbare_metal-66ff4debce65ac93.rmeta","--extern","cast=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libcast-793a67a269df0196.rmeta","--extern","cortex_m=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m-f3b64125eb33b845.rmeta","--extern","cortex_m_rt=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m_rt-a3208a5ad9d98d98.rmeta","--extern","embedded_hal=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_hal-493ad556d7bd9e98.rmeta","--extern","nb=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libnb-19e7eceb01111c26.rmeta","--extern","stable_deref_trait=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libstable_deref_trait-d563915e3d159dc7.rmeta","--extern","stm32_usbd=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libstm32_usbd-50286bf1e70b5a0f.rmeta","--extern","stm32f3=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libstm32f3-e90d910898d82aab.rmeta","--extern","void=/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libvoid-7324c04fd9d96dbc.rmeta","--cap-lints","allow","-L","/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-84dd06c3578053cc/out","-L","/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-rt-ae55d8bdb72a6c93/out","--error-format=json","--sysroot","/home/ahmed/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ahmed/Desktop/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libstm32f3xx_hal-72fbe27cc3c679a0.rmeta"},"prelude":{"crate_id":{"name":"stm32f3xx_hal","disambiguator":[1090887933377402038,17572414820506201971]},"crate_root":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src","external_crates":[{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11055210636768043508,18347481556332092962]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11438832063202011998,2578949194091112984]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16901179735376980002,15162046457271970232]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":4,"id":{"name":"embedded_hal","disambiguator":[5267652267295389575,7440469806649201608]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":5,"id":{"name":"nb","disambiguator":[6034300031917040795,7173618100713227651]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":6,"id":{"name":"nb","disambiguator":[10157251864941512712,14523823296957149570]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","num":7,"id":{"name":"void","disambiguator":[16308555866543488596,2406145688992491241]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":8,"id":{"name":"stm32f3","disambiguator":[6691668394080901740,8786711019842572691]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":9,"id":{"name":"bare_metal","disambiguator":[1320292694172104525,7578830623839211333]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","num":10,"id":{"name":"cortex_m","disambiguator":[4908261582106634343,13726372085474969642]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":11,"id":{"name":"aligned","disambiguator":[1774719388906949503,3318224705119294696]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":12,"id":{"name":"as_slice","disambiguator":[14277599473460200651,11945765308395761879]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":13,"id":{"name":"generic_array","disambiguator":[10811824531612108952,3811730304125897508]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":14,"id":{"name":"typenum","disambiguator":[15876957592069402905,18313140007321998368]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":15,"id":{"name":"generic_array","disambiguator":[16075752171290274438,16907954510599217481]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":16,"id":{"name":"generic_array","disambiguator":[15771178085845624948,15946173496736449589]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","num":17,"id":{"name":"stable_deref_trait","disambiguator":[207006333809659305,8139375701845866797]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":18,"id":{"name":"volatile_register","disambiguator":[2534866100068809497,793077121998474686]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","num":19,"id":{"name":"vcell","disambiguator":[7991288421405141906,16197675892659330126]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","num":20,"id":{"name":"cast","disambiguator":[9456361920751585793,17304964995553930704]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","num":21,"id":{"name":"stm32_usbd","disambiguator":[7219775060318649938,6511278129249729468]}},{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","num":22,"id":{"name":"usb_device","disambiguator":[7154430424343378998,7655005019840905899]}}],"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":0,"byte_end":3853,"line_start":1,"line_end":149,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2179,"byte_end":2191,"line_start":80,"line_end":80,"column_start":9,"column_end":21},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2195,"byte_end":2198,"line_start":80,"line_end":80,"column_start":25,"column_end":28},"name":"hal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":0},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2209,"byte_end":2211,"line_start":82,"line_end":82,"column_start":9,"column_end":11},"alias_span":null,"name":"nb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":19},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2225,"byte_end":2230,"line_start":83,"line_end":83,"column_start":13,"column_end":18},"alias_span":null,"name":"block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":73},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2440,"byte_end":2449,"line_start":92,"line_end":92,"column_start":18,"column_end":27},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2453,"byte_end":2456,"line_start":92,"line_end":92,"column_start":31,"column_end":34},"name":"pac","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":73},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2853,"byte_end":2856,"line_start":105,"line_end":105,"column_start":16,"column_end":19},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2860,"byte_end":2865,"line_start":105,"line_end":105,"column_start":23,"column_end":28},"name":"stm32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183278,"byte_end":183284,"line_start":4,"line_end":4,"column_start":21,"column_end":27},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183288,"byte_end":183313,"line_start":4,"line_end":4,"column_start":31,"column_end":56},"name":"_stm32f3xx_hal_dma_DmaExt","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183337,"byte_end":183345,"line_start":5,"line_end":5,"column_start":23,"column_end":31},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183349,"byte_end":183378,"line_start":5,"line_end":5,"column_start":35,"column_end":64},"name":"_stm32f3xx_hal_flash_FlashExt","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183401,"byte_end":183408,"line_start":6,"line_end":6,"column_start":22,"column_end":29},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183412,"byte_end":183439,"line_start":6,"line_end":6,"column_start":33,"column_end":60},"name":"_stm32f3xx_hal_gpio_GpioExt","value":"","parent":{"krate":0,"index":411}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183470,"byte_end":183471,"line_start":7,"line_end":7,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183493,"byte_end":183499,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183503,"byte_end":183528,"line_start":8,"line_end":8,"column_start":31,"column_end":56},"name":"_stm32f3xx_hal_rcc_RccExt","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":0,"index":761},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183551,"byte_end":183557,"line_start":9,"line_end":9,"column_start":22,"column_end":28},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183561,"byte_end":183587,"line_start":9,"line_end":9,"column_start":32,"column_end":58},"name":"_stm32f3xx_hal_time_U32Ext","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":4,"index":147},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183657,"byte_end":183665,"line_start":12,"line_end":12,"column_start":23,"column_end":31},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183669,"byte_end":183699,"line_start":12,"line_end":12,"column_start":35,"column_end":65},"name":"_embedded_hal_digital_InputPin","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":4,"index":127},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183723,"byte_end":183732,"line_start":13,"line_end":13,"column_start":23,"column_end":32},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183736,"byte_end":183767,"line_start":13,"line_end":13,"column_start":36,"column_end":67},"name":"_embedded_hal_digital_OutputPin","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183791,"byte_end":183808,"line_start":14,"line_end":14,"column_start":23,"column_end":40},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183812,"byte_end":183851,"line_start":14,"line_end":14,"column_start":44,"column_end":83},"name":"_embedded_hal_digital_StatefulOutputPin","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":4,"index":134},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183875,"byte_end":183894,"line_start":15,"line_end":15,"column_start":23,"column_end":42},"alias_span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183898,"byte_end":183939,"line_start":15,"line_end":15,"column_start":46,"column_end":87},"name":"_embedded_hal_digital_ToggleableOutputPin","value":"","parent":{"krate":0,"index":411}},{"kind":"Use","ref_id":{"krate":4,"index":352},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":269551,"byte_end":269555,"line_start":6,"line_end":6,"column_start":27,"column_end":31},"alias_span":null,"name":"Mode","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":4,"index":338},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":269557,"byte_end":269562,"line_start":6,"line_end":6,"column_start":33,"column_end":38},"alias_span":null,"name":"Phase","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":4,"index":324},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":269564,"byte_end":269572,"line_start":6,"line_end":6,"column_start":40,"column_end":48},"alias_span":null,"name":"Polarity","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":21,"index":29},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293419,"byte_end":293425,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"alias_span":null,"name":"UsbBus","value":"","parent":{"krate":0,"index":821}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":0,"byte_end":3853,"line_start":1,"line_end":149,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":85},{"krate":0,"index":111},{"krate":0,"index":289},{"krate":0,"index":303},{"krate":0,"index":365},{"krate":0,"index":411},{"krate":0,"index":423},{"krate":0,"index":553},{"krate":0,"index":637},{"krate":0,"index":704},{"krate":0,"index":758},{"krate":0,"index":785},{"krate":0,"index":821},{"krate":0,"index":848}],"decl_id":null,"docs":" # Selecting the right chip","sig":null,"attributes":[{"value":"!\n # Selecting the right chip\n\n   This crate requires you to specify your target chip as a feature.\n\n   Please select one of the following\n\n   (Note: `x` denotes any character in [a-z])\n   *   stm32f301\n   *   stm32f318\n   *   stm32f302xb\n   *   stm32f302xc\n   *   stm32f302xd\n   *   stm32f302xe\n   *   stm32f303xb\n   *   stm32f303xc\n   *   stm32f303xd\n   *   stm32f303xe\n   *   stm32f303x6\n   *   stm32f303x8\n   *   stm32f373\n   *   stm32f378\n   *   stm32f334\n   *   stm32f328\n   *   stm32f358\n   *   stm32f398\n\n   Example: The STM32F3Discovery board has a STM32F303VCT6 chip.\n   So you want to expand your call to `cargo` with `--features stm32f303xc`.\n\n   For more information, see the [README](https://github.com/stm32-rs/stm32f3xx-hal/blob/master/README.md#selecting-the-right-chip)\n*/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":0,"byte_end":792,"line_start":1,"line_end":32,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":793,"byte_end":803,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":804,"byte_end":835,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adc","qualname":"::adc","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":41},{"krate":0,"index":47},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":885},{"krate":0,"index":892},{"krate":0,"index":891},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":894},{"krate":0,"index":908},{"krate":0,"index":907},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":1060},{"krate":0,"index":1068},{"krate":0,"index":1114},{"krate":0,"index":1064},{"krate":0,"index":1119},{"krate":0,"index":1165},{"krate":0,"index":1170},{"krate":0,"index":1178},{"krate":0,"index":1224},{"krate":0,"index":1174},{"krate":0,"index":1229},{"krate":0,"index":1275}],"decl_id":null,"docs":" API for the ADC (Analog to Digital Converter)","sig":null,"attributes":[{"value":"cfg(feature = \"stm32f303\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2956,"byte_end":2985,"line_start":111,"line_end":111,"column_start":1,"column_end":30}},{"value":"! API for the ADC (Analog to Digital Converter)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":3855,"byte_end":3904,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":3905,"byte_end":3908,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":3909,"byte_end":3923,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"! Check `adc.rs` in the examples folder.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":3924,"byte_end":3966,"line_start":4,"line_end":4,"column_start":1,"column_end":43}},{"value":"! It can be built for the STM32F3Discovery running","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":3967,"byte_end":4019,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"! `cargo build --example adc --features=stm32f303xc`","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":4020,"byte_end":4074,"line_start":6,"line_end":6,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":41},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":4792,"byte_end":4795,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"Adc","qualname":"::adc::Adc","value":"Adc { rb }","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" ADC configuration\n","sig":null,"attributes":[{"value":"/ ADC configuration","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":4600,"byte_end":4621,"line_start":32,"line_end":32,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":43},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":4811,"byte_end":4813,"line_start":36,"line_end":36,"column_start":9,"column_end":11},"name":"rb","qualname":"::adc::Adc::rb","value":"ADC","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":48},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5190,"byte_end":5193,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"T_1","qualname":"::adc::SampleTime::T_1","value":"SampleTime::T_1","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":50},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5199,"byte_end":5202,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"T_2","qualname":"::adc::SampleTime::T_2","value":"SampleTime::T_2","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":52},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5208,"byte_end":5211,"line_start":51,"line_end":51,"column_start":5,"column_end":8},"name":"T_4","qualname":"::adc::SampleTime::T_4","value":"SampleTime::T_4","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":54},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5217,"byte_end":5220,"line_start":52,"line_end":52,"column_start":5,"column_end":8},"name":"T_7","qualname":"::adc::SampleTime::T_7","value":"SampleTime::T_7","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":56},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5226,"byte_end":5230,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"name":"T_19","qualname":"::adc::SampleTime::T_19","value":"SampleTime::T_19","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":58},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5236,"byte_end":5240,"line_start":54,"line_end":54,"column_start":5,"column_end":9},"name":"T_61","qualname":"::adc::SampleTime::T_61","value":"SampleTime::T_61","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":60},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5246,"byte_end":5251,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"T_181","qualname":"::adc::SampleTime::T_181","value":"SampleTime::T_181","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":62},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5257,"byte_end":5262,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"T_601","qualname":"::adc::SampleTime::T_601","value":"SampleTime::T_601","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":47},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5173,"byte_end":5183,"line_start":48,"line_end":48,"column_start":10,"column_end":20},"name":"SampleTime","qualname":"::adc::SampleTime","value":"SampleTime::{T_1, T_2, T_4, T_7, T_19, T_61, T_181, T_601}","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62}],"decl_id":null,"docs":" ADC sampling time","sig":null,"attributes":[{"value":"/ ADC sampling time","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":4906,"byte_end":4927,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":4928,"byte_end":4931,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Each channel can be sampled with a different sample time.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":4932,"byte_end":4993,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/ There is always an overhead of 13 ADC clock cycles.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":4994,"byte_end":5049,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ E.g. For Sampletime T_19 the total conversion time (in ADC clock cycles) is","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5050,"byte_end":5129,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ 13 + 19 = 32 ADC Clock Cycles","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5130,"byte_end":5163,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5968,"byte_end":5975,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"OneShot","qualname":"::adc::OperationMode::OneShot","value":"OperationMode::OneShot","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":885},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5948,"byte_end":5961,"line_start":85,"line_end":85,"column_start":10,"column_end":23},"name":"OperationMode","qualname":"::adc::OperationMode","value":"OperationMode::{OneShot}","parent":null,"children":[{"krate":0,"index":886}],"decl_id":null,"docs":" ADC operation mode\n","sig":null,"attributes":[{"value":"/ ADC operation mode","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5861,"byte_end":5883,"line_start":83,"line_end":83,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":895},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6107,"byte_end":6115,"line_start":94,"line_end":94,"column_start":5,"column_end":13},"name":"SYNCDIV1","qualname":"::adc::CkMode::SYNCDIV1","value":"CkMode::SYNCDIV1","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":898},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6125,"byte_end":6133,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"name":"SYNCDIV2","qualname":"::adc::CkMode::SYNCDIV2","value":"CkMode::SYNCDIV2","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6143,"byte_end":6151,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"SYNCDIV4","qualname":"::adc::CkMode::SYNCDIV4","value":"CkMode::SYNCDIV4","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":894},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6069,"byte_end":6075,"line_start":92,"line_end":92,"column_start":10,"column_end":16},"name":"CkMode","qualname":"::adc::CkMode","value":"CkMode::{SYNCDIV1, SYNCDIV2, SYNCDIV4}","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901}],"decl_id":null,"docs":" ADC CkMode\n","sig":null,"attributes":[{"value":"/ ADC CkMode","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6014,"byte_end":6028,"line_start":90,"line_end":90,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":73},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6745,"byte_end":6750,"line_start":120,"line_end":120,"column_start":5,"column_end":10},"name":"Right","qualname":"::adc::Align::Right","value":"Align::Right","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Right alignment of output data\n","sig":null,"attributes":[{"value":"/ Right alignment of output data","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6706,"byte_end":6740,"line_start":119,"line_end":119,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":75},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6794,"byte_end":6798,"line_start":122,"line_end":122,"column_start":5,"column_end":9},"name":"Left","qualname":"::adc::Align::Left","value":"Align::Left","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Left alignment of output data\n","sig":null,"attributes":[{"value":"/ Left alignment of output data","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6756,"byte_end":6789,"line_start":121,"line_end":121,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":72},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6694,"byte_end":6699,"line_start":118,"line_end":118,"column_start":10,"column_end":15},"name":"Align","qualname":"::adc::Align","value":"Align::{Right, Left}","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75}],"decl_id":null,"docs":" ADC data register alignment\n","sig":null,"attributes":[{"value":"/ ADC data register alignment","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6653,"byte_end":6684,"line_start":117,"line_end":117,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":20851,"byte_end":20855,"line_start":536,"line_end":536,"column_start":12,"column_end":16},"name":"adc1","qualname":"<Adc<ADC1>>::adc1","value":"fn (rb: ADC1, adc_common: &mut ADC1_2, ahb: &mut AHB, ckmode: CkMode, clocks: Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Init a new ADC","sig":null,"attributes":[{"value":"/ Init a new ADC","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10405,"byte_end":10423,"line_start":284,"line_end":284,"column_start":17,"column_end":35}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10440,"byte_end":10443,"line_start":285,"line_end":285,"column_start":17,"column_end":20}},{"value":"/ Enables the clock, performs a calibration and enables the ADC","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10460,"byte_end":10525,"line_start":286,"line_end":286,"column_start":17,"column_end":82}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10542,"byte_end":10545,"line_start":287,"line_end":287,"column_start":17,"column_end":20}},{"value":"/ # Panics","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10562,"byte_end":10574,"line_start":288,"line_end":288,"column_start":17,"column_end":29}},{"value":"/ If one of the following occurs:","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10591,"byte_end":10626,"line_start":289,"line_end":289,"column_start":17,"column_end":52}},{"value":"/ * the clocksetting is not well defined.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10643,"byte_end":10686,"line_start":290,"line_end":290,"column_start":17,"column_end":60}},{"value":"/ * the clock was already enabled with a different setting","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10703,"byte_end":10763,"line_start":291,"line_end":291,"column_start":17,"column_end":77}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10780,"byte_end":10783,"line_start":292,"line_end":292,"column_start":17,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":20869,"byte_end":20873,"line_start":537,"line_end":537,"column_start":12,"column_end":16},"name":"adc2","qualname":"<Adc<ADC2>>::adc2","value":"fn (rb: ADC2, adc_common: &mut ADC1_2, ahb: &mut AHB, ckmode: CkMode, clocks: Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Init a new ADC","sig":null,"attributes":[{"value":"/ Init a new ADC","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10405,"byte_end":10423,"line_start":284,"line_end":284,"column_start":17,"column_end":35}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10440,"byte_end":10443,"line_start":285,"line_end":285,"column_start":17,"column_end":20}},{"value":"/ Enables the clock, performs a calibration and enables the ADC","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10460,"byte_end":10525,"line_start":286,"line_end":286,"column_start":17,"column_end":82}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10542,"byte_end":10545,"line_start":287,"line_end":287,"column_start":17,"column_end":20}},{"value":"/ # Panics","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10562,"byte_end":10574,"line_start":288,"line_end":288,"column_start":17,"column_end":29}},{"value":"/ If one of the following occurs:","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10591,"byte_end":10626,"line_start":289,"line_end":289,"column_start":17,"column_end":52}},{"value":"/ * the clocksetting is not well defined.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10643,"byte_end":10686,"line_start":290,"line_end":290,"column_start":17,"column_end":60}},{"value":"/ * the clock was already enabled with a different setting","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10703,"byte_end":10763,"line_start":291,"line_end":291,"column_start":17,"column_end":77}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10780,"byte_end":10783,"line_start":292,"line_end":292,"column_start":17,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":21033,"byte_end":21037,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"adc3","qualname":"<Adc<ADC3>>::adc3","value":"fn (rb: ADC3, adc_common: &mut ADC3_4, ahb: &mut AHB, ckmode: CkMode, clocks: Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Init a new ADC","sig":null,"attributes":[{"value":"/ Init a new ADC","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10405,"byte_end":10423,"line_start":284,"line_end":284,"column_start":17,"column_end":35}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10440,"byte_end":10443,"line_start":285,"line_end":285,"column_start":17,"column_end":20}},{"value":"/ Enables the clock, performs a calibration and enables the ADC","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10460,"byte_end":10525,"line_start":286,"line_end":286,"column_start":17,"column_end":82}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10542,"byte_end":10545,"line_start":287,"line_end":287,"column_start":17,"column_end":20}},{"value":"/ # Panics","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10562,"byte_end":10574,"line_start":288,"line_end":288,"column_start":17,"column_end":29}},{"value":"/ If one of the following occurs:","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10591,"byte_end":10626,"line_start":289,"line_end":289,"column_start":17,"column_end":52}},{"value":"/ * the clocksetting is not well defined.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10643,"byte_end":10686,"line_start":290,"line_end":290,"column_start":17,"column_end":60}},{"value":"/ * the clock was already enabled with a different setting","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10703,"byte_end":10763,"line_start":291,"line_end":291,"column_start":17,"column_end":77}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10780,"byte_end":10783,"line_start":292,"line_end":292,"column_start":17,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":21051,"byte_end":21055,"line_start":547,"line_end":547,"column_start":12,"column_end":16},"name":"adc4","qualname":"<Adc<ADC4>>::adc4","value":"fn (rb: ADC4, adc_common: &mut ADC3_4, ahb: &mut AHB, ckmode: CkMode, clocks: Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Init a new ADC","sig":null,"attributes":[{"value":"/ Init a new ADC","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10405,"byte_end":10423,"line_start":284,"line_end":284,"column_start":17,"column_end":35}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10440,"byte_end":10443,"line_start":285,"line_end":285,"column_start":17,"column_end":20}},{"value":"/ Enables the clock, performs a calibration and enables the ADC","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10460,"byte_end":10525,"line_start":286,"line_end":286,"column_start":17,"column_end":82}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10542,"byte_end":10545,"line_start":287,"line_end":287,"column_start":17,"column_end":20}},{"value":"/ # Panics","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10562,"byte_end":10574,"line_start":288,"line_end":288,"column_start":17,"column_end":29}},{"value":"/ If one of the following occurs:","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10591,"byte_end":10626,"line_start":289,"line_end":289,"column_start":17,"column_end":52}},{"value":"/ * the clocksetting is not well defined.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10643,"byte_end":10686,"line_start":290,"line_end":290,"column_start":17,"column_end":60}},{"value":"/ * the clock was already enabled with a different setting","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10703,"byte_end":10763,"line_start":291,"line_end":291,"column_start":17,"column_end":77}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":10780,"byte_end":10783,"line_start":292,"line_end":292,"column_start":17,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay","qualname":"::delay","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109}],"decl_id":null,"docs":" Delays\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2999,"byte_end":3034,"line_start":113,"line_end":113,"column_start":1,"column_end":36}},{"value":"! Delays","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21061,"byte_end":21071,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21304,"byte_end":21309,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Delay","qualname":"::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" System timer (SysTick) as a delay provider\n","sig":null,"attributes":[{"value":"/ System timer (SysTick) as a delay provider","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21246,"byte_end":21292,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21441,"byte_end":21444,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<Delay>::new","value":"fn (mut syst: SYST, clocks: Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the system timer (SysTick) as a delay provider\n","sig":null,"attributes":[{"value":"/ Configures the system timer (SysTick) as a delay provider","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21368,"byte_end":21429,"line_start":17,"line_end":17,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21642,"byte_end":21646,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"free","qualname":"<Delay>::free","value":"fn (self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":" Releases the system timer (SysTick) resource\n","sig":null,"attributes":[{"value":"/ Releases the system timer (SysTick) resource","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21582,"byte_end":21630,"line_start":24,"line_end":24,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":111},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dma","qualname":"::dma","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":151},{"krate":0,"index":156},{"krate":0,"index":163},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":179},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":1280},{"krate":0,"index":1284},{"krate":0,"index":1288},{"krate":0,"index":1292},{"krate":0,"index":1296},{"krate":0,"index":1300},{"krate":0,"index":1304},{"krate":0,"index":1308},{"krate":0,"index":1312},{"krate":0,"index":1316},{"krate":0,"index":1320},{"krate":0,"index":1324},{"krate":0,"index":1328},{"krate":0,"index":1332},{"krate":0,"index":1336},{"krate":0,"index":1340},{"krate":0,"index":1344},{"krate":0,"index":1348},{"krate":0,"index":1352},{"krate":0,"index":1356},{"krate":0,"index":1360},{"krate":0,"index":1364},{"krate":0,"index":1368},{"krate":0,"index":1372},{"krate":0,"index":1376},{"krate":0,"index":1380},{"krate":0,"index":1384},{"krate":0,"index":1388},{"krate":0,"index":1392},{"krate":0,"index":1396},{"krate":0,"index":1400},{"krate":0,"index":1404},{"krate":0,"index":1408},{"krate":0,"index":1412},{"krate":0,"index":1416},{"krate":0,"index":1420},{"krate":0,"index":1424},{"krate":0,"index":1428},{"krate":0,"index":1432},{"krate":0,"index":1436},{"krate":0,"index":1440},{"krate":0,"index":1444},{"krate":0,"index":1448},{"krate":0,"index":1452},{"krate":0,"index":1456},{"krate":0,"index":1460},{"krate":0,"index":1464},{"krate":0,"index":1468},{"krate":0,"index":1472},{"krate":0,"index":1476},{"krate":0,"index":1480},{"krate":0,"index":1484},{"krate":0,"index":1488},{"krate":0,"index":1492},{"krate":0,"index":1496},{"krate":0,"index":1500},{"krate":0,"index":1504},{"krate":0,"index":1508},{"krate":0,"index":1512},{"krate":0,"index":1516},{"krate":0,"index":1520},{"krate":0,"index":1524},{"krate":0,"index":1528},{"krate":0,"index":1532},{"krate":0,"index":1536},{"krate":0,"index":1540},{"krate":0,"index":1544},{"krate":0,"index":1548},{"krate":0,"index":1552},{"krate":0,"index":1556},{"krate":0,"index":1560},{"krate":0,"index":1564},{"krate":0,"index":1568},{"krate":0,"index":1572},{"krate":0,"index":1576},{"krate":0,"index":1580},{"krate":0,"index":1584},{"krate":0,"index":1588},{"krate":0,"index":1592},{"krate":0,"index":1596},{"krate":0,"index":1600},{"krate":0,"index":1604},{"krate":0,"index":1608},{"krate":0,"index":1612},{"krate":0,"index":1616},{"krate":0,"index":1620},{"krate":0,"index":1624},{"krate":0,"index":1628},{"krate":0,"index":1632},{"krate":0,"index":1636},{"krate":0,"index":1640},{"krate":0,"index":1644},{"krate":0,"index":1648},{"krate":0,"index":1652},{"krate":0,"index":1656},{"krate":0,"index":1660},{"krate":0,"index":1664},{"krate":0,"index":1668},{"krate":0,"index":1672},{"krate":0,"index":1676},{"krate":0,"index":1680},{"krate":0,"index":1684},{"krate":0,"index":1688},{"krate":0,"index":1692},{"krate":0,"index":1696},{"krate":0,"index":1700},{"krate":0,"index":1704},{"krate":0,"index":1708},{"krate":0,"index":1712},{"krate":0,"index":1716},{"krate":0,"index":1720},{"krate":0,"index":1724},{"krate":0,"index":1728},{"krate":0,"index":1732},{"krate":0,"index":1736},{"krate":0,"index":1740},{"krate":0,"index":1744},{"krate":0,"index":1748},{"krate":0,"index":1752},{"krate":0,"index":1756},{"krate":0,"index":1760},{"krate":0,"index":1764},{"krate":0,"index":1768},{"krate":0,"index":1772},{"krate":0,"index":1776},{"krate":0,"index":1780},{"krate":0,"index":1784},{"krate":0,"index":1788},{"krate":0,"index":1792},{"krate":0,"index":1796},{"krate":0,"index":1800},{"krate":0,"index":1804},{"krate":0,"index":1808},{"krate":0,"index":1812},{"krate":0,"index":1816},{"krate":0,"index":1820},{"krate":0,"index":1824},{"krate":0,"index":1828},{"krate":0,"index":1832},{"krate":0,"index":1836},{"krate":0,"index":1840},{"krate":0,"index":1844},{"krate":0,"index":1848},{"krate":0,"index":1852},{"krate":0,"index":1856},{"krate":0,"index":1860},{"krate":0,"index":1864},{"krate":0,"index":1868},{"krate":0,"index":1872},{"krate":0,"index":1876},{"krate":0,"index":1880},{"krate":0,"index":1884},{"krate":0,"index":1888},{"krate":0,"index":1892},{"krate":0,"index":1896},{"krate":0,"index":1900},{"krate":0,"index":1904},{"krate":0,"index":1908},{"krate":0,"index":1912},{"krate":0,"index":1916},{"krate":0,"index":1920},{"krate":0,"index":1924},{"krate":0,"index":1928},{"krate":0,"index":1932},{"krate":0,"index":1936},{"krate":0,"index":1940},{"krate":0,"index":1944},{"krate":0,"index":1948},{"krate":0,"index":1952},{"krate":0,"index":1956},{"krate":0,"index":1960},{"krate":0,"index":1964},{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":1976},{"krate":0,"index":1980},{"krate":0,"index":1984},{"krate":0,"index":1988},{"krate":0,"index":1992},{"krate":0,"index":1996},{"krate":0,"index":2000},{"krate":0,"index":2004},{"krate":0,"index":2008},{"krate":0,"index":2012},{"krate":0,"index":2016},{"krate":0,"index":2020},{"krate":0,"index":2024},{"krate":0,"index":2028},{"krate":0,"index":2032},{"krate":0,"index":2036},{"krate":0,"index":2040},{"krate":0,"index":2044},{"krate":0,"index":2048},{"krate":0,"index":2052},{"krate":0,"index":2056},{"krate":0,"index":2060},{"krate":0,"index":2064},{"krate":0,"index":2068},{"krate":0,"index":2072},{"krate":0,"index":2076},{"krate":0,"index":2080},{"krate":0,"index":2084},{"krate":0,"index":2088},{"krate":0,"index":2092},{"krate":0,"index":2096},{"krate":0,"index":2100},{"krate":0,"index":2104},{"krate":0,"index":2108},{"krate":0,"index":2112},{"krate":0,"index":2116},{"krate":0,"index":2120},{"krate":0,"index":2124},{"krate":0,"index":2128},{"krate":0,"index":2132},{"krate":0,"index":2136},{"krate":0,"index":2140},{"krate":0,"index":2144},{"krate":0,"index":2148},{"krate":0,"index":2152},{"krate":0,"index":2156},{"krate":0,"index":2160},{"krate":0,"index":2164},{"krate":0,"index":2168},{"krate":0,"index":2172},{"krate":0,"index":2176},{"krate":0,"index":2180},{"krate":0,"index":2184},{"krate":0,"index":2188},{"krate":0,"index":2192},{"krate":0,"index":2196},{"krate":0,"index":2200},{"krate":0,"index":2204},{"krate":0,"index":2208},{"krate":0,"index":2212},{"krate":0,"index":2216},{"krate":0,"index":2220},{"krate":0,"index":2224},{"krate":0,"index":2228},{"krate":0,"index":2232},{"krate":0,"index":2236},{"krate":0,"index":2240},{"krate":0,"index":2244},{"krate":0,"index":2248},{"krate":0,"index":2252},{"krate":0,"index":2256},{"krate":0,"index":2260},{"krate":0,"index":2264},{"krate":0,"index":2268},{"krate":0,"index":2272},{"krate":0,"index":2276},{"krate":0,"index":2280},{"krate":0,"index":2284},{"krate":0,"index":2288},{"krate":0,"index":2292},{"krate":0,"index":2296},{"krate":0,"index":2300},{"krate":0,"index":2304},{"krate":0,"index":2308},{"krate":0,"index":2312},{"krate":0,"index":2316},{"krate":0,"index":2320},{"krate":0,"index":2324},{"krate":0,"index":2328},{"krate":0,"index":2332},{"krate":0,"index":2336},{"krate":0,"index":2340},{"krate":0,"index":2344},{"krate":0,"index":2348},{"krate":0,"index":2352},{"krate":0,"index":2356},{"krate":0,"index":2360},{"krate":0,"index":2364},{"krate":0,"index":2368},{"krate":0,"index":2372},{"krate":0,"index":2376},{"krate":0,"index":2380},{"krate":0,"index":2384},{"krate":0,"index":2388},{"krate":0,"index":2392},{"krate":0,"index":2396},{"krate":0,"index":2400},{"krate":0,"index":2404},{"krate":0,"index":2408},{"krate":0,"index":2412},{"krate":0,"index":2416},{"krate":0,"index":2420},{"krate":0,"index":2424},{"krate":0,"index":2428},{"krate":0,"index":2432},{"krate":0,"index":2436},{"krate":0,"index":2440},{"krate":0,"index":2444},{"krate":0,"index":2448},{"krate":0,"index":2452},{"krate":0,"index":2456},{"krate":0,"index":2460},{"krate":0,"index":2464},{"krate":0,"index":2468},{"krate":0,"index":2472},{"krate":0,"index":2476},{"krate":0,"index":2480},{"krate":0,"index":2484},{"krate":0,"index":2488},{"krate":0,"index":2492},{"krate":0,"index":2496},{"krate":0,"index":2500},{"krate":0,"index":2504},{"krate":0,"index":2508},{"krate":0,"index":2512},{"krate":0,"index":2516},{"krate":0,"index":2520},{"krate":0,"index":2524},{"krate":0,"index":2528},{"krate":0,"index":2532},{"krate":0,"index":2536},{"krate":0,"index":2540},{"krate":0,"index":2544},{"krate":0,"index":2548},{"krate":0,"index":2552},{"krate":0,"index":2556},{"krate":0,"index":2560},{"krate":0,"index":2564},{"krate":0,"index":2568},{"krate":0,"index":2572},{"krate":0,"index":2576},{"krate":0,"index":2580},{"krate":0,"index":2584},{"krate":0,"index":2588},{"krate":0,"index":2592},{"krate":0,"index":2596},{"krate":0,"index":2600},{"krate":0,"index":2604},{"krate":0,"index":2608},{"krate":0,"index":2612},{"krate":0,"index":2616},{"krate":0,"index":2620},{"krate":0,"index":2624},{"krate":0,"index":2628},{"krate":0,"index":2632},{"krate":0,"index":2636},{"krate":0,"index":2640},{"krate":0,"index":2644},{"krate":0,"index":2648},{"krate":0,"index":2652},{"krate":0,"index":2656},{"krate":0,"index":2660},{"krate":0,"index":2664},{"krate":0,"index":2668},{"krate":0,"index":2672},{"krate":0,"index":2676},{"krate":0,"index":2680},{"krate":0,"index":2684},{"krate":0,"index":2688},{"krate":0,"index":2692},{"krate":0,"index":2696},{"krate":0,"index":2700},{"krate":0,"index":2704},{"krate":0,"index":2708},{"krate":0,"index":2712},{"krate":0,"index":2716},{"krate":0,"index":2720},{"krate":0,"index":2724},{"krate":0,"index":2728},{"krate":0,"index":2732},{"krate":0,"index":2736},{"krate":0,"index":2740},{"krate":0,"index":2744},{"krate":0,"index":2748},{"krate":0,"index":2752},{"krate":0,"index":2756},{"krate":0,"index":2760},{"krate":0,"index":2764},{"krate":0,"index":2768},{"krate":0,"index":2772},{"krate":0,"index":2776},{"krate":0,"index":2780},{"krate":0,"index":2784},{"krate":0,"index":2788},{"krate":0,"index":2792},{"krate":0,"index":2796},{"krate":0,"index":2800},{"krate":0,"index":2804},{"krate":0,"index":2808},{"krate":0,"index":2812},{"krate":0,"index":2816},{"krate":0,"index":2820},{"krate":0,"index":2824},{"krate":0,"index":2828},{"krate":0,"index":2832},{"krate":0,"index":2836},{"krate":0,"index":2840},{"krate":0,"index":2844},{"krate":0,"index":2848},{"krate":0,"index":2852},{"krate":0,"index":2856},{"krate":0,"index":2860},{"krate":0,"index":2864},{"krate":0,"index":2868},{"krate":0,"index":2872},{"krate":0,"index":2876},{"krate":0,"index":2880},{"krate":0,"index":2884},{"krate":0,"index":2888},{"krate":0,"index":2892},{"krate":0,"index":2896},{"krate":0,"index":2900},{"krate":0,"index":2904},{"krate":0,"index":2908},{"krate":0,"index":2912},{"krate":0,"index":2916},{"krate":0,"index":2920},{"krate":0,"index":2924},{"krate":0,"index":2928},{"krate":0,"index":2932},{"krate":0,"index":2936},{"krate":0,"index":2940},{"krate":0,"index":2944},{"krate":0,"index":2948},{"krate":0,"index":2952},{"krate":0,"index":2956},{"krate":0,"index":2960},{"krate":0,"index":2964},{"krate":0,"index":2968},{"krate":0,"index":2972},{"krate":0,"index":2976},{"krate":0,"index":2980},{"krate":0,"index":2984},{"krate":0,"index":2988},{"krate":0,"index":2992},{"krate":0,"index":2996},{"krate":0,"index":3000},{"krate":0,"index":3004},{"krate":0,"index":3008},{"krate":0,"index":3012},{"krate":0,"index":3016},{"krate":0,"index":3020},{"krate":0,"index":3024},{"krate":0,"index":3028},{"krate":0,"index":3032},{"krate":0,"index":3036},{"krate":0,"index":3040},{"krate":0,"index":3044},{"krate":0,"index":3048},{"krate":0,"index":3052},{"krate":0,"index":3056},{"krate":0,"index":3060},{"krate":0,"index":3064},{"krate":0,"index":3068},{"krate":0,"index":3072},{"krate":0,"index":3076},{"krate":0,"index":3080},{"krate":0,"index":3084},{"krate":0,"index":3088},{"krate":0,"index":3092},{"krate":0,"index":3096},{"krate":0,"index":3100},{"krate":0,"index":3104},{"krate":0,"index":3108},{"krate":0,"index":3112},{"krate":0,"index":3116},{"krate":0,"index":3120},{"krate":0,"index":3124},{"krate":0,"index":3128},{"krate":0,"index":3132},{"krate":0,"index":3136},{"krate":0,"index":3140},{"krate":0,"index":3144},{"krate":0,"index":3148},{"krate":0,"index":3152},{"krate":0,"index":3156},{"krate":0,"index":3160},{"krate":0,"index":3164},{"krate":0,"index":3168},{"krate":0,"index":3172},{"krate":0,"index":3176},{"krate":0,"index":3180},{"krate":0,"index":3184},{"krate":0,"index":3188},{"krate":0,"index":3192},{"krate":0,"index":3196},{"krate":0,"index":3200},{"krate":0,"index":3204},{"krate":0,"index":3208},{"krate":0,"index":3212},{"krate":0,"index":3216},{"krate":0,"index":3220},{"krate":0,"index":3224},{"krate":0,"index":3228},{"krate":0,"index":3232},{"krate":0,"index":3236},{"krate":0,"index":3240},{"krate":0,"index":3244},{"krate":0,"index":3248},{"krate":0,"index":3252},{"krate":0,"index":3256},{"krate":0,"index":3260},{"krate":0,"index":3264},{"krate":0,"index":3268},{"krate":0,"index":3272},{"krate":0,"index":3276},{"krate":0,"index":3280},{"krate":0,"index":3284},{"krate":0,"index":3288},{"krate":0,"index":3292},{"krate":0,"index":3296},{"krate":0,"index":3300},{"krate":0,"index":3304},{"krate":0,"index":3308},{"krate":0,"index":3312},{"krate":0,"index":3316},{"krate":0,"index":3320},{"krate":0,"index":3324},{"krate":0,"index":3328},{"krate":0,"index":3332},{"krate":0,"index":3336},{"krate":0,"index":3340},{"krate":0,"index":3344},{"krate":0,"index":3348},{"krate":0,"index":3352},{"krate":0,"index":3356},{"krate":0,"index":3360},{"krate":0,"index":3364},{"krate":0,"index":3368},{"krate":0,"index":3372},{"krate":0,"index":3376},{"krate":0,"index":3380},{"krate":0,"index":3384},{"krate":0,"index":3388},{"krate":0,"index":3392},{"krate":0,"index":3396},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":244},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":3400},{"krate":0,"index":3487},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3557}],"decl_id":null,"docs":" Direct memory access (DMA) controller","sig":null,"attributes":[{"value":"cfg(feature = \"stm32f303\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3050,"byte_end":3079,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"! Direct memory access (DMA) controller","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":22593,"byte_end":22634,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":22635,"byte_end":22638,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Currently DMA is only supported for STM32F303 MCUs.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":22639,"byte_end":22694,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23173,"byte_end":23179,"line_start":22,"line_end":22,"column_start":11,"column_end":17},"name":"DmaExt","qualname":"::dma::DmaExt","value":"DmaExt","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"decl_id":null,"docs":" Extension trait to split a DMA peripheral into independent channels\n","sig":null,"attributes":[{"value":"/ Extension trait to split a DMA peripheral into independent channels","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23091,"byte_end":23162,"line_start":21,"line_end":21,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":131},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23230,"byte_end":23238,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"name":"Channels","qualname":"::dma::DmaExt::Channels","value":"type Channels;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The type to split the DMA into\n","sig":null,"attributes":[{"value":"/ The type to split the DMA into","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23186,"byte_end":23220,"line_start":23,"line_end":23,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23296,"byte_end":23301,"line_start":27,"line_end":27,"column_start":8,"column_end":13},"name":"split","qualname":"::dma::DmaExt::split","value":"fn (self, ahb: &mut AHB) -> Self::Channels","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Split the DMA into independent channels\n","sig":null,"attributes":[{"value":"/ Split the DMA into independent channels","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23245,"byte_end":23288,"line_start":26,"line_end":26,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":133},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23393,"byte_end":23399,"line_start":31,"line_end":31,"column_start":11,"column_end":17},"name":"Target","qualname":"::dma::Target","value":"Target","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" Trait implemented by DMA targets.\n","sig":null,"attributes":[{"value":"/ Trait implemented by DMA targets.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23345,"byte_end":23382,"line_start":30,"line_end":30,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23442,"byte_end":23452,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"enable_dma","qualname":"::dma::Target::enable_dma","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Enable DMA on the target\n","sig":null,"attributes":[{"value":"/ Enable DMA on the target","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23406,"byte_end":23434,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23508,"byte_end":23519,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"disable_dma","qualname":"::dma::Target::disable_dma","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Disable DMA on the target\n","sig":null,"attributes":[{"value":"/ Disable DMA on the target","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23471,"byte_end":23500,"line_start":34,"line_end":34,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23589,"byte_end":23597,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Transfer","qualname":"::dma::Transfer","value":"Transfer {  }","parent":null,"children":[{"krate":0,"index":140}],"decl_id":null,"docs":" An in-progress one-shot DMA transfer\n","sig":null,"attributes":[{"value":"/ An in-progress one-shot DMA transfer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23537,"byte_end":23577,"line_start":38,"line_end":38,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23910,"byte_end":23921,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"start_write","qualname":"<Transfer<B, C, T>>::start_write","value":"fn (mut buffer: B, mut channel: C, target: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start a DMA write transfer.","sig":null,"attributes":[{"value":"/ Start a DMA write transfer.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23777,"byte_end":23808,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23813,"byte_end":23816,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23821,"byte_end":23833,"line_start":47,"line_end":47,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23838,"byte_end":23841,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Panics if the buffer is longer than 65535 words.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23846,"byte_end":23898,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":24851,"byte_end":24861,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"start_read","qualname":"<Transfer<B, C, T>>::start_read","value":"fn (buffer: B, mut channel: C, target: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start a DMA read transfer.","sig":null,"attributes":[{"value":"/ Start a DMA read transfer.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":24719,"byte_end":24749,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":24754,"byte_end":24757,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":24762,"byte_end":24774,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":24779,"byte_end":24782,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Panics if the buffer is longer than 65535 words.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":24787,"byte_end":24839,"line_start":74,"line_end":74,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":26328,"byte_end":26339,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"is_complete","qualname":"<Transfer<B, C, T>>::is_complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this transfer complete?\n","sig":null,"attributes":[{"value":"/ Is this transfer complete?","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":26286,"byte_end":26316,"line_start":121,"line_end":121,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":26550,"byte_end":26554,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"stop","qualname":"<Transfer<B, C, T>>::stop","value":"fn (mut self) -> (B, C, T)","parent":null,"children":[],"decl_id":null,"docs":" Stop this transfer and return ownership over its parts\n","sig":null,"attributes":[{"value":"/ Stop this transfer and return ownership over its parts","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":26480,"byte_end":26538,"line_start":127,"line_end":127,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":26803,"byte_end":26807,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"wait","qualname":"<Transfer<B, C, T>>::wait","value":"fn (self) -> (B, C, T)","parent":null,"children":[],"decl_id":null,"docs":" Block until this transfer is done and return ownership over its parts\n","sig":null,"attributes":[{"value":"/ Block until this transfer is done and return ownership over its parts","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":26718,"byte_end":26791,"line_start":135,"line_end":135,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":168},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28001,"byte_end":28011,"line_start":180,"line_end":180,"column_start":18,"column_end":28},"name":"ReadBuffer","qualname":"::dma::ReadBuffer","value":"ReadBuffer","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for reading.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for reading.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27457,"byte_end":27516,"line_start":168,"line_end":168,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27517,"byte_end":27520,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27521,"byte_end":27533,"line_start":170,"line_end":170,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27534,"byte_end":27537,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ The implementing type must be safe to use for DMA reads. This means:","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27538,"byte_end":27610,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27611,"byte_end":27614,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ - It must be a pointer that references the actual buffer.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27615,"byte_end":27676,"line_start":174,"line_end":174,"column_start":1,"column_end":62}},{"value":"/ - As long as no `&mut self` method is called on the implementing object:","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27677,"byte_end":27753,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/   - `read_buffer` must always return the same value, if called multiple","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27754,"byte_end":27829,"line_start":176,"line_end":176,"column_start":1,"column_end":76}},{"value":"/     times.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27830,"byte_end":27844,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"/   - The memory specified by the pointer and size returned by `read_buffer`","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27845,"byte_end":27923,"line_start":178,"line_end":178,"column_start":1,"column_end":79}},{"value":"/     must not be freed as long as `self` is not dropped.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27924,"byte_end":27983,"line_start":179,"line_end":179,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":169},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28023,"byte_end":28027,"line_start":181,"line_end":181,"column_start":10,"column_end":14},"name":"Word","qualname":"::dma::ReadBuffer::Word","value":"type Word;","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28405,"byte_end":28416,"line_start":194,"line_end":194,"column_start":15,"column_end":26},"name":"read_buffer","qualname":"::dma::ReadBuffer::read_buffer","value":"fn (&self) -> (*const Self::Word, usize)","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA reads.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA reads.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28034,"byte_end":28076,"line_start":183,"line_end":183,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28081,"byte_end":28084,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28089,"byte_end":28113,"line_start":185,"line_end":185,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28118,"byte_end":28121,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28126,"byte_end":28166,"line_start":187,"line_end":187,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28171,"byte_end":28197,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28202,"byte_end":28205,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28210,"byte_end":28222,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28227,"byte_end":28230,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28235,"byte_end":28309,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ methods on this object as long as the returned value is in use (by DMA).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28314,"byte_end":28390,"line_start":193,"line_end":193,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":171},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29114,"byte_end":29125,"line_start":211,"line_end":211,"column_start":18,"column_end":29},"name":"WriteBuffer","qualname":"::dma::WriteBuffer","value":"WriteBuffer","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for writing.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for writing.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28458,"byte_end":28517,"line_start":197,"line_end":197,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28518,"byte_end":28521,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28522,"byte_end":28534,"line_start":199,"line_end":199,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28535,"byte_end":28538,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ The implementing type must be safe to use for DMA writes. This means:","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28539,"byte_end":28612,"line_start":201,"line_end":201,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28613,"byte_end":28616,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ - It must be a pointer that references the actual buffer.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28617,"byte_end":28678,"line_start":203,"line_end":203,"column_start":1,"column_end":62}},{"value":"/ - `Target` must be a type that is valid for any possible byte pattern.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28679,"byte_end":28753,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"/ - As long as no `&mut self` method, except for `write_buffer`, is called on","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28754,"byte_end":28833,"line_start":205,"line_end":205,"column_start":1,"column_end":80}},{"value":"/   the implementing object:","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28834,"byte_end":28864,"line_start":206,"line_end":206,"column_start":1,"column_end":31}},{"value":"/   - `write_buffer` must always return the same value, if called multiple","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28865,"byte_end":28941,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/     times.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28942,"byte_end":28956,"line_start":208,"line_end":208,"column_start":1,"column_end":15}},{"value":"/   - The memory specified by the pointer and size returned by `write_buffer`","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":28957,"byte_end":29036,"line_start":209,"line_end":209,"column_start":1,"column_end":80}},{"value":"/     must not be freed as long as `self` is not dropped.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29037,"byte_end":29096,"line_start":210,"line_end":210,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":172},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29137,"byte_end":29141,"line_start":212,"line_end":212,"column_start":10,"column_end":14},"name":"Word","qualname":"::dma::WriteBuffer::Word","value":"type Word;","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29556,"byte_end":29568,"line_start":226,"line_end":226,"column_start":15,"column_end":27},"name":"write_buffer","qualname":"::dma::WriteBuffer::write_buffer","value":"fn (&mut self) -> (*mut Self::Word, usize)","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA writes.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA writes.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29148,"byte_end":29191,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29196,"byte_end":29199,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29204,"byte_end":29228,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29233,"byte_end":29236,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29241,"byte_end":29281,"line_start":218,"line_end":218,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29286,"byte_end":29312,"line_start":219,"line_end":219,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29317,"byte_end":29320,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29325,"byte_end":29337,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29342,"byte_end":29345,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29350,"byte_end":29424,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ methods, except for `write_buffer`, on this object as long as the","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29429,"byte_end":29498,"line_start":224,"line_end":224,"column_start":5,"column_end":74}},{"value":"/ returned value is in use (by DMA).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29503,"byte_end":29541,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":184},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30456,"byte_end":30460,"line_start":262,"line_end":262,"column_start":18,"column_end":22},"name":"Word","qualname":"::dma::Word","value":"Word","parent":null,"children":[],"decl_id":null,"docs":" Trait for DMA word types used by the blanket DMA buffer impls.","sig":null,"attributes":[{"value":"/ Trait for DMA word types used by the blanket DMA buffer impls.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30160,"byte_end":30226,"line_start":255,"line_end":255,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30227,"byte_end":30230,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30231,"byte_end":30243,"line_start":257,"line_end":257,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30244,"byte_end":30247,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Types that implement this trait must be valid for every possible byte","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30248,"byte_end":30321,"line_start":259,"line_end":259,"column_start":1,"column_end":74}},{"value":"/ pattern. This is to ensure that, whatever DMA writes into the buffer,","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30322,"byte_end":30395,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ we won't get UB due to invalid values.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30396,"byte_end":30438,"line_start":261,"line_end":261,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":188},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30876,"byte_end":30886,"line_start":277,"line_end":277,"column_start":18,"column_end":28},"name":"ReadTarget","qualname":"::dma::ReadTarget","value":"ReadTarget","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":" Trait for `Deref` targets used by the blanket `DmaReadBuffer` impl.","sig":null,"attributes":[{"value":"/ Trait for `Deref` targets used by the blanket `DmaReadBuffer` impl.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30549,"byte_end":30620,"line_start":268,"line_end":268,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30621,"byte_end":30624,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ This trait exists solely to work around","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30625,"byte_end":30668,"line_start":270,"line_end":270,"column_start":1,"column_end":44}},{"value":"/ https://github.com/rust-lang/rust/issues/20400.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30669,"byte_end":30720,"line_start":271,"line_end":271,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30721,"byte_end":30724,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30725,"byte_end":30737,"line_start":273,"line_end":273,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30738,"byte_end":30741,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ - `as_read_buffer` must adhere to the safety requirements","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30742,"byte_end":30803,"line_start":275,"line_end":275,"column_start":1,"column_end":62}},{"value":"/   documented for `DmaReadBuffer::dma_read_buffer`.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30804,"byte_end":30858,"line_start":276,"line_end":276,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":189},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30898,"byte_end":30902,"line_start":278,"line_end":278,"column_start":10,"column_end":14},"name":"Word","qualname":"::dma::ReadTarget::Word","value":"type Word: Word;","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":30918,"byte_end":30932,"line_start":280,"line_end":280,"column_start":8,"column_end":22},"name":"as_read_buffer","qualname":"::dma::ReadTarget::as_read_buffer","value":"fn (&self) -> (*const Self::Word, usize)","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":191},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31464,"byte_end":31475,"line_start":296,"line_end":296,"column_start":18,"column_end":29},"name":"WriteTarget","qualname":"::dma::WriteTarget","value":"WriteTarget","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"decl_id":null,"docs":" Trait for `DerefMut` targets used by the blanket `DmaWriteBuffer` impl.","sig":null,"attributes":[{"value":"/ Trait for `DerefMut` targets used by the blanket `DmaWriteBuffer` impl.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31130,"byte_end":31205,"line_start":287,"line_end":287,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31206,"byte_end":31209,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ This trait exists solely to work around","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31210,"byte_end":31253,"line_start":289,"line_end":289,"column_start":1,"column_end":44}},{"value":"/ https://github.com/rust-lang/rust/issues/20400.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31254,"byte_end":31305,"line_start":290,"line_end":290,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31306,"byte_end":31309,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31310,"byte_end":31322,"line_start":292,"line_end":292,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31323,"byte_end":31326,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ - `as_write_buffer` must adhere to the safety requirements","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31327,"byte_end":31389,"line_start":294,"line_end":294,"column_start":1,"column_end":63}},{"value":"/   documented for `DmaWriteBuffer::dma_write_buffer`.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31390,"byte_end":31446,"line_start":295,"line_end":295,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":192},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31487,"byte_end":31491,"line_start":297,"line_end":297,"column_start":10,"column_end":14},"name":"Word","qualname":"::dma::WriteTarget::Word","value":"type Word: Word;","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31507,"byte_end":31522,"line_start":299,"line_end":299,"column_start":8,"column_end":23},"name":"as_write_buffer","qualname":"::dma::WriteTarget::as_write_buffer","value":"fn (&mut self) -> (*mut Self::Word, usize)","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":211},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34003,"byte_end":34009,"line_start":382,"line_end":382,"column_start":5,"column_end":11},"name":"Enable","qualname":"::dma::Increment::Enable","value":"Increment::Enable","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":" Enable increment\n","sig":null,"attributes":[{"value":"/ Enable increment","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":33978,"byte_end":33998,"line_start":381,"line_end":381,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34041,"byte_end":34048,"line_start":384,"line_end":384,"column_start":5,"column_end":12},"name":"Disable","qualname":"::dma::Increment::Disable","value":"Increment::Disable","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":" Disable increment\n","sig":null,"attributes":[{"value":"/ Disable increment","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34015,"byte_end":34036,"line_start":383,"line_end":383,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":210},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":33962,"byte_end":33971,"line_start":380,"line_end":380,"column_start":10,"column_end":19},"name":"Increment","qualname":"::dma::Increment","value":"Increment::{Enable, Disable}","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":213}],"decl_id":null,"docs":" DMA address increment mode\n","sig":null,"attributes":[{"value":"/ DMA address increment mode","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":33922,"byte_end":33952,"line_start":379,"line_end":379,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":218},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34341,"byte_end":34344,"line_start":399,"line_end":399,"column_start":5,"column_end":8},"name":"Low","qualname":"::dma::Priority::Low","value":"Priority::Low","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Low\n","sig":null,"attributes":[{"value":"/ Low","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34329,"byte_end":34336,"line_start":398,"line_end":398,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":220},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34365,"byte_end":34371,"line_start":401,"line_end":401,"column_start":5,"column_end":11},"name":"Medium","qualname":"::dma::Priority::Medium","value":"Priority::Medium","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Medium\n","sig":null,"attributes":[{"value":"/ Medium","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34350,"byte_end":34360,"line_start":400,"line_end":400,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":222},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34390,"byte_end":34394,"line_start":403,"line_end":403,"column_start":5,"column_end":9},"name":"High","qualname":"::dma::Priority::High","value":"Priority::High","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" High\n","sig":null,"attributes":[{"value":"/ High","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34377,"byte_end":34385,"line_start":402,"line_end":402,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":224},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34418,"byte_end":34426,"line_start":405,"line_end":405,"column_start":5,"column_end":13},"name":"VeryHigh","qualname":"::dma::Priority::VeryHigh","value":"Priority::VeryHigh","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Very high\n","sig":null,"attributes":[{"value":"/ Very high","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34400,"byte_end":34413,"line_start":404,"line_end":404,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":217},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34314,"byte_end":34322,"line_start":397,"line_end":397,"column_start":10,"column_end":18},"name":"Priority","qualname":"::dma::Priority","value":"Priority::{Low, Medium, High, VeryHigh}","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224}],"decl_id":null,"docs":" Channel priority level\n","sig":null,"attributes":[{"value":"/ Channel priority level","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34278,"byte_end":34304,"line_start":396,"line_end":396,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":229},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34824,"byte_end":34834,"line_start":422,"line_end":422,"column_start":5,"column_end":15},"name":"FromMemory","qualname":"::dma::Direction::FromMemory","value":"Direction::FromMemory","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" From memory to peripheral\n","sig":null,"attributes":[{"value":"/ From memory to peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34790,"byte_end":34819,"line_start":421,"line_end":421,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":231},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34874,"byte_end":34888,"line_start":424,"line_end":424,"column_start":5,"column_end":19},"name":"FromPeripheral","qualname":"::dma::Direction::FromPeripheral","value":"Direction::FromPeripheral","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" From peripheral to memory\n","sig":null,"attributes":[{"value":"/ From peripheral to memory","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34840,"byte_end":34869,"line_start":423,"line_end":423,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":228},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34774,"byte_end":34783,"line_start":420,"line_end":420,"column_start":10,"column_end":19},"name":"Direction","qualname":"::dma::Direction","value":"Direction::{FromMemory, FromPeripheral}","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":231}],"decl_id":null,"docs":" DMA transfer direction\n","sig":null,"attributes":[{"value":"/ DMA transfer direction","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34738,"byte_end":34764,"line_start":419,"line_end":419,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":236},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35212,"byte_end":35224,"line_start":439,"line_end":439,"column_start":5,"column_end":17},"name":"HalfTransfer","qualname":"::dma::Event::HalfTransfer","value":"Event::HalfTransfer","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" First half of a transfer is done\n","sig":null,"attributes":[{"value":"/ First half of a transfer is done","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35171,"byte_end":35207,"line_start":438,"line_end":438,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":238},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35259,"byte_end":35275,"line_start":441,"line_end":441,"column_start":5,"column_end":21},"name":"TransferComplete","qualname":"::dma::Event::TransferComplete","value":"Event::TransferComplete","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Transfer is complete\n","sig":null,"attributes":[{"value":"/ Transfer is complete","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35230,"byte_end":35254,"line_start":440,"line_end":440,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":240},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35315,"byte_end":35328,"line_start":443,"line_end":443,"column_start":5,"column_end":18},"name":"TransferError","qualname":"::dma::Event::TransferError","value":"Event::TransferError","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" A transfer error occurred\n","sig":null,"attributes":[{"value":"/ A transfer error occurred","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35281,"byte_end":35310,"line_start":442,"line_end":442,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":242},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35375,"byte_end":35378,"line_start":445,"line_end":445,"column_start":5,"column_end":8},"name":"Any","qualname":"::dma::Event::Any","value":"Event::Any","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Any of the above events occurred\n","sig":null,"attributes":[{"value":"/ Any of the above events occurred","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35334,"byte_end":35370,"line_start":444,"line_end":444,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":235},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35159,"byte_end":35164,"line_start":437,"line_end":437,"column_start":10,"column_end":15},"name":"Event","qualname":"::dma::Event","value":"Event::{HalfTransfer, TransferComplete, TransferError, Any}","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242}],"decl_id":null,"docs":" DMA events\n","sig":null,"attributes":[{"value":"/ DMA events","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35135,"byte_end":35149,"line_start":436,"line_end":436,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35435,"byte_end":35442,"line_start":449,"line_end":449,"column_start":11,"column_end":18},"name":"Channel","qualname":"::dma::Channel","value":"Channel: private::Channel","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":270},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280}],"decl_id":null,"docs":" Trait implemented by all DMA channels\n","sig":null,"attributes":[{"value":"/ Trait implemented by all DMA channels","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35383,"byte_end":35424,"line_start":448,"line_end":448,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35525,"byte_end":35539,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"event_occurred","qualname":"::dma::Channel::event_occurred","value":"fn (&self, event: Event) -> bool","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Is the interrupt flag for the given event set?\n","sig":null,"attributes":[{"value":"/ Is the interrupt flag for the given event set?","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35467,"byte_end":35517,"line_start":450,"line_end":450,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35904,"byte_end":35915,"line_start":460,"line_end":460,"column_start":8,"column_end":19},"name":"clear_event","qualname":"::dma::Channel::clear_event","value":"fn (&mut self, event: Event) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Clear the interrupt flag for the given event.","sig":null,"attributes":[{"value":"/ Clear the interrupt flag for the given event.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35575,"byte_end":35624,"line_start":453,"line_end":453,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35629,"byte_end":35632,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Passing `Event::Any` clears all interrupt flags.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35637,"byte_end":35689,"line_start":455,"line_end":455,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35694,"byte_end":35697,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Note that the the global interrupt flag is not automatically cleared","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35702,"byte_end":35774,"line_start":457,"line_end":457,"column_start":5,"column_end":77}},{"value":"/ even when all other flags are cleared. The only way to clear it is to","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35779,"byte_end":35852,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ call this method with `Event::Any`.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35857,"byte_end":35896,"line_start":459,"line_end":459,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36045,"byte_end":36050,"line_start":464,"line_end":464,"column_start":8,"column_end":13},"name":"reset","qualname":"::dma::Channel::reset","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Reset the control registers of this channel.\n This stops any ongoing transfers.\n","sig":null,"attributes":[{"value":"/ Reset the control registers of this channel.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35947,"byte_end":35995,"line_start":462,"line_end":462,"column_start":5,"column_end":53}},{"value":"/ This stops any ongoing transfers.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36000,"byte_end":36037,"line_start":463,"line_end":463,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36490,"byte_end":36512,"line_start":480,"line_end":480,"column_start":8,"column_end":30},"name":"set_peripheral_address","qualname":"::dma::Channel::set_peripheral_address","value":"fn (&mut self, address: u32, inc: Increment) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Set the base address of the peripheral data register from/to which the\n data will be read/written.","sig":null,"attributes":[{"value":"/ Set the base address of the peripheral data register from/to which the","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36237,"byte_end":36311,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ data will be read/written.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36316,"byte_end":36346,"line_start":473,"line_end":473,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36351,"byte_end":36354,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Only call this method on disabled channels.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36359,"byte_end":36406,"line_start":475,"line_end":475,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36411,"byte_end":36414,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36419,"byte_end":36431,"line_start":477,"line_end":477,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36436,"byte_end":36439,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Panics if this channel is enabled.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36444,"byte_end":36482,"line_start":479,"line_end":479,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36966,"byte_end":36984,"line_start":495,"line_end":495,"column_start":8,"column_end":26},"name":"set_memory_address","qualname":"::dma::Channel::set_memory_address","value":"fn (&mut self, address: u32, inc: Increment) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Set the base address of the memory area from/to which\n the data will be read/written.","sig":null,"attributes":[{"value":"/ Set the base address of the memory area from/to which","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36726,"byte_end":36783,"line_start":487,"line_end":487,"column_start":5,"column_end":62}},{"value":"/ the data will be read/written.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36788,"byte_end":36822,"line_start":488,"line_end":488,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36827,"byte_end":36830,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Only call this method on disabled channels.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36835,"byte_end":36882,"line_start":490,"line_end":490,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36887,"byte_end":36890,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36895,"byte_end":36907,"line_start":492,"line_end":492,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36912,"byte_end":36915,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Panics if this channel is enabled.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":36920,"byte_end":36958,"line_start":494,"line_end":494,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37382,"byte_end":37401,"line_start":509,"line_end":509,"column_start":8,"column_end":27},"name":"set_transfer_length","qualname":"::dma::Channel::set_transfer_length","value":"fn (&mut self, len: u16) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Set the number of words to transfer.","sig":null,"attributes":[{"value":"/ Set the number of words to transfer.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37198,"byte_end":37238,"line_start":502,"line_end":502,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37243,"byte_end":37246,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Only call this method on disabled channels.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37251,"byte_end":37298,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37303,"byte_end":37306,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37311,"byte_end":37323,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37328,"byte_end":37331,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Panics if this channel is enabled.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37336,"byte_end":37374,"line_start":508,"line_end":508,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37655,"byte_end":37668,"line_start":520,"line_end":520,"column_start":8,"column_end":21},"name":"set_word_size","qualname":"::dma::Channel::set_word_size","value":"fn <W> (&mut self) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Set the word size.","sig":null,"attributes":[{"value":"/ Set the word size.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37527,"byte_end":37549,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37554,"byte_end":37557,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37562,"byte_end":37574,"line_start":517,"line_end":517,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37579,"byte_end":37582,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Panics if the word size is not one of 8, 16, or 32 bits.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":37587,"byte_end":37647,"line_start":519,"line_end":519,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":38090,"byte_end":38108,"line_start":537,"line_end":537,"column_start":8,"column_end":26},"name":"set_priority_level","qualname":"::dma::Channel::set_priority_level","value":"fn (&mut self, priority: Priority) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Set the priority level of this channel\n","sig":null,"attributes":[{"value":"/ Set the priority level of this channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":38040,"byte_end":38082,"line_start":536,"line_end":536,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":38281,"byte_end":38294,"line_start":543,"line_end":543,"column_start":8,"column_end":21},"name":"set_direction","qualname":"::dma::Channel::set_direction","value":"fn (&mut self, direction: Direction) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Set the transfer direction\n","sig":null,"attributes":[{"value":"/ Set the transfer direction","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":38243,"byte_end":38273,"line_start":542,"line_end":542,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":38487,"byte_end":38493,"line_start":549,"line_end":549,"column_start":8,"column_end":14},"name":"listen","qualname":"::dma::Channel::listen","value":"fn (&mut self, event: Event) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Enable the interrupt for the given event\n","sig":null,"attributes":[{"value":"/ Enable the interrupt for the given event","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":38435,"byte_end":38479,"line_start":548,"line_end":548,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":39043,"byte_end":39051,"line_start":564,"line_end":564,"column_start":8,"column_end":16},"name":"unlisten","qualname":"::dma::Channel::unlisten","value":"fn (&mut self, event: Event) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Disable the interrupt for the given event\n","sig":null,"attributes":[{"value":"/ Disable the interrupt for the given event","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":38990,"byte_end":39035,"line_start":563,"line_end":563,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":39582,"byte_end":39588,"line_start":579,"line_end":579,"column_start":8,"column_end":14},"name":"enable","qualname":"::dma::Channel::enable","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Start a transfer\n","sig":null,"attributes":[{"value":"/ Start a transfer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":39554,"byte_end":39574,"line_start":578,"line_end":578,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":39742,"byte_end":39749,"line_start":585,"line_end":585,"column_start":8,"column_end":15},"name":"disable","qualname":"::dma::Channel::disable","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Stop the current transfer\n","sig":null,"attributes":[{"value":"/ Stop the current transfer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":39705,"byte_end":39734,"line_start":584,"line_end":584,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":39889,"byte_end":39899,"line_start":590,"line_end":590,"column_start":8,"column_end":18},"name":"is_enabled","qualname":"::dma::Channel::is_enabled","value":"fn (&self) -> bool","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Is there a transfer in progress on this channel?\n","sig":null,"attributes":[{"value":"/ Is there a transfer in progress on this channel?","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":39829,"byte_end":39881,"line_start":589,"line_end":589,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":283},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":40068,"byte_end":40075,"line_start":599,"line_end":599,"column_start":15,"column_end":22},"name":"Channel","qualname":"::dma::private::Channel","value":"Channel","parent":null,"children":[{"krate":0,"index":284}],"decl_id":null,"docs":" Channel methods private to this module\n","sig":null,"attributes":[{"value":"/ Channel methods private to this module","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":40011,"byte_end":40053,"line_start":598,"line_end":598,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":40144,"byte_end":40146,"line_start":601,"line_end":601,"column_start":12,"column_end":14},"name":"ch","qualname":"::dma::private::Channel::ch","value":"fn (&self) -> &pac::dma1::CH","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":" Return the register block for this channel\n","sig":null,"attributes":[{"value":"/ Return the register block for this channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":40086,"byte_end":40132,"line_start":600,"line_end":600,"column_start":9,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":3400},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43215,"byte_end":43219,"line_start":695,"line_end":695,"column_start":11,"column_end":15},"name":"dma1","qualname":"::dma::dma1","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","parent":null,"children":[{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3407},{"krate":0,"index":3415},{"krate":0,"index":3417},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3427},{"krate":0,"index":3429},{"krate":0,"index":3431},{"krate":0,"index":3437},{"krate":0,"index":3439},{"krate":0,"index":3441},{"krate":0,"index":3447},{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3457},{"krate":0,"index":3459},{"krate":0,"index":3461},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":3471},{"krate":0,"index":3477},{"krate":0,"index":3479},{"krate":0,"index":3481}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3408},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43258,"byte_end":43261,"line_start":697,"line_end":697,"column_start":14,"column_end":17},"name":"ch1","qualname":"::dma::dma1::Channels::ch1","value":"dma::dma1::C1","parent":{"krate":0,"index":3407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3409},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43335,"byte_end":43338,"line_start":698,"line_end":698,"column_start":14,"column_end":17},"name":"ch2","qualname":"::dma::dma1::Channels::ch2","value":"dma::dma1::C2","parent":{"krate":0,"index":3407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3410},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43412,"byte_end":43415,"line_start":699,"line_end":699,"column_start":14,"column_end":17},"name":"ch3","qualname":"::dma::dma1::Channels::ch3","value":"dma::dma1::C3","parent":{"krate":0,"index":3407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3411},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43489,"byte_end":43492,"line_start":700,"line_end":700,"column_start":14,"column_end":17},"name":"ch4","qualname":"::dma::dma1::Channels::ch4","value":"dma::dma1::C4","parent":{"krate":0,"index":3407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3412},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43566,"byte_end":43569,"line_start":701,"line_end":701,"column_start":14,"column_end":17},"name":"ch5","qualname":"::dma::dma1::Channels::ch5","value":"dma::dma1::C5","parent":{"krate":0,"index":3407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3413},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43643,"byte_end":43646,"line_start":702,"line_end":702,"column_start":14,"column_end":17},"name":"ch6","qualname":"::dma::dma1::Channels::ch6","value":"dma::dma1::C6","parent":{"krate":0,"index":3407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3414},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43720,"byte_end":43723,"line_start":703,"line_end":703,"column_start":14,"column_end":17},"name":"ch7","qualname":"::dma::dma1::Channels::ch7","value":"dma::dma1::C7","parent":{"krate":0,"index":3407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3417},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43253,"byte_end":43255,"line_start":697,"line_end":697,"column_start":9,"column_end":11},"name":"C1","qualname":"::dma::dma1::C1","value":"C1 {  }","parent":null,"children":[{"krate":0,"index":3418}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3427},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43330,"byte_end":43332,"line_start":698,"line_end":698,"column_start":9,"column_end":11},"name":"C2","qualname":"::dma::dma1::C2","value":"C2 {  }","parent":null,"children":[{"krate":0,"index":3428}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3437},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43407,"byte_end":43409,"line_start":699,"line_end":699,"column_start":9,"column_end":11},"name":"C3","qualname":"::dma::dma1::C3","value":"C3 {  }","parent":null,"children":[{"krate":0,"index":3438}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3447},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43484,"byte_end":43486,"line_start":700,"line_end":700,"column_start":9,"column_end":11},"name":"C4","qualname":"::dma::dma1::C4","value":"C4 {  }","parent":null,"children":[{"krate":0,"index":3448}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3457},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43561,"byte_end":43563,"line_start":701,"line_end":701,"column_start":9,"column_end":11},"name":"C5","qualname":"::dma::dma1::C5","value":"C5 {  }","parent":null,"children":[{"krate":0,"index":3458}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3467},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43638,"byte_end":43640,"line_start":702,"line_end":702,"column_start":9,"column_end":11},"name":"C6","qualname":"::dma::dma1::C6","value":"C6 {  }","parent":null,"children":[{"krate":0,"index":3468}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3477},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43715,"byte_end":43717,"line_start":703,"line_end":703,"column_start":9,"column_end":11},"name":"C7","qualname":"::dma::dma1::C7","value":"C7 {  }","parent":null,"children":[{"krate":0,"index":3478}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":3487},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43941,"byte_end":43945,"line_start":714,"line_end":714,"column_start":11,"column_end":15},"name":"dma2","qualname":"::dma::dma2","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3494},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3512},{"krate":0,"index":3514},{"krate":0,"index":3516},{"krate":0,"index":3522},{"krate":0,"index":3524},{"krate":0,"index":3526},{"krate":0,"index":3532},{"krate":0,"index":3534},{"krate":0,"index":3536},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":3546}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3495},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43984,"byte_end":43987,"line_start":716,"line_end":716,"column_start":14,"column_end":17},"name":"ch1","qualname":"::dma::dma2::Channels::ch1","value":"dma::dma2::C1","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3496},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44061,"byte_end":44064,"line_start":717,"line_end":717,"column_start":14,"column_end":17},"name":"ch2","qualname":"::dma::dma2::Channels::ch2","value":"dma::dma2::C2","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3497},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44138,"byte_end":44141,"line_start":718,"line_end":718,"column_start":14,"column_end":17},"name":"ch3","qualname":"::dma::dma2::Channels::ch3","value":"dma::dma2::C3","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3498},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44215,"byte_end":44218,"line_start":719,"line_end":719,"column_start":14,"column_end":17},"name":"ch4","qualname":"::dma::dma2::Channels::ch4","value":"dma::dma2::C4","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3499},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44292,"byte_end":44295,"line_start":720,"line_end":720,"column_start":14,"column_end":17},"name":"ch5","qualname":"::dma::dma2::Channels::ch5","value":"dma::dma2::C5","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3502},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":43979,"byte_end":43981,"line_start":716,"line_end":716,"column_start":9,"column_end":11},"name":"C1","qualname":"::dma::dma2::C1","value":"C1 {  }","parent":null,"children":[{"krate":0,"index":3503}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3512},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44056,"byte_end":44058,"line_start":717,"line_end":717,"column_start":9,"column_end":11},"name":"C2","qualname":"::dma::dma2::C2","value":"C2 {  }","parent":null,"children":[{"krate":0,"index":3513}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3522},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44133,"byte_end":44135,"line_start":718,"line_end":718,"column_start":9,"column_end":11},"name":"C3","qualname":"::dma::dma2::C3","value":"C3 {  }","parent":null,"children":[{"krate":0,"index":3523}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3532},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44210,"byte_end":44212,"line_start":719,"line_end":719,"column_start":9,"column_end":11},"name":"C4","qualname":"::dma::dma2::C4","value":"C4 {  }","parent":null,"children":[{"krate":0,"index":3533}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3542},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44287,"byte_end":44289,"line_start":720,"line_end":720,"column_start":9,"column_end":11},"name":"C5","qualname":"::dma::dma2::C5","value":"C5 {  }","parent":null,"children":[{"krate":0,"index":3543}],"decl_id":null,"docs":" Singleton that represents a DMA channel\n","sig":null,"attributes":[{"value":"/ Singleton that represents a DMA channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":41446,"byte_end":41489,"line_start":649,"line_end":649,"column_start":17,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":286},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44548,"byte_end":44557,"line_start":730,"line_end":730,"column_start":18,"column_end":27},"name":"OnChannel","qualname":"::dma::OnChannel","value":"OnChannel<C: Channel>: Target","parent":null,"children":[],"decl_id":null,"docs":" Marker trait mapping DMA targets to their channels","sig":null,"attributes":[{"value":"/ Marker trait mapping DMA targets to their channels","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44367,"byte_end":44421,"line_start":724,"line_end":724,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44422,"byte_end":44425,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44426,"byte_end":44438,"line_start":726,"line_end":726,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44439,"byte_end":44442,"line_start":727,"line_end":727,"column_start":1,"column_end":4}},{"value":"/ `C` must be the correct DMA channel for the peripheral implementing","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44443,"byte_end":44514,"line_start":728,"line_end":728,"column_start":1,"column_end":72}},{"value":"/ this trait.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44515,"byte_end":44530,"line_start":729,"line_end":729,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":289},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flash","qualname":"::flash","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301}],"decl_id":null,"docs":" Flash memory\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3093,"byte_end":3128,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"! Flash memory","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45016,"byte_end":45032,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":293},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45131,"byte_end":45139,"line_start":6,"line_end":6,"column_start":11,"column_end":19},"name":"FlashExt","qualname":"::flash::FlashExt","value":"FlashExt","parent":null,"children":[{"krate":0,"index":294}],"decl_id":null,"docs":" Extension trait to constrain the FLASH peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait to constrain the FLASH peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45067,"byte_end":45120,"line_start":5,"line_end":5,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45232,"byte_end":45241,"line_start":8,"line_end":8,"column_start":8,"column_end":17},"name":"constrain","qualname":"::flash::FlashExt::constrain","value":"fn (self) -> Parts","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Constrains the FLASH peripheral to play nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the FLASH peripheral to play nicely with the other abstractions","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45146,"byte_end":45224,"line_start":7,"line_end":7,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45433,"byte_end":45438,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Parts","qualname":"::flash::Parts","value":"Parts { acr }","parent":null,"children":[{"krate":0,"index":298}],"decl_id":null,"docs":" Constrained FLASH peripheral\n","sig":null,"attributes":[{"value":"/ Constrained FLASH peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45389,"byte_end":45421,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":298},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45477,"byte_end":45480,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"acr","qualname":"::flash::Parts::acr","value":"flash::ACR","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Opaque ACR register\n","sig":null,"attributes":[{"value":"/ Opaque ACR register","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45445,"byte_end":45468,"line_start":21,"line_end":21,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45525,"byte_end":45528,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"ACR","qualname":"::flash::ACR","value":"ACR {  }","parent":null,"children":[{"krate":0,"index":300}],"decl_id":null,"docs":" Opaque ACR register\n","sig":null,"attributes":[{"value":"/ Opaque ACR register","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45490,"byte_end":45513,"line_start":25,"line_end":25,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":303},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpio","qualname":"::gpio","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3562},{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3577},{"krate":0,"index":3582},{"krate":0,"index":3599},{"krate":0,"index":3604},{"krate":0,"index":3608},{"krate":0,"index":3613},{"krate":0,"index":3615},{"krate":0,"index":4964},{"krate":0,"index":6283},{"krate":0,"index":7419},{"krate":0,"index":8555},{"krate":0,"index":9688}],"decl_id":null,"docs":" General Purpose Input / Output\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3144,"byte_end":3179,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"! General Purpose Input / Output","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":45732,"byte_end":45766,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":311},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46228,"byte_end":46235,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"name":"GpioExt","qualname":"::gpio::GpioExt","value":"GpioExt","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"decl_id":null,"docs":" Extension trait to split a GPIO peripheral in independent pins and registers\n","sig":null,"attributes":[{"value":"/ Extension trait to split a GPIO peripheral in independent pins and registers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46137,"byte_end":46217,"line_start":16,"line_end":16,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":312},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46282,"byte_end":46287,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"name":"Parts","qualname":"::gpio::GpioExt::Parts","value":"type Parts;","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" The to split the GPIO into\n","sig":null,"attributes":[{"value":"/ The to split the GPIO into","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46242,"byte_end":46272,"line_start":18,"line_end":18,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46363,"byte_end":46368,"line_start":22,"line_end":22,"column_start":8,"column_end":13},"name":"split","qualname":"::gpio::GpioExt::split","value":"fn (self, ahb: &mut AHB) -> Self::Parts","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" Splits the GPIO block into independent pins and registers\n","sig":null,"attributes":[{"value":"/ Splits the GPIO block into independent pins and registers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46294,"byte_end":46355,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":314},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46448,"byte_end":46453,"line_start":26,"line_end":26,"column_start":12,"column_end":17},"name":"Input","qualname":"::gpio::Input","value":"Input {  }","parent":null,"children":[{"krate":0,"index":316}],"decl_id":null,"docs":" Input mode (type state)\n","sig":null,"attributes":[{"value":"/ Input mode (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46409,"byte_end":46436,"line_start":25,"line_end":25,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46538,"byte_end":46546,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"Floating","qualname":"::gpio::Floating","value":"","parent":null,"children":[],"decl_id":null,"docs":" Floating input (type state)\n","sig":null,"attributes":[{"value":"/ Floating input (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46495,"byte_end":46526,"line_start":30,"line_end":30,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":319},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46594,"byte_end":46602,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"PullDown","qualname":"::gpio::PullDown","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled down input (type state)\n","sig":null,"attributes":[{"value":"/ Pulled down input (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46548,"byte_end":46582,"line_start":32,"line_end":32,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46648,"byte_end":46654,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"PullUp","qualname":"::gpio::PullUp","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled up input (type state)\n","sig":null,"attributes":[{"value":"/ Pulled up input (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46604,"byte_end":46636,"line_start":34,"line_end":34,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":323},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46697,"byte_end":46703,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Output","qualname":"::gpio::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":325}],"decl_id":null,"docs":" Output mode (type state)\n","sig":null,"attributes":[{"value":"/ Output mode (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46657,"byte_end":46685,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46790,"byte_end":46798,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"PushPull","qualname":"::gpio::PushPull","value":"","parent":null,"children":[],"decl_id":null,"docs":" Push pull output (type state)\n","sig":null,"attributes":[{"value":"/ Push pull output (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46745,"byte_end":46778,"line_start":42,"line_end":42,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":328},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46846,"byte_end":46855,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"OpenDrain","qualname":"::gpio::OpenDrain","value":"","parent":null,"children":[],"decl_id":null,"docs":" Open drain output (type state)\n","sig":null,"attributes":[{"value":"/ Open drain output (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46800,"byte_end":46834,"line_start":44,"line_end":44,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46898,"byte_end":46904,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"Analog","qualname":"::gpio::Analog","value":"","parent":null,"children":[],"decl_id":null,"docs":" Analog mode (type state)\n","sig":null,"attributes":[{"value":"/ Analog mode (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46858,"byte_end":46886,"line_start":47,"line_end":47,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46956,"byte_end":46959,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"AF0","qualname":"::gpio::AF0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 0 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 0 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46907,"byte_end":46944,"line_start":50,"line_end":50,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47011,"byte_end":47014,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"AF1","qualname":"::gpio::AF1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 1 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 1 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":46962,"byte_end":46999,"line_start":53,"line_end":53,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47066,"byte_end":47069,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"AF2","qualname":"::gpio::AF2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 2 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 2 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47017,"byte_end":47054,"line_start":56,"line_end":56,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47121,"byte_end":47124,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"AF3","qualname":"::gpio::AF3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 3 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 3 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47072,"byte_end":47109,"line_start":59,"line_end":59,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47176,"byte_end":47179,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"AF4","qualname":"::gpio::AF4","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 4 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 4 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47127,"byte_end":47164,"line_start":62,"line_end":62,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":342},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47231,"byte_end":47234,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"AF5","qualname":"::gpio::AF5","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 5 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 5 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47182,"byte_end":47219,"line_start":65,"line_end":65,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47286,"byte_end":47289,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"AF6","qualname":"::gpio::AF6","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 6 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 6 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47237,"byte_end":47274,"line_start":68,"line_end":68,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47341,"byte_end":47344,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"AF7","qualname":"::gpio::AF7","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 7 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 7 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47292,"byte_end":47329,"line_start":71,"line_end":71,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47396,"byte_end":47399,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"AF8","qualname":"::gpio::AF8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 8 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 8 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47347,"byte_end":47384,"line_start":74,"line_end":74,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47451,"byte_end":47454,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"AF9","qualname":"::gpio::AF9","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 9 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 9 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47402,"byte_end":47439,"line_start":77,"line_end":77,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":352},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47507,"byte_end":47511,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"AF10","qualname":"::gpio::AF10","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 10 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 10 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47457,"byte_end":47495,"line_start":80,"line_end":80,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47564,"byte_end":47568,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"AF11","qualname":"::gpio::AF11","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 11 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 11 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47514,"byte_end":47552,"line_start":83,"line_end":83,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47621,"byte_end":47625,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"AF12","qualname":"::gpio::AF12","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 12 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 12 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47571,"byte_end":47609,"line_start":86,"line_end":86,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47678,"byte_end":47682,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"AF13","qualname":"::gpio::AF13","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 13 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 13 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47628,"byte_end":47666,"line_start":89,"line_end":89,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47735,"byte_end":47739,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"AF14","qualname":"::gpio::AF14","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 14 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 14 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47685,"byte_end":47723,"line_start":92,"line_end":92,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47792,"byte_end":47796,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"AF15","qualname":"::gpio::AF15","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 15 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 15 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":47742,"byte_end":47780,"line_start":95,"line_end":95,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":3615},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":71228,"byte_end":71233,"line_start":690,"line_end":690,"column_start":15,"column_end":20},"name":"gpioa","qualname":"::gpio::gpioa","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3643},{"krate":0,"index":3655},{"krate":0,"index":3677},{"krate":0,"index":3683},{"krate":0,"index":3685},{"krate":0,"index":3687},{"krate":0,"index":3689},{"krate":0,"index":3691},{"krate":0,"index":3693},{"krate":0,"index":3695},{"krate":0,"index":3697},{"krate":0,"index":3699},{"krate":0,"index":3701},{"krate":0,"index":3703},{"krate":0,"index":3707},{"krate":0,"index":3710},{"krate":0,"index":3717},{"krate":0,"index":3722},{"krate":0,"index":3726},{"krate":0,"index":3731},{"krate":0,"index":3733},{"krate":0,"index":3736},{"krate":0,"index":3777},{"krate":0,"index":3780},{"krate":0,"index":3783},{"krate":0,"index":3786},{"krate":0,"index":3793},{"krate":0,"index":3798},{"krate":0,"index":3802},{"krate":0,"index":3807},{"krate":0,"index":3809},{"krate":0,"index":3812},{"krate":0,"index":3850},{"krate":0,"index":3853},{"krate":0,"index":3856},{"krate":0,"index":3859},{"krate":0,"index":3866},{"krate":0,"index":3871},{"krate":0,"index":3875},{"krate":0,"index":3880},{"krate":0,"index":3882},{"krate":0,"index":3885},{"krate":0,"index":3923},{"krate":0,"index":3926},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3939},{"krate":0,"index":3944},{"krate":0,"index":3948},{"krate":0,"index":3953},{"krate":0,"index":3955},{"krate":0,"index":3958},{"krate":0,"index":3993},{"krate":0,"index":3996},{"krate":0,"index":3999},{"krate":0,"index":4002},{"krate":0,"index":4009},{"krate":0,"index":4014},{"krate":0,"index":4018},{"krate":0,"index":4023},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4066},{"krate":0,"index":4069},{"krate":0,"index":4072},{"krate":0,"index":4075},{"krate":0,"index":4082},{"krate":0,"index":4087},{"krate":0,"index":4091},{"krate":0,"index":4096},{"krate":0,"index":4098},{"krate":0,"index":4101},{"krate":0,"index":4133},{"krate":0,"index":4136},{"krate":0,"index":4139},{"krate":0,"index":4142},{"krate":0,"index":4149},{"krate":0,"index":4154},{"krate":0,"index":4158},{"krate":0,"index":4163},{"krate":0,"index":4165},{"krate":0,"index":4168},{"krate":0,"index":4212},{"krate":0,"index":4215},{"krate":0,"index":4218},{"krate":0,"index":4221},{"krate":0,"index":4228},{"krate":0,"index":4233},{"krate":0,"index":4237},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":4247},{"krate":0,"index":4291},{"krate":0,"index":4294},{"krate":0,"index":4297},{"krate":0,"index":4300},{"krate":0,"index":4307},{"krate":0,"index":4312},{"krate":0,"index":4316},{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4370},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4386},{"krate":0,"index":4391},{"krate":0,"index":4395},{"krate":0,"index":4400},{"krate":0,"index":4402},{"krate":0,"index":4405},{"krate":0,"index":4452},{"krate":0,"index":4455},{"krate":0,"index":4458},{"krate":0,"index":4461},{"krate":0,"index":4468},{"krate":0,"index":4473},{"krate":0,"index":4477},{"krate":0,"index":4482},{"krate":0,"index":4484},{"krate":0,"index":4487},{"krate":0,"index":4534},{"krate":0,"index":4537},{"krate":0,"index":4540},{"krate":0,"index":4543},{"krate":0,"index":4550},{"krate":0,"index":4555},{"krate":0,"index":4559},{"krate":0,"index":4564},{"krate":0,"index":4566},{"krate":0,"index":4569},{"krate":0,"index":4616},{"krate":0,"index":4619},{"krate":0,"index":4622},{"krate":0,"index":4625},{"krate":0,"index":4632},{"krate":0,"index":4637},{"krate":0,"index":4641},{"krate":0,"index":4646},{"krate":0,"index":4648},{"krate":0,"index":4651},{"krate":0,"index":4698},{"krate":0,"index":4701},{"krate":0,"index":4704},{"krate":0,"index":4707},{"krate":0,"index":4714},{"krate":0,"index":4719},{"krate":0,"index":4723},{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":4733},{"krate":0,"index":4774},{"krate":0,"index":4777},{"krate":0,"index":4780},{"krate":0,"index":4783},{"krate":0,"index":4790},{"krate":0,"index":4795},{"krate":0,"index":4799},{"krate":0,"index":4804},{"krate":0,"index":4806},{"krate":0,"index":4809},{"krate":0,"index":4850},{"krate":0,"index":4853},{"krate":0,"index":4856},{"krate":0,"index":4859},{"krate":0,"index":4866},{"krate":0,"index":4871},{"krate":0,"index":4875},{"krate":0,"index":4880},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4932},{"krate":0,"index":4935},{"krate":0,"index":4938},{"krate":0,"index":4941},{"krate":0,"index":4948},{"krate":0,"index":4953},{"krate":0,"index":4957},{"krate":0,"index":4962}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53503,"byte_end":53511,"line_start":261,"line_end":261,"column_start":13,"column_end":21}},{"value":"cfg(all(any(feature = \"stm32f301\", feature = \"stm32f318\", feature =\n              \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n              feature = \"stm32f378\", feature = \"stm32f334\", feature =\n              \"stm32f328\", feature = \"stm32f358\", feature = \"stm32f398\",),\n          not(any())))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53524,"byte_end":53665,"line_start":262,"line_end":266,"column_start":13,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3661},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":71403,"byte_end":71406,"line_start":696,"line_end":696,"column_start":19,"column_end":22},"name":"pa0","qualname":"::gpio::gpioa::Parts::pa0","value":"gpio::gpioa::PA0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3662},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72261,"byte_end":72264,"line_start":708,"line_end":708,"column_start":19,"column_end":22},"name":"pa1","qualname":"::gpio::gpioa::Parts::pa1","value":"gpio::gpioa::PA1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3663},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72993,"byte_end":72996,"line_start":720,"line_end":720,"column_start":19,"column_end":22},"name":"pa2","qualname":"::gpio::gpioa::Parts::pa2","value":"gpio::gpioa::PA2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3664},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73571,"byte_end":73574,"line_start":732,"line_end":732,"column_start":19,"column_end":22},"name":"pa3","qualname":"::gpio::gpioa::Parts::pa3","value":"gpio::gpioa::PA3<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3665},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":74110,"byte_end":74113,"line_start":743,"line_end":743,"column_start":19,"column_end":22},"name":"pa4","qualname":"::gpio::gpioa::Parts::pa4","value":"gpio::gpioa::PA4<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3666},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":74919,"byte_end":74922,"line_start":753,"line_end":753,"column_start":19,"column_end":22},"name":"pa5","qualname":"::gpio::gpioa::Parts::pa5","value":"gpio::gpioa::PA5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3667},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75526,"byte_end":75529,"line_start":763,"line_end":763,"column_start":19,"column_end":22},"name":"pa6","qualname":"::gpio::gpioa::Parts::pa6","value":"gpio::gpioa::PA6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3668},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":76652,"byte_end":76655,"line_start":776,"line_end":776,"column_start":19,"column_end":22},"name":"pa7","qualname":"::gpio::gpioa::Parts::pa7","value":"gpio::gpioa::PA7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3669},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":77664,"byte_end":77667,"line_start":788,"line_end":788,"column_start":19,"column_end":22},"name":"pa8","qualname":"::gpio::gpioa::Parts::pa8","value":"gpio::gpioa::PA8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3670},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":78891,"byte_end":78894,"line_start":802,"line_end":802,"column_start":19,"column_end":22},"name":"pa9","qualname":"::gpio::gpioa::Parts::pa9","value":"gpio::gpioa::PA9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3671},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":80082,"byte_end":80086,"line_start":816,"line_end":816,"column_start":20,"column_end":24},"name":"pa10","qualname":"::gpio::gpioa::Parts::pa10","value":"gpio::gpioa::PA10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3672},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":81307,"byte_end":81311,"line_start":831,"line_end":831,"column_start":20,"column_end":24},"name":"pa11","qualname":"::gpio::gpioa::Parts::pa11","value":"gpio::gpioa::PA11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3673},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82704,"byte_end":82708,"line_start":846,"line_end":846,"column_start":20,"column_end":24},"name":"pa12","qualname":"::gpio::gpioa::Parts::pa12","value":"gpio::gpioa::PA12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3674},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":83837,"byte_end":83841,"line_start":861,"line_end":861,"column_start":20,"column_end":24},"name":"pa13","qualname":"::gpio::gpioa::Parts::pa13","value":"gpio::gpioa::PA13<gpio::AF0>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3675},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84526,"byte_end":84530,"line_start":873,"line_end":873,"column_start":20,"column_end":24},"name":"pa14","qualname":"::gpio::gpioa::Parts::pa14","value":"gpio::gpioa::PA14<gpio::AF0>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3676},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":85309,"byte_end":85313,"line_start":884,"line_end":884,"column_start":20,"column_end":24},"name":"pa15","qualname":"::gpio::gpioa::Parts::pa15","value":"gpio::gpioa::PA15<gpio::AF0>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3703},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":71364,"byte_end":71367,"line_start":694,"line_end":694,"column_start":31,"column_end":34},"name":"PAx","qualname":"::gpio::gpioa::PAx","value":"PAx {  }","parent":null,"children":[{"krate":0,"index":3705},{"krate":0,"index":3706}],"decl_id":null,"docs":" Partially erased pin\n","sig":null,"attributes":[{"value":"/ Partially erased pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":58121,"byte_end":58145,"line_start":390,"line_end":390,"column_start":17,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3733},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":71397,"byte_end":71400,"line_start":696,"line_end":696,"column_start":13,"column_end":16},"name":"PA0","qualname":"::gpio::gpioa::PA0","value":"PA0 {  }","parent":null,"children":[{"krate":0,"index":3735}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":71508,"byte_end":71516,"line_start":697,"line_end":697,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA0<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA0<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":71547,"byte_end":71555,"line_start":698,"line_end":698,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA0<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA0<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":71586,"byte_end":71594,"line_start":699,"line_end":699,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA0<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA0<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":71626,"byte_end":71635,"line_start":700,"line_end":700,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA0<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA0<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":71752,"byte_end":71760,"line_start":703,"line_end":703,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PA0<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA0<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f373\", feature = \"stm32f378\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":71919,"byte_end":71927,"line_start":704,"line_end":704,"column_start":23,"column_end":31},"name":"into_af9","qualname":"<PA0<MODE>>::into_af9","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA0<AF9>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72048,"byte_end":72057,"line_start":705,"line_end":705,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PA0<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA0<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3809},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72255,"byte_end":72258,"line_start":708,"line_end":708,"column_start":13,"column_end":16},"name":"PA1","qualname":"::gpio::gpioa::PA1","value":"PA1 {  }","parent":null,"children":[{"krate":0,"index":3811}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72366,"byte_end":72374,"line_start":709,"line_end":709,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA1<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA1<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72405,"byte_end":72413,"line_start":710,"line_end":710,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA1<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA1<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3820},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72444,"byte_end":72452,"line_start":711,"line_end":711,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA1<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA1<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3823},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72483,"byte_end":72491,"line_start":712,"line_end":712,"column_start":23,"column_end":31},"name":"into_af9","qualname":"<PA1<MODE>>::into_af9","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA1<AF9>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72523,"byte_end":72532,"line_start":713,"line_end":713,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA1<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA1<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72581,"byte_end":72589,"line_start":715,"line_end":715,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PA1<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA1<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3882},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":72987,"byte_end":72990,"line_start":720,"line_end":720,"column_start":13,"column_end":16},"name":"PA2","qualname":"::gpio::gpioa::PA2","value":"PA2 {  }","parent":null,"children":[{"krate":0,"index":3884}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73098,"byte_end":73106,"line_start":721,"line_end":721,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA2<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA2<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73137,"byte_end":73145,"line_start":722,"line_end":722,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA2<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA2<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73176,"byte_end":73184,"line_start":723,"line_end":723,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA2<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA2<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73215,"byte_end":73223,"line_start":724,"line_end":724,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PA2<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA2<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73254,"byte_end":73262,"line_start":725,"line_end":725,"column_start":23,"column_end":31},"name":"into_af9","qualname":"<PA2<MODE>>::into_af9","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA2<AF9>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73294,"byte_end":73303,"line_start":726,"line_end":726,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA2<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA2<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":3955},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73565,"byte_end":73568,"line_start":732,"line_end":732,"column_start":13,"column_end":16},"name":"PA3","qualname":"::gpio::gpioa::PA3","value":"PA3 {  }","parent":null,"children":[{"krate":0,"index":3957}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3960},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73676,"byte_end":73684,"line_start":733,"line_end":733,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA3<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA3<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3963},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73715,"byte_end":73723,"line_start":734,"line_end":734,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA3<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA3<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3966},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73754,"byte_end":73762,"line_start":735,"line_end":735,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA3<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA3<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3969},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73793,"byte_end":73801,"line_start":736,"line_end":736,"column_start":23,"column_end":31},"name":"into_af9","qualname":"<PA3<MODE>>::into_af9","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA3<AF9>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":73833,"byte_end":73842,"line_start":737,"line_end":737,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA3<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA3<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":4025},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":74104,"byte_end":74107,"line_start":743,"line_end":743,"column_start":13,"column_end":16},"name":"PA4","qualname":"::gpio::gpioa::PA4","value":"PA4 {  }","parent":null,"children":[{"krate":0,"index":4027}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4030},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":74215,"byte_end":74223,"line_start":744,"line_end":744,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA4<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA4<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4033},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":74254,"byte_end":74262,"line_start":745,"line_end":745,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA4<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA4<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4036},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":74294,"byte_end":74303,"line_start":746,"line_end":746,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA4<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA4<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4039},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":74352,"byte_end":74360,"line_start":748,"line_end":748,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PA4<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA4<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4042},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":74498,"byte_end":74506,"line_start":749,"line_end":749,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PA4<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA4<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4045},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":74644,"byte_end":74652,"line_start":750,"line_end":750,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PA4<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA4<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4098},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":74913,"byte_end":74916,"line_start":753,"line_end":753,"column_start":13,"column_end":16},"name":"PA5","qualname":"::gpio::gpioa::PA5","value":"PA5 {  }","parent":null,"children":[{"krate":0,"index":4100}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4103},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75024,"byte_end":75032,"line_start":754,"line_end":754,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA5<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA5<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4106},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75063,"byte_end":75071,"line_start":755,"line_end":755,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA5<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA5<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4109},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75103,"byte_end":75112,"line_start":756,"line_end":756,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA5<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA5<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4112},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75161,"byte_end":75169,"line_start":758,"line_end":758,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PA5<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA5<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4165},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75520,"byte_end":75523,"line_start":763,"line_end":763,"column_start":13,"column_end":16},"name":"PA6","qualname":"::gpio::gpioa::PA6","value":"PA6 {  }","parent":null,"children":[{"krate":0,"index":4167}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4170},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75631,"byte_end":75639,"line_start":764,"line_end":764,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA6<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA6<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4173},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75670,"byte_end":75678,"line_start":765,"line_end":765,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA6<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA6<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75710,"byte_end":75719,"line_start":766,"line_end":766,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA6<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA6<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4179},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75768,"byte_end":75776,"line_start":768,"line_end":768,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PA6<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA6<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4182},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":75914,"byte_end":75922,"line_start":769,"line_end":769,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PA6<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA6<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4185},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":76042,"byte_end":76050,"line_start":770,"line_end":770,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PA6<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA6<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4188},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":76188,"byte_end":76196,"line_start":771,"line_end":771,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PA6<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA6<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4191},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":76334,"byte_end":76342,"line_start":772,"line_end":772,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PA6<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA6<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f373\", feature = \"stm32f378\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4244},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":76646,"byte_end":76649,"line_start":776,"line_end":776,"column_start":13,"column_end":16},"name":"PA7","qualname":"::gpio::gpioa::PA7","value":"PA7 {  }","parent":null,"children":[{"krate":0,"index":4246}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":76757,"byte_end":76765,"line_start":777,"line_end":777,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA7<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA7<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":76796,"byte_end":76804,"line_start":778,"line_end":778,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA7<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA7<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4255},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":76836,"byte_end":76845,"line_start":779,"line_end":779,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA7<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA7<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4258},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":76894,"byte_end":76902,"line_start":781,"line_end":781,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PA7<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA7<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4261},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":77040,"byte_end":77048,"line_start":782,"line_end":782,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PA7<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA7<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4264},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":77168,"byte_end":77176,"line_start":783,"line_end":783,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PA7<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA7<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4267},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":77314,"byte_end":77322,"line_start":784,"line_end":784,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PA7<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA7<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":77460,"byte_end":77468,"line_start":785,"line_end":785,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PA7<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PA7<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f373\", feature = \"stm32f378\", feature\n          = \"stm32f358\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4323},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":77658,"byte_end":77661,"line_start":788,"line_end":788,"column_start":13,"column_end":16},"name":"PA8","qualname":"::gpio::gpioa::PA8","value":"PA8 {  }","parent":null,"children":[{"krate":0,"index":4325}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4328},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":77769,"byte_end":77777,"line_start":789,"line_end":789,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PA8<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA8<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4331},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":77808,"byte_end":77816,"line_start":790,"line_end":790,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA8<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA8<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":77848,"byte_end":77857,"line_start":791,"line_end":791,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA8<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA8<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4337},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":78085,"byte_end":78093,"line_start":795,"line_end":795,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PA8<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA8<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4340},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":78278,"byte_end":78286,"line_start":796,"line_end":796,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PA8<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA8<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f373\", feature = \"stm32f378\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4343},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":78424,"byte_end":78432,"line_start":797,"line_end":797,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PA8<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA8<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4346},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":78570,"byte_end":78578,"line_start":798,"line_end":798,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PA8<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA8<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":78652,"byte_end":78661,"line_start":799,"line_end":799,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PA8<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA8<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f373\", feature = \"stm32f378\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4402},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":78885,"byte_end":78888,"line_start":802,"line_end":802,"column_start":13,"column_end":16},"name":"PA9","qualname":"::gpio::gpioa::PA9","value":"PA9 {  }","parent":null,"children":[{"krate":0,"index":4404}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4407},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":78996,"byte_end":79004,"line_start":803,"line_end":803,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA9<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA9<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4410},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":79035,"byte_end":79043,"line_start":804,"line_end":804,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA9<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA9<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":79074,"byte_end":79082,"line_start":805,"line_end":805,"column_start":23,"column_end":31},"name":"into_af9","qualname":"<PA9<MODE>>::into_af9","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA9<AF9>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4416},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":79114,"byte_end":79123,"line_start":806,"line_end":806,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PA9<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA9<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4419},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":79156,"byte_end":79165,"line_start":807,"line_end":807,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA9<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA9<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4422},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":79351,"byte_end":79359,"line_start":810,"line_end":810,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PA9<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA9<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4425},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":79544,"byte_end":79552,"line_start":811,"line_end":811,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PA9<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA9<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4428},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":79737,"byte_end":79745,"line_start":812,"line_end":812,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PA9<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA9<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4431},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":79883,"byte_end":79891,"line_start":813,"line_end":813,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PA9<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA9<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4484},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":80075,"byte_end":80079,"line_start":816,"line_end":816,"column_start":13,"column_end":17},"name":"PA10","qualname":"::gpio::gpioa::PA10","value":"PA10 {  }","parent":null,"children":[{"krate":0,"index":4486}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4489},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":80197,"byte_end":80205,"line_start":817,"line_end":817,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA10<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA10<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":80236,"byte_end":80244,"line_start":818,"line_end":818,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA10<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA10<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4495},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":80275,"byte_end":80283,"line_start":819,"line_end":819,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA10<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA10<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4498},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":80315,"byte_end":80324,"line_start":820,"line_end":820,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PA10<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA10<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4501},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":80357,"byte_end":80366,"line_start":821,"line_end":821,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA10<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA10<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4504},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":80415,"byte_end":80423,"line_start":823,"line_end":823,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PA10<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA10<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4507},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":80745,"byte_end":80753,"line_start":825,"line_end":825,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PA10<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA10<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4510},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":80891,"byte_end":80899,"line_start":826,"line_end":826,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PA10<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA10<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4513},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":81106,"byte_end":81115,"line_start":828,"line_end":828,"column_start":24,"column_end":33},"name":"into_af11","qualname":"<PA10<MODE>>::into_af11","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA10<AF11>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4566},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":81300,"byte_end":81304,"line_start":831,"line_end":831,"column_start":13,"column_end":17},"name":"PA11","qualname":"::gpio::gpioa::PA11","value":"PA11 {  }","parent":null,"children":[{"krate":0,"index":4568}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4571},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":81422,"byte_end":81430,"line_start":832,"line_end":832,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PA11<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA11<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4574},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":81461,"byte_end":81469,"line_start":833,"line_end":833,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA11<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA11<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4577},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":81501,"byte_end":81510,"line_start":834,"line_end":834,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA11<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA11<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":81764,"byte_end":81772,"line_start":838,"line_end":838,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PA11<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA11<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f373\", feature = \"stm32f378\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4583},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":81931,"byte_end":81939,"line_start":839,"line_end":839,"column_start":23,"column_end":31},"name":"into_af9","qualname":"<PA11<MODE>>::into_af9","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA11<AF9>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4586},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82078,"byte_end":82087,"line_start":840,"line_end":840,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PA11<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA11<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f373\", feature = \"stm32f378\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4589},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82248,"byte_end":82257,"line_start":841,"line_end":841,"column_start":24,"column_end":33},"name":"into_af11","qualname":"<PA11<MODE>>::into_af11","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA11<AF11>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4592},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82397,"byte_end":82406,"line_start":842,"line_end":842,"column_start":24,"column_end":33},"name":"into_af12","qualname":"<PA11<MODE>>::into_af12","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA11<AF12>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4595},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82604,"byte_end":82613,"line_start":844,"line_end":844,"column_start":24,"column_end":33},"name":"into_af14","qualname":"<PA11<MODE>>::into_af14","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA11<AF14>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4648},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82697,"byte_end":82701,"line_start":846,"line_end":846,"column_start":13,"column_end":17},"name":"PA12","qualname":"::gpio::gpioa::PA12","value":"PA12 {  }","parent":null,"children":[{"krate":0,"index":4650}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4653},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82819,"byte_end":82827,"line_start":847,"line_end":847,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA12<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA12<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4656},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82858,"byte_end":82866,"line_start":848,"line_end":848,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PA12<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA12<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4659},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82897,"byte_end":82905,"line_start":849,"line_end":849,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA12<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA12<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4662},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82936,"byte_end":82944,"line_start":850,"line_end":850,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PA12<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA12<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":82976,"byte_end":82985,"line_start":851,"line_end":851,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA12<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA12<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4668},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":83213,"byte_end":83221,"line_start":855,"line_end":855,"column_start":23,"column_end":31},"name":"into_af9","qualname":"<PA12<MODE>>::into_af9","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA12<AF9>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":83360,"byte_end":83369,"line_start":856,"line_end":856,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PA12<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA12<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f373\", feature = \"stm32f378\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":83530,"byte_end":83539,"line_start":857,"line_end":857,"column_start":24,"column_end":33},"name":"into_af11","qualname":"<PA12<MODE>>::into_af11","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA12<AF11>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4677},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":83737,"byte_end":83746,"line_start":859,"line_end":859,"column_start":24,"column_end":33},"name":"into_af14","qualname":"<PA12<MODE>>::into_af14","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA12<AF14>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4730},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":83830,"byte_end":83834,"line_start":861,"line_end":861,"column_start":13,"column_end":17},"name":"PA13","qualname":"::gpio::gpioa::PA13","value":"PA13 {  }","parent":null,"children":[{"krate":0,"index":4732}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4735},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":83940,"byte_end":83948,"line_start":862,"line_end":862,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PA13<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA13<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4738},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":83979,"byte_end":83987,"line_start":863,"line_end":863,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA13<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA13<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4741},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84018,"byte_end":84026,"line_start":864,"line_end":864,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA13<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA13<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4744},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84057,"byte_end":84065,"line_start":865,"line_end":865,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PA13<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA13<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4747},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84096,"byte_end":84104,"line_start":866,"line_end":866,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA13<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA13<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4750},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84136,"byte_end":84145,"line_start":867,"line_end":867,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA13<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA13<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4753},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84344,"byte_end":84353,"line_start":871,"line_end":871,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PA13<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA13<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f373\", feature = \"stm32f378\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4806},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84519,"byte_end":84523,"line_start":873,"line_end":873,"column_start":13,"column_end":17},"name":"PA14","qualname":"::gpio::gpioa::PA14","value":"PA14 {  }","parent":null,"children":[{"krate":0,"index":4808}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4811},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84629,"byte_end":84637,"line_start":874,"line_end":874,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PA14<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA14<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4814},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84668,"byte_end":84676,"line_start":875,"line_end":875,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PA14<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA14<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4817},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84707,"byte_end":84715,"line_start":876,"line_end":876,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PA14<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA14<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4820},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84747,"byte_end":84756,"line_start":877,"line_end":877,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA14<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA14<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4823},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84805,"byte_end":84813,"line_start":879,"line_end":879,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PA14<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA14<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4826},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":84933,"byte_end":84941,"line_start":880,"line_end":880,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PA14<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA14<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4829},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":85079,"byte_end":85087,"line_start":881,"line_end":881,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA14<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA14<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4882},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":85302,"byte_end":85306,"line_start":884,"line_end":884,"column_start":13,"column_end":17},"name":"PA15","qualname":"::gpio::gpioa::PA15","value":"PA15 {  }","parent":null,"children":[{"krate":0,"index":4884}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4887},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":85412,"byte_end":85420,"line_start":885,"line_end":885,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PA15<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA15<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4890},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":85451,"byte_end":85459,"line_start":886,"line_end":886,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PA15<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA15<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4893},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":85490,"byte_end":85498,"line_start":887,"line_end":887,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PA15<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA15<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4896},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":85530,"byte_end":85539,"line_start":888,"line_end":888,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PA15<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA15<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4899},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":85588,"byte_end":85596,"line_start":890,"line_end":890,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PA15<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA15<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4902},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":85909,"byte_end":85917,"line_start":892,"line_end":892,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PA15<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA15<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4905},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":86055,"byte_end":86063,"line_start":893,"line_end":893,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PA15<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA15<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4908},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":86248,"byte_end":86256,"line_start":894,"line_end":894,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PA15<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA15<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4911},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":86394,"byte_end":86402,"line_start":895,"line_end":895,"column_start":23,"column_end":31},"name":"into_af9","qualname":"<PA15<MODE>>::into_af9","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PA15<AF9>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":4964},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":86980,"byte_end":86985,"line_start":914,"line_end":914,"column_start":15,"column_end":20},"name":"gpiob","qualname":"::gpio::gpiob","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":4965},{"krate":0,"index":4966},{"krate":0,"index":4967},{"krate":0,"index":4968},{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4992},{"krate":0,"index":5004},{"krate":0,"index":5026},{"krate":0,"index":5032},{"krate":0,"index":5034},{"krate":0,"index":5036},{"krate":0,"index":5038},{"krate":0,"index":5040},{"krate":0,"index":5042},{"krate":0,"index":5044},{"krate":0,"index":5046},{"krate":0,"index":5048},{"krate":0,"index":5050},{"krate":0,"index":5052},{"krate":0,"index":5056},{"krate":0,"index":5059},{"krate":0,"index":5066},{"krate":0,"index":5071},{"krate":0,"index":5075},{"krate":0,"index":5080},{"krate":0,"index":5082},{"krate":0,"index":5085},{"krate":0,"index":5120},{"krate":0,"index":5123},{"krate":0,"index":5126},{"krate":0,"index":5129},{"krate":0,"index":5136},{"krate":0,"index":5141},{"krate":0,"index":5145},{"krate":0,"index":5150},{"krate":0,"index":5152},{"krate":0,"index":5155},{"krate":0,"index":5193},{"krate":0,"index":5196},{"krate":0,"index":5199},{"krate":0,"index":5202},{"krate":0,"index":5209},{"krate":0,"index":5214},{"krate":0,"index":5218},{"krate":0,"index":5223},{"krate":0,"index":5225},{"krate":0,"index":5228},{"krate":0,"index":5254},{"krate":0,"index":5257},{"krate":0,"index":5260},{"krate":0,"index":5263},{"krate":0,"index":5270},{"krate":0,"index":5275},{"krate":0,"index":5279},{"krate":0,"index":5284},{"krate":0,"index":5286},{"krate":0,"index":5289},{"krate":0,"index":5339},{"krate":0,"index":5342},{"krate":0,"index":5345},{"krate":0,"index":5348},{"krate":0,"index":5355},{"krate":0,"index":5360},{"krate":0,"index":5364},{"krate":0,"index":5369},{"krate":0,"index":5371},{"krate":0,"index":5374},{"krate":0,"index":5424},{"krate":0,"index":5427},{"krate":0,"index":5430},{"krate":0,"index":5433},{"krate":0,"index":5440},{"krate":0,"index":5445},{"krate":0,"index":5449},{"krate":0,"index":5454},{"krate":0,"index":5456},{"krate":0,"index":5459},{"krate":0,"index":5506},{"krate":0,"index":5509},{"krate":0,"index":5512},{"krate":0,"index":5515},{"krate":0,"index":5522},{"krate":0,"index":5527},{"krate":0,"index":5531},{"krate":0,"index":5536},{"krate":0,"index":5538},{"krate":0,"index":5541},{"krate":0,"index":5588},{"krate":0,"index":5591},{"krate":0,"index":5594},{"krate":0,"index":5597},{"krate":0,"index":5604},{"krate":0,"index":5609},{"krate":0,"index":5613},{"krate":0,"index":5618},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5667},{"krate":0,"index":5670},{"krate":0,"index":5673},{"krate":0,"index":5676},{"krate":0,"index":5683},{"krate":0,"index":5688},{"krate":0,"index":5692},{"krate":0,"index":5697},{"krate":0,"index":5699},{"krate":0,"index":5702},{"krate":0,"index":5749},{"krate":0,"index":5752},{"krate":0,"index":5755},{"krate":0,"index":5758},{"krate":0,"index":5765},{"krate":0,"index":5770},{"krate":0,"index":5774},{"krate":0,"index":5779},{"krate":0,"index":5781},{"krate":0,"index":5784},{"krate":0,"index":5828},{"krate":0,"index":5831},{"krate":0,"index":5834},{"krate":0,"index":5837},{"krate":0,"index":5844},{"krate":0,"index":5849},{"krate":0,"index":5853},{"krate":0,"index":5858},{"krate":0,"index":5860},{"krate":0,"index":5863},{"krate":0,"index":5895},{"krate":0,"index":5898},{"krate":0,"index":5901},{"krate":0,"index":5904},{"krate":0,"index":5911},{"krate":0,"index":5916},{"krate":0,"index":5920},{"krate":0,"index":5925},{"krate":0,"index":5927},{"krate":0,"index":5930},{"krate":0,"index":5962},{"krate":0,"index":5965},{"krate":0,"index":5968},{"krate":0,"index":5971},{"krate":0,"index":5978},{"krate":0,"index":5983},{"krate":0,"index":5987},{"krate":0,"index":5992},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6035},{"krate":0,"index":6038},{"krate":0,"index":6041},{"krate":0,"index":6044},{"krate":0,"index":6051},{"krate":0,"index":6056},{"krate":0,"index":6060},{"krate":0,"index":6065},{"krate":0,"index":6067},{"krate":0,"index":6070},{"krate":0,"index":6105},{"krate":0,"index":6108},{"krate":0,"index":6111},{"krate":0,"index":6114},{"krate":0,"index":6121},{"krate":0,"index":6126},{"krate":0,"index":6130},{"krate":0,"index":6135},{"krate":0,"index":6137},{"krate":0,"index":6140},{"krate":0,"index":6178},{"krate":0,"index":6181},{"krate":0,"index":6184},{"krate":0,"index":6187},{"krate":0,"index":6194},{"krate":0,"index":6199},{"krate":0,"index":6203},{"krate":0,"index":6208},{"krate":0,"index":6210},{"krate":0,"index":6213},{"krate":0,"index":6251},{"krate":0,"index":6254},{"krate":0,"index":6257},{"krate":0,"index":6260},{"krate":0,"index":6267},{"krate":0,"index":6272},{"krate":0,"index":6276},{"krate":0,"index":6281}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53503,"byte_end":53511,"line_start":261,"line_end":261,"column_start":13,"column_end":21}},{"value":"cfg(all(any(feature = \"stm32f301\", feature = \"stm32f318\", feature =\n              \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n              feature = \"stm32f328\", feature = \"stm32f358\", feature =\n              \"stm32f398\",), not(any())))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53524,"byte_end":53665,"line_start":262,"line_end":266,"column_start":13,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5010},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87155,"byte_end":87158,"line_start":920,"line_end":920,"column_start":19,"column_end":22},"name":"pb0","qualname":"::gpio::gpiob::Parts::pb0","value":"gpio::gpiob::PB0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5011},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87764,"byte_end":87767,"line_start":928,"line_end":928,"column_start":19,"column_end":22},"name":"pb1","qualname":"::gpio::gpiob::Parts::pb1","value":"gpio::gpiob::PB1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5012},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":88577,"byte_end":88580,"line_start":938,"line_end":938,"column_start":19,"column_end":22},"name":"pb2","qualname":"::gpio::gpiob::Parts::pb2","value":"gpio::gpiob::PB2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5013},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":88947,"byte_end":88950,"line_start":943,"line_end":943,"column_start":19,"column_end":22},"name":"pb3","qualname":"::gpio::gpiob::Parts::pb3","value":"gpio::gpiob::PB3<gpio::AF0>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5014},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90062,"byte_end":90065,"line_start":958,"line_end":958,"column_start":19,"column_end":22},"name":"pb4","qualname":"::gpio::gpiob::Parts::pb4","value":"gpio::gpiob::PB4<gpio::AF0>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5015},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91017,"byte_end":91020,"line_start":972,"line_end":972,"column_start":19,"column_end":22},"name":"pb5","qualname":"::gpio::gpiob::Parts::pb5","value":"gpio::gpiob::PB5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5016},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92056,"byte_end":92059,"line_start":986,"line_end":986,"column_start":19,"column_end":22},"name":"pb6","qualname":"::gpio::gpiob::Parts::pb6","value":"gpio::gpiob::PB6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5017},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93032,"byte_end":93035,"line_start":1000,"line_end":1000,"column_start":19,"column_end":22},"name":"pb7","qualname":"::gpio::gpiob::Parts::pb7","value":"gpio::gpiob::PB7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5018},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93902,"byte_end":93905,"line_start":1013,"line_end":1013,"column_start":19,"column_end":22},"name":"pb8","qualname":"::gpio::gpiob::Parts::pb8","value":"gpio::gpiob::PB8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5019},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95073,"byte_end":95076,"line_start":1027,"line_end":1027,"column_start":19,"column_end":22},"name":"pb9","qualname":"::gpio::gpiob::Parts::pb9","value":"gpio::gpiob::PB9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5020},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95993,"byte_end":95997,"line_start":1040,"line_end":1040,"column_start":20,"column_end":24},"name":"pb10","qualname":"::gpio::gpiob::Parts::pb10","value":"gpio::gpiob::PB10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5021},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":96355,"byte_end":96359,"line_start":1048,"line_end":1048,"column_start":20,"column_end":24},"name":"pb11","qualname":"::gpio::gpiob::Parts::pb11","value":"gpio::gpiob::PB11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5022},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":97132,"byte_end":97136,"line_start":1055,"line_end":1055,"column_start":20,"column_end":24},"name":"pb12","qualname":"::gpio::gpiob::Parts::pb12","value":"gpio::gpiob::PB12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5023},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":98243,"byte_end":98247,"line_start":1064,"line_end":1064,"column_start":20,"column_end":24},"name":"pb13","qualname":"::gpio::gpiob::Parts::pb13","value":"gpio::gpiob::PB13<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5024},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99187,"byte_end":99191,"line_start":1072,"line_end":1072,"column_start":20,"column_end":24},"name":"pb14","qualname":"::gpio::gpiob::Parts::pb14","value":"gpio::gpiob::PB14<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5025},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99862,"byte_end":99866,"line_start":1082,"line_end":1082,"column_start":20,"column_end":24},"name":"pb15","qualname":"::gpio::gpiob::Parts::pb15","value":"gpio::gpiob::PB15<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5052},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87116,"byte_end":87119,"line_start":918,"line_end":918,"column_start":31,"column_end":34},"name":"PBx","qualname":"::gpio::gpiob::PBx","value":"PBx {  }","parent":null,"children":[{"krate":0,"index":5054},{"krate":0,"index":5055}],"decl_id":null,"docs":" Partially erased pin\n","sig":null,"attributes":[{"value":"/ Partially erased pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":58121,"byte_end":58145,"line_start":390,"line_end":390,"column_start":17,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5082},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87149,"byte_end":87152,"line_start":920,"line_end":920,"column_start":13,"column_end":16},"name":"PB0","qualname":"::gpio::gpiob::PB0","value":"PB0 {  }","parent":null,"children":[{"krate":0,"index":5084}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5087},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87260,"byte_end":87268,"line_start":921,"line_end":921,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB0<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB0<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5090},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87300,"byte_end":87309,"line_start":922,"line_end":922,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB0<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB0<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5093},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87358,"byte_end":87366,"line_start":924,"line_end":924,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PB0<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB0<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5096},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87478,"byte_end":87486,"line_start":925,"line_end":925,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB0<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB0<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5099},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87606,"byte_end":87614,"line_start":926,"line_end":926,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PB0<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB0<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5152},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87758,"byte_end":87761,"line_start":928,"line_end":928,"column_start":13,"column_end":16},"name":"PB1","qualname":"::gpio::gpiob::PB1","value":"PB1 {  }","parent":null,"children":[{"krate":0,"index":5154}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5157},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87869,"byte_end":87877,"line_start":929,"line_end":929,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB1<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB1<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5160},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87909,"byte_end":87918,"line_start":930,"line_end":930,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB1<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB1<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5163},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":87967,"byte_end":87975,"line_start":932,"line_end":932,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PB1<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB1<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5166},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":88087,"byte_end":88095,"line_start":933,"line_end":933,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB1<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB1<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5169},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":88215,"byte_end":88223,"line_start":934,"line_end":934,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PB1<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB1<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5172},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":88361,"byte_end":88369,"line_start":935,"line_end":935,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PB1<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB1<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5225},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":88571,"byte_end":88574,"line_start":938,"line_end":938,"column_start":13,"column_end":16},"name":"PB2","qualname":"::gpio::gpiob::PB2","value":"PB2 {  }","parent":null,"children":[{"krate":0,"index":5227}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":88686,"byte_end":88694,"line_start":939,"line_end":939,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB2<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB2<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f302\", feature = \"stm32f303\",\n          feature = \"stm32f334\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":88839,"byte_end":88848,"line_start":941,"line_end":941,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB2<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB2<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f302\", feature = \"stm32f303\",\n          feature = \"stm32f334\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5286},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":88941,"byte_end":88944,"line_start":943,"line_end":943,"column_start":13,"column_end":16},"name":"PB3","qualname":"::gpio::gpiob::PB3","value":"PB3 {  }","parent":null,"children":[{"krate":0,"index":5288}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5291},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":89040,"byte_end":89048,"line_start":944,"line_end":944,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PB3<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB3<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5294},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":89079,"byte_end":89087,"line_start":945,"line_end":945,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB3<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB3<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5297},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":89118,"byte_end":89126,"line_start":946,"line_end":946,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB3<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB3<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5300},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":89157,"byte_end":89165,"line_start":947,"line_end":947,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PB3<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB3<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5303},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":89197,"byte_end":89206,"line_start":948,"line_end":948,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB3<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB3<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5306},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":89255,"byte_end":89263,"line_start":950,"line_end":950,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PB3<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB3<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5309},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":89396,"byte_end":89404,"line_start":951,"line_end":951,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB3<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB3<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5312},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":89524,"byte_end":89532,"line_start":952,"line_end":952,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PB3<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB3<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5315},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":89644,"byte_end":89652,"line_start":953,"line_end":953,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PB3<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB3<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5318},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":89812,"byte_end":89821,"line_start":954,"line_end":954,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PB3<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB3<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5371},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90056,"byte_end":90059,"line_start":958,"line_end":958,"column_start":13,"column_end":16},"name":"PB4","qualname":"::gpio::gpiob::PB4","value":"PB4 {  }","parent":null,"children":[{"krate":0,"index":5373}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5376},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90155,"byte_end":90163,"line_start":959,"line_end":959,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PB4<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB4<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5379},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90194,"byte_end":90202,"line_start":960,"line_end":960,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB4<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB4<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5382},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90233,"byte_end":90241,"line_start":961,"line_end":961,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB4<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB4<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5385},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90272,"byte_end":90280,"line_start":962,"line_end":962,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PB4<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB4<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5388},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90312,"byte_end":90321,"line_start":963,"line_end":963,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PB4<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB4<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5391},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90354,"byte_end":90363,"line_start":964,"line_end":964,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB4<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB4<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5394},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90412,"byte_end":90420,"line_start":966,"line_end":966,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PB4<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB4<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5397},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90532,"byte_end":90540,"line_start":967,"line_end":967,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB4<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB4<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5400},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90660,"byte_end":90668,"line_start":968,"line_end":968,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PB4<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB4<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5403},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":90780,"byte_end":90788,"line_start":969,"line_end":969,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PB4<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB4<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5456},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91011,"byte_end":91014,"line_start":972,"line_end":972,"column_start":13,"column_end":16},"name":"PB5","qualname":"::gpio::gpiob::PB5","value":"PB5 {  }","parent":null,"children":[{"krate":0,"index":5458}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5461},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91122,"byte_end":91130,"line_start":973,"line_end":973,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB5<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB5<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5464},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91161,"byte_end":91169,"line_start":974,"line_end":974,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB5<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB5<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5467},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91200,"byte_end":91208,"line_start":975,"line_end":975,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PB5<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB5<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5470},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91240,"byte_end":91249,"line_start":976,"line_end":976,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PB5<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB5<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5473},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91282,"byte_end":91291,"line_start":977,"line_end":977,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB5<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB5<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5476},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91340,"byte_end":91348,"line_start":979,"line_end":979,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PB5<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB5<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5479},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91460,"byte_end":91468,"line_start":980,"line_end":980,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB5<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB5<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5482},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91588,"byte_end":91596,"line_start":981,"line_end":981,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PB5<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB5<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":91708,"byte_end":91716,"line_start":982,"line_end":982,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PB5<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB5<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5538},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92050,"byte_end":92053,"line_start":986,"line_end":986,"column_start":13,"column_end":16},"name":"PB6","qualname":"::gpio::gpiob::PB6","value":"PB6 {  }","parent":null,"children":[{"krate":0,"index":5540}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5543},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92161,"byte_end":92169,"line_start":987,"line_end":987,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB6<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB6<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5546},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92200,"byte_end":92208,"line_start":988,"line_end":988,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB6<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB6<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5549},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92239,"byte_end":92247,"line_start":989,"line_end":989,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB6<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB6<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5552},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92278,"byte_end":92286,"line_start":990,"line_end":990,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PB6<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB6<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5555},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92318,"byte_end":92327,"line_start":991,"line_end":991,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB6<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB6<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5558},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92376,"byte_end":92384,"line_start":993,"line_end":993,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PB6<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB6<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5561},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92517,"byte_end":92525,"line_start":994,"line_end":994,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PB6<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB6<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5564},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92645,"byte_end":92653,"line_start":995,"line_end":995,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PB6<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB6<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5567},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":92774,"byte_end":92783,"line_start":996,"line_end":996,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PB6<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB6<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5620},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93026,"byte_end":93029,"line_start":1000,"line_end":1000,"column_start":13,"column_end":16},"name":"PB7","qualname":"::gpio::gpiob::PB7","value":"PB7 {  }","parent":null,"children":[{"krate":0,"index":5622}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93137,"byte_end":93145,"line_start":1001,"line_end":1001,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB7<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB7<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5628},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93176,"byte_end":93184,"line_start":1002,"line_end":1002,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB7<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB7<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5631},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93215,"byte_end":93223,"line_start":1003,"line_end":1003,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB7<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB7<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5634},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93254,"byte_end":93262,"line_start":1004,"line_end":1004,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PB7<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB7<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5637},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93294,"byte_end":93303,"line_start":1005,"line_end":1005,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB7<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB7<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5640},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93352,"byte_end":93360,"line_start":1007,"line_end":1007,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PB7<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB7<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5643},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93493,"byte_end":93501,"line_start":1008,"line_end":1008,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PB7<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB7<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5646},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93622,"byte_end":93631,"line_start":1009,"line_end":1009,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PB7<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PB7<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5699},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":93896,"byte_end":93899,"line_start":1013,"line_end":1013,"column_start":13,"column_end":16},"name":"PB8","qualname":"::gpio::gpiob::PB8","value":"PB8 {  }","parent":null,"children":[{"krate":0,"index":5701}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5704},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":94007,"byte_end":94015,"line_start":1014,"line_end":1014,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB8<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB8<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5707},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":94046,"byte_end":94054,"line_start":1015,"line_end":1015,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB8<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB8<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5710},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":94085,"byte_end":94093,"line_start":1016,"line_end":1016,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB8<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB8<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5713},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":94125,"byte_end":94134,"line_start":1017,"line_end":1017,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB8<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB8<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5716},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":94183,"byte_end":94191,"line_start":1019,"line_end":1019,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PB8<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB8<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5719},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":94461,"byte_end":94469,"line_start":1021,"line_end":1021,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PB8<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB8<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5722},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":94603,"byte_end":94611,"line_start":1022,"line_end":1022,"column_start":23,"column_end":31},"name":"into_af9","qualname":"<PB8<MODE>>::into_af9","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB8<AF9>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5725},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":94724,"byte_end":94733,"line_start":1023,"line_end":1023,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PB8<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB8<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5728},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":94855,"byte_end":94864,"line_start":1024,"line_end":1024,"column_start":24,"column_end":33},"name":"into_af12","qualname":"<PB8<MODE>>::into_af12","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB8<AF12>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5781},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95067,"byte_end":95070,"line_start":1027,"line_end":1027,"column_start":13,"column_end":16},"name":"PB9","qualname":"::gpio::gpiob::PB9","value":"PB9 {  }","parent":null,"children":[{"krate":0,"index":5783}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5786},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95178,"byte_end":95186,"line_start":1028,"line_end":1028,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB9<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB9<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5789},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95217,"byte_end":95225,"line_start":1029,"line_end":1029,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB9<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB9<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5792},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95256,"byte_end":95264,"line_start":1030,"line_end":1030,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PB9<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB9<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5795},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95295,"byte_end":95303,"line_start":1031,"line_end":1031,"column_start":23,"column_end":31},"name":"into_af8","qualname":"<PB9<MODE>>::into_af8","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB9<AF8>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5798},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95335,"byte_end":95344,"line_start":1032,"line_end":1032,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB9<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB9<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5801},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95393,"byte_end":95401,"line_start":1034,"line_end":1034,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PB9<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB9<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5804},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95671,"byte_end":95679,"line_start":1036,"line_end":1036,"column_start":23,"column_end":31},"name":"into_af9","qualname":"<PB9<MODE>>::into_af9","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB9<AF9>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f334\",\n          feature = \"stm32f328\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5807},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95792,"byte_end":95801,"line_start":1037,"line_end":1037,"column_start":24,"column_end":33},"name":"into_af10","qualname":"<PB9<MODE>>::into_af10","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB9<AF10>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5860},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":95986,"byte_end":95990,"line_start":1040,"line_end":1040,"column_start":13,"column_end":17},"name":"PB10","qualname":"::gpio::gpiob::PB10","value":"PB10 {  }","parent":null,"children":[{"krate":0,"index":5862}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5865},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":96108,"byte_end":96116,"line_start":1041,"line_end":1041,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB10<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB10<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5868},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":96147,"byte_end":96155,"line_start":1042,"line_end":1042,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB10<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB10<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5871},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":96186,"byte_end":96194,"line_start":1043,"line_end":1043,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PB10<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB10<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5874},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":96226,"byte_end":96235,"line_start":1044,"line_end":1044,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB10<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB10<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":5927},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":96348,"byte_end":96352,"line_start":1048,"line_end":1048,"column_start":13,"column_end":17},"name":"PB11","qualname":"::gpio::gpiob::PB11","value":"PB11 {  }","parent":null,"children":[{"krate":0,"index":5929}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5932},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":96474,"byte_end":96482,"line_start":1049,"line_end":1049,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB11<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB11<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5935},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":96620,"byte_end":96628,"line_start":1050,"line_end":1050,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB11<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB11<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5938},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":96766,"byte_end":96774,"line_start":1051,"line_end":1051,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PB11<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB11<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5941},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":96971,"byte_end":96980,"line_start":1053,"line_end":1053,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB11<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB11<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5994},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":97125,"byte_end":97129,"line_start":1055,"line_end":1055,"column_start":13,"column_end":17},"name":"PB12","qualname":"::gpio::gpiob::PB12","value":"PB12 {  }","parent":null,"children":[{"krate":0,"index":5996}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5999},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":97251,"byte_end":97259,"line_start":1056,"line_end":1056,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB12<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB12<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6002},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":97397,"byte_end":97405,"line_start":1057,"line_end":1057,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB12<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB12<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6005},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":97564,"byte_end":97572,"line_start":1058,"line_end":1058,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PB12<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB12<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6008},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":97731,"byte_end":97739,"line_start":1059,"line_end":1059,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PB12<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB12<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6011},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":97877,"byte_end":97885,"line_start":1060,"line_end":1060,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PB12<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB12<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6014},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":98082,"byte_end":98091,"line_start":1062,"line_end":1062,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB12<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB12<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6067},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":98236,"byte_end":98240,"line_start":1064,"line_end":1064,"column_start":13,"column_end":17},"name":"PB13","qualname":"::gpio::gpiob::PB13","value":"PB13 {  }","parent":null,"children":[{"krate":0,"index":6069}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6072},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":98362,"byte_end":98370,"line_start":1065,"line_end":1065,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB13<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB13<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6075},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":98508,"byte_end":98516,"line_start":1066,"line_end":1066,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PB13<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB13<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6078},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":98675,"byte_end":98683,"line_start":1067,"line_end":1067,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PB13<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB13<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6081},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":98821,"byte_end":98829,"line_start":1068,"line_end":1068,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PB13<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB13<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6084},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99026,"byte_end":99035,"line_start":1070,"line_end":1070,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB13<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB13<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6137},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99180,"byte_end":99184,"line_start":1072,"line_end":1072,"column_start":13,"column_end":17},"name":"PB14","qualname":"::gpio::gpiob::PB14","value":"PB14 {  }","parent":null,"children":[{"krate":0,"index":6139}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6142},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99302,"byte_end":99310,"line_start":1073,"line_end":1073,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB14<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB14<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6145},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99341,"byte_end":99349,"line_start":1074,"line_end":1074,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PB14<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB14<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6148},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99380,"byte_end":99388,"line_start":1075,"line_end":1075,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PB14<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB14<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6151},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99420,"byte_end":99429,"line_start":1076,"line_end":1076,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB14<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB14<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6154},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99478,"byte_end":99486,"line_start":1078,"line_end":1078,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PB14<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB14<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6157},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99645,"byte_end":99653,"line_start":1079,"line_end":1079,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PB14<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB14<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6210},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99855,"byte_end":99859,"line_start":1082,"line_end":1082,"column_start":13,"column_end":17},"name":"PB15","qualname":"::gpio::gpiob::PB15","value":"PB15 {  }","parent":null,"children":[{"krate":0,"index":6212}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6215},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":99977,"byte_end":99985,"line_start":1083,"line_end":1083,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PB15<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB15<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6218},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":100016,"byte_end":100024,"line_start":1084,"line_end":1084,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PB15<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB15<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6221},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":100056,"byte_end":100065,"line_start":1085,"line_end":1085,"column_start":24,"column_end":33},"name":"into_af15","qualname":"<PB15<MODE>>::into_af15","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB15<AF15>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6224},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":100114,"byte_end":100122,"line_start":1087,"line_end":1087,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PB15<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB15<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6227},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":100281,"byte_end":100289,"line_start":1088,"line_end":1088,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PB15<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB15<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303\", feature = \"stm32f334\", feature = \"stm32f328\",\n          feature = \"stm32f358\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6230},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":100427,"byte_end":100435,"line_start":1089,"line_end":1089,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PB15<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PB15<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f301\", feature = \"stm32f318\", feature = \"stm32f302\",\n          feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":6283},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":115698,"byte_end":115703,"line_start":1369,"line_end":1369,"column_start":15,"column_end":20},"name":"gpioc","qualname":"::gpio::gpioc","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":6284},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6290},{"krate":0,"index":6293},{"krate":0,"index":6294},{"krate":0,"index":6311},{"krate":0,"index":6323},{"krate":0,"index":6345},{"krate":0,"index":6351},{"krate":0,"index":6353},{"krate":0,"index":6355},{"krate":0,"index":6357},{"krate":0,"index":6359},{"krate":0,"index":6361},{"krate":0,"index":6363},{"krate":0,"index":6365},{"krate":0,"index":6367},{"krate":0,"index":6369},{"krate":0,"index":6371},{"krate":0,"index":6375},{"krate":0,"index":6378},{"krate":0,"index":6385},{"krate":0,"index":6390},{"krate":0,"index":6394},{"krate":0,"index":6399},{"krate":0,"index":6401},{"krate":0,"index":6404},{"krate":0,"index":6427},{"krate":0,"index":6430},{"krate":0,"index":6433},{"krate":0,"index":6436},{"krate":0,"index":6443},{"krate":0,"index":6448},{"krate":0,"index":6452},{"krate":0,"index":6457},{"krate":0,"index":6459},{"krate":0,"index":6462},{"krate":0,"index":6485},{"krate":0,"index":6488},{"krate":0,"index":6491},{"krate":0,"index":6494},{"krate":0,"index":6501},{"krate":0,"index":6506},{"krate":0,"index":6510},{"krate":0,"index":6515},{"krate":0,"index":6517},{"krate":0,"index":6520},{"krate":0,"index":6546},{"krate":0,"index":6549},{"krate":0,"index":6552},{"krate":0,"index":6555},{"krate":0,"index":6562},{"krate":0,"index":6567},{"krate":0,"index":6571},{"krate":0,"index":6576},{"krate":0,"index":6578},{"krate":0,"index":6581},{"krate":0,"index":6607},{"krate":0,"index":6610},{"krate":0,"index":6613},{"krate":0,"index":6616},{"krate":0,"index":6623},{"krate":0,"index":6628},{"krate":0,"index":6632},{"krate":0,"index":6637},{"krate":0,"index":6639},{"krate":0,"index":6642},{"krate":0,"index":6668},{"krate":0,"index":6671},{"krate":0,"index":6674},{"krate":0,"index":6677},{"krate":0,"index":6684},{"krate":0,"index":6689},{"krate":0,"index":6693},{"krate":0,"index":6698},{"krate":0,"index":6700},{"krate":0,"index":6703},{"krate":0,"index":6732},{"krate":0,"index":6735},{"krate":0,"index":6738},{"krate":0,"index":6741},{"krate":0,"index":6748},{"krate":0,"index":6753},{"krate":0,"index":6757},{"krate":0,"index":6762},{"krate":0,"index":6764},{"krate":0,"index":6767},{"krate":0,"index":6802},{"krate":0,"index":6805},{"krate":0,"index":6808},{"krate":0,"index":6811},{"krate":0,"index":6818},{"krate":0,"index":6823},{"krate":0,"index":6827},{"krate":0,"index":6832},{"krate":0,"index":6834},{"krate":0,"index":6837},{"krate":0,"index":6872},{"krate":0,"index":6875},{"krate":0,"index":6878},{"krate":0,"index":6881},{"krate":0,"index":6888},{"krate":0,"index":6893},{"krate":0,"index":6897},{"krate":0,"index":6902},{"krate":0,"index":6904},{"krate":0,"index":6907},{"krate":0,"index":6939},{"krate":0,"index":6942},{"krate":0,"index":6945},{"krate":0,"index":6948},{"krate":0,"index":6955},{"krate":0,"index":6960},{"krate":0,"index":6964},{"krate":0,"index":6969},{"krate":0,"index":6971},{"krate":0,"index":6974},{"krate":0,"index":7009},{"krate":0,"index":7012},{"krate":0,"index":7015},{"krate":0,"index":7018},{"krate":0,"index":7025},{"krate":0,"index":7030},{"krate":0,"index":7034},{"krate":0,"index":7039},{"krate":0,"index":7041},{"krate":0,"index":7044},{"krate":0,"index":7079},{"krate":0,"index":7082},{"krate":0,"index":7085},{"krate":0,"index":7088},{"krate":0,"index":7095},{"krate":0,"index":7100},{"krate":0,"index":7104},{"krate":0,"index":7109},{"krate":0,"index":7111},{"krate":0,"index":7114},{"krate":0,"index":7149},{"krate":0,"index":7152},{"krate":0,"index":7155},{"krate":0,"index":7158},{"krate":0,"index":7165},{"krate":0,"index":7170},{"krate":0,"index":7174},{"krate":0,"index":7179},{"krate":0,"index":7181},{"krate":0,"index":7184},{"krate":0,"index":7219},{"krate":0,"index":7222},{"krate":0,"index":7225},{"krate":0,"index":7228},{"krate":0,"index":7235},{"krate":0,"index":7240},{"krate":0,"index":7244},{"krate":0,"index":7249},{"krate":0,"index":7251},{"krate":0,"index":7254},{"krate":0,"index":7277},{"krate":0,"index":7280},{"krate":0,"index":7283},{"krate":0,"index":7286},{"krate":0,"index":7293},{"krate":0,"index":7298},{"krate":0,"index":7302},{"krate":0,"index":7307},{"krate":0,"index":7309},{"krate":0,"index":7312},{"krate":0,"index":7332},{"krate":0,"index":7335},{"krate":0,"index":7338},{"krate":0,"index":7341},{"krate":0,"index":7348},{"krate":0,"index":7353},{"krate":0,"index":7357},{"krate":0,"index":7362},{"krate":0,"index":7364},{"krate":0,"index":7367},{"krate":0,"index":7387},{"krate":0,"index":7390},{"krate":0,"index":7393},{"krate":0,"index":7396},{"krate":0,"index":7403},{"krate":0,"index":7408},{"krate":0,"index":7412},{"krate":0,"index":7417}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53503,"byte_end":53511,"line_start":261,"line_end":261,"column_start":13,"column_end":21}},{"value":"cfg(all(any(feature = \"stm32f302\", feature = \"stm32f303\",), not(any())))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53524,"byte_end":53665,"line_start":262,"line_end":266,"column_start":13,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":6329},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":115873,"byte_end":115876,"line_start":1375,"line_end":1375,"column_start":19,"column_end":22},"name":"pc0","qualname":"::gpio::gpioc::Parts::pc0","value":"gpio::gpioc::PC0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6330},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116118,"byte_end":116121,"line_start":1380,"line_end":1380,"column_start":19,"column_end":22},"name":"pc1","qualname":"::gpio::gpioc::Parts::pc1","value":"gpio::gpioc::PC1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6331},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116439,"byte_end":116442,"line_start":1385,"line_end":1385,"column_start":19,"column_end":22},"name":"pc2","qualname":"::gpio::gpioc::Parts::pc2","value":"gpio::gpioc::PC2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6332},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116829,"byte_end":116832,"line_start":1391,"line_end":1391,"column_start":19,"column_end":22},"name":"pc3","qualname":"::gpio::gpioc::Parts::pc3","value":"gpio::gpioc::PC3<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6333},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117143,"byte_end":117146,"line_start":1397,"line_end":1397,"column_start":19,"column_end":22},"name":"pc4","qualname":"::gpio::gpioc::Parts::pc4","value":"gpio::gpioc::PC4<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6334},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117457,"byte_end":117460,"line_start":1403,"line_end":1403,"column_start":19,"column_end":22},"name":"pc5","qualname":"::gpio::gpioc::Parts::pc5","value":"gpio::gpioc::PC5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6335},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117810,"byte_end":117813,"line_start":1410,"line_end":1410,"column_start":19,"column_end":22},"name":"pc6","qualname":"::gpio::gpioc::Parts::pc6","value":"gpio::gpioc::PC6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6336},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118278,"byte_end":118281,"line_start":1418,"line_end":1418,"column_start":19,"column_end":22},"name":"pc7","qualname":"::gpio::gpioc::Parts::pc7","value":"gpio::gpioc::PC7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6337},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118809,"byte_end":118812,"line_start":1426,"line_end":1426,"column_start":19,"column_end":22},"name":"pc8","qualname":"::gpio::gpioc::Parts::pc8","value":"gpio::gpioc::PC8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6338},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119225,"byte_end":119228,"line_start":1433,"line_end":1433,"column_start":19,"column_end":22},"name":"pc9","qualname":"::gpio::gpioc::Parts::pc9","value":"gpio::gpioc::PC9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6339},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119830,"byte_end":119834,"line_start":1442,"line_end":1442,"column_start":20,"column_end":24},"name":"pc10","qualname":"::gpio::gpioc::Parts::pc10","value":"gpio::gpioc::PC10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6340},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120385,"byte_end":120389,"line_start":1450,"line_end":1450,"column_start":20,"column_end":24},"name":"pc11","qualname":"::gpio::gpioc::Parts::pc11","value":"gpio::gpioc::PC11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6341},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120940,"byte_end":120944,"line_start":1458,"line_end":1458,"column_start":20,"column_end":24},"name":"pc12","qualname":"::gpio::gpioc::Parts::pc12","value":"gpio::gpioc::PC12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6342},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121495,"byte_end":121499,"line_start":1466,"line_end":1466,"column_start":20,"column_end":24},"name":"pc13","qualname":"::gpio::gpioc::Parts::pc13","value":"gpio::gpioc::PC13<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6343},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121751,"byte_end":121755,"line_start":1471,"line_end":1471,"column_start":20,"column_end":24},"name":"pc14","qualname":"::gpio::gpioc::Parts::pc14","value":"gpio::gpioc::PC14<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6344},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121955,"byte_end":121959,"line_start":1474,"line_end":1474,"column_start":20,"column_end":24},"name":"pc15","qualname":"::gpio::gpioc::Parts::pc15","value":"gpio::gpioc::PC15<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6371},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":115834,"byte_end":115837,"line_start":1373,"line_end":1373,"column_start":31,"column_end":34},"name":"PCx","qualname":"::gpio::gpioc::PCx","value":"PCx {  }","parent":null,"children":[{"krate":0,"index":6373},{"krate":0,"index":6374}],"decl_id":null,"docs":" Partially erased pin\n","sig":null,"attributes":[{"value":"/ Partially erased pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":58121,"byte_end":58145,"line_start":390,"line_end":390,"column_start":17,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6401},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":115867,"byte_end":115870,"line_start":1375,"line_end":1375,"column_start":13,"column_end":16},"name":"PC0","qualname":"::gpio::gpioc::PC0","value":"PC0 {  }","parent":null,"children":[{"krate":0,"index":6403}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6406},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":115978,"byte_end":115986,"line_start":1376,"line_end":1376,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC0<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC0<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":6459},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116112,"byte_end":116115,"line_start":1380,"line_end":1380,"column_start":13,"column_end":16},"name":"PC1","qualname":"::gpio::gpioc::PC1","value":"PC1 {  }","parent":null,"children":[{"krate":0,"index":6461}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6464},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116240,"byte_end":116248,"line_start":1382,"line_end":1382,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC1<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC1<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6517},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116433,"byte_end":116436,"line_start":1385,"line_end":1385,"column_start":13,"column_end":16},"name":"PC2","qualname":"::gpio::gpioc::PC2","value":"PC2 {  }","parent":null,"children":[{"krate":0,"index":6519}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6522},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116544,"byte_end":116552,"line_start":1386,"line_end":1386,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC2<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC2<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6525},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116702,"byte_end":116710,"line_start":1389,"line_end":1389,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PC2<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC2<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6578},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116823,"byte_end":116826,"line_start":1391,"line_end":1391,"column_start":13,"column_end":16},"name":"PC3","qualname":"::gpio::gpioc::PC3","value":"PC3 {  }","parent":null,"children":[{"krate":0,"index":6580}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6583},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116934,"byte_end":116942,"line_start":1392,"line_end":1392,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC3<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC3<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6586},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":116973,"byte_end":116981,"line_start":1393,"line_end":1393,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PC3<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC3<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":6639},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117137,"byte_end":117140,"line_start":1397,"line_end":1397,"column_start":13,"column_end":16},"name":"PC4","qualname":"::gpio::gpioc::PC4","value":"PC4 {  }","parent":null,"children":[{"krate":0,"index":6641}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6644},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117248,"byte_end":117256,"line_start":1398,"line_end":1398,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC4<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC4<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6647},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117287,"byte_end":117295,"line_start":1399,"line_end":1399,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PC4<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC4<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":6700},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117451,"byte_end":117454,"line_start":1403,"line_end":1403,"column_start":13,"column_end":16},"name":"PC5","qualname":"::gpio::gpioc::PC5","value":"PC5 {  }","parent":null,"children":[{"krate":0,"index":6702}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6705},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117562,"byte_end":117570,"line_start":1404,"line_end":1404,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC5<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC5<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6708},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117601,"byte_end":117609,"line_start":1405,"line_end":1405,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PC5<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC5<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6711},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117640,"byte_end":117648,"line_start":1406,"line_end":1406,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PC5<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC5<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":6764},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117804,"byte_end":117807,"line_start":1410,"line_end":1410,"column_start":13,"column_end":16},"name":"PC6","qualname":"::gpio::gpioc::PC6","value":"PC6 {  }","parent":null,"children":[{"krate":0,"index":6766}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6769},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117915,"byte_end":117923,"line_start":1411,"line_end":1411,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC6<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC6<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6772},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117954,"byte_end":117962,"line_start":1412,"line_end":1412,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PC6<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC6<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6775},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":117993,"byte_end":118001,"line_start":1413,"line_end":1413,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PC6<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC6<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6778},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118049,"byte_end":118057,"line_start":1415,"line_end":1415,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PC6<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC6<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6781},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118151,"byte_end":118159,"line_start":1416,"line_end":1416,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PC6<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC6<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6834},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118272,"byte_end":118275,"line_start":1418,"line_end":1418,"column_start":13,"column_end":16},"name":"PC7","qualname":"::gpio::gpioc::PC7","value":"PC7 {  }","parent":null,"children":[{"krate":0,"index":6836}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6839},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118383,"byte_end":118391,"line_start":1419,"line_end":1419,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC7<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC7<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6842},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118422,"byte_end":118430,"line_start":1420,"line_end":1420,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PC7<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC7<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6845},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118478,"byte_end":118486,"line_start":1422,"line_end":1422,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PC7<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC7<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6848},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118580,"byte_end":118588,"line_start":1423,"line_end":1423,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PC7<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC7<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6851},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118695,"byte_end":118703,"line_start":1424,"line_end":1424,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PC7<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PC7<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6904},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118803,"byte_end":118806,"line_start":1426,"line_end":1426,"column_start":13,"column_end":16},"name":"PC8","qualname":"::gpio::gpioc::PC8","value":"PC8 {  }","parent":null,"children":[{"krate":0,"index":6906}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6909},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118914,"byte_end":118922,"line_start":1427,"line_end":1427,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC8<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC8<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6912},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":118953,"byte_end":118961,"line_start":1428,"line_end":1428,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PC8<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC8<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6915},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119009,"byte_end":119017,"line_start":1430,"line_end":1430,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PC8<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC8<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6918},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119111,"byte_end":119119,"line_start":1431,"line_end":1431,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PC8<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC8<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6971},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119219,"byte_end":119222,"line_start":1433,"line_end":1433,"column_start":13,"column_end":16},"name":"PC9","qualname":"::gpio::gpioc::PC9","value":"PC9 {  }","parent":null,"children":[{"krate":0,"index":6973}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6976},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119330,"byte_end":119338,"line_start":1434,"line_end":1434,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC9<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC9<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6979},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119369,"byte_end":119377,"line_start":1435,"line_end":1435,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PC9<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC9<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6982},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119497,"byte_end":119505,"line_start":1438,"line_end":1438,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PC9<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC9<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6985},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119600,"byte_end":119608,"line_start":1439,"line_end":1439,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PC9<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC9<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6988},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119715,"byte_end":119723,"line_start":1440,"line_end":1440,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PC9<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC9<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7041},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119823,"byte_end":119827,"line_start":1442,"line_end":1442,"column_start":13,"column_end":17},"name":"PC10","qualname":"::gpio::gpioc::PC10","value":"PC10 {  }","parent":null,"children":[{"krate":0,"index":7043}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7046},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119945,"byte_end":119953,"line_start":1443,"line_end":1443,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC10<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC10<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":7049},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":119984,"byte_end":119992,"line_start":1444,"line_end":1444,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PC10<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC10<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":7052},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120040,"byte_end":120048,"line_start":1446,"line_end":1446,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PC10<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC10<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7055},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120142,"byte_end":120150,"line_start":1447,"line_end":1447,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PC10<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC10<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7058},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120257,"byte_end":120265,"line_start":1448,"line_end":1448,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PC10<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC10<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7111},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120378,"byte_end":120382,"line_start":1450,"line_end":1450,"column_start":13,"column_end":17},"name":"PC11","qualname":"::gpio::gpioc::PC11","value":"PC11 {  }","parent":null,"children":[{"krate":0,"index":7113}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7116},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120500,"byte_end":120508,"line_start":1451,"line_end":1451,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC11<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC11<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":7119},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120539,"byte_end":120547,"line_start":1452,"line_end":1452,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PC11<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC11<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":7122},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120595,"byte_end":120603,"line_start":1454,"line_end":1454,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PC11<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC11<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7125},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120697,"byte_end":120705,"line_start":1455,"line_end":1455,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PC11<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC11<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7128},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120812,"byte_end":120820,"line_start":1456,"line_end":1456,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PC11<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC11<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7181},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":120933,"byte_end":120937,"line_start":1458,"line_end":1458,"column_start":13,"column_end":17},"name":"PC12","qualname":"::gpio::gpioc::PC12","value":"PC12 {  }","parent":null,"children":[{"krate":0,"index":7183}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7186},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121055,"byte_end":121063,"line_start":1459,"line_end":1459,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PC12<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC12<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":7189},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121094,"byte_end":121102,"line_start":1460,"line_end":1460,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PC12<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC12<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":7192},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121150,"byte_end":121158,"line_start":1462,"line_end":1462,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PC12<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC12<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n          \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7195},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121252,"byte_end":121260,"line_start":1463,"line_end":1463,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PC12<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC12<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7198},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121367,"byte_end":121375,"line_start":1464,"line_end":1464,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PC12<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC12<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n          \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7251},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121488,"byte_end":121492,"line_start":1466,"line_end":1466,"column_start":13,"column_end":17},"name":"PC13","qualname":"::gpio::gpioc::PC13","value":"PC13 {  }","parent":null,"children":[{"krate":0,"index":7253}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7256},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121610,"byte_end":121618,"line_start":1467,"line_end":1467,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PC13<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PC13<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":7309},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121744,"byte_end":121748,"line_start":1471,"line_end":1471,"column_start":13,"column_end":17},"name":"PC14","qualname":"::gpio::gpioc::PC14","value":"PC14 {  }","parent":null,"children":[{"krate":0,"index":7311}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7364},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":121948,"byte_end":121952,"line_start":1474,"line_end":1474,"column_start":13,"column_end":17},"name":"PC15","qualname":"::gpio::gpioc::PC15","value":"PC15 {  }","parent":null,"children":[{"krate":0,"index":7366}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":7419},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":125773,"byte_end":125778,"line_start":1567,"line_end":1567,"column_start":15,"column_end":20},"name":"gpiod","qualname":"::gpio::gpiod","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":7420},{"krate":0,"index":7421},{"krate":0,"index":7422},{"krate":0,"index":7423},{"krate":0,"index":7424},{"krate":0,"index":7425},{"krate":0,"index":7426},{"krate":0,"index":7429},{"krate":0,"index":7430},{"krate":0,"index":7447},{"krate":0,"index":7459},{"krate":0,"index":7481},{"krate":0,"index":7487},{"krate":0,"index":7489},{"krate":0,"index":7491},{"krate":0,"index":7493},{"krate":0,"index":7495},{"krate":0,"index":7497},{"krate":0,"index":7499},{"krate":0,"index":7501},{"krate":0,"index":7503},{"krate":0,"index":7505},{"krate":0,"index":7507},{"krate":0,"index":7511},{"krate":0,"index":7514},{"krate":0,"index":7521},{"krate":0,"index":7526},{"krate":0,"index":7530},{"krate":0,"index":7535},{"krate":0,"index":7537},{"krate":0,"index":7540},{"krate":0,"index":7566},{"krate":0,"index":7569},{"krate":0,"index":7572},{"krate":0,"index":7575},{"krate":0,"index":7582},{"krate":0,"index":7587},{"krate":0,"index":7591},{"krate":0,"index":7596},{"krate":0,"index":7598},{"krate":0,"index":7601},{"krate":0,"index":7633},{"krate":0,"index":7636},{"krate":0,"index":7639},{"krate":0,"index":7642},{"krate":0,"index":7649},{"krate":0,"index":7654},{"krate":0,"index":7658},{"krate":0,"index":7663},{"krate":0,"index":7665},{"krate":0,"index":7668},{"krate":0,"index":7700},{"krate":0,"index":7703},{"krate":0,"index":7706},{"krate":0,"index":7709},{"krate":0,"index":7716},{"krate":0,"index":7721},{"krate":0,"index":7725},{"krate":0,"index":7730},{"krate":0,"index":7732},{"krate":0,"index":7735},{"krate":0,"index":7764},{"krate":0,"index":7767},{"krate":0,"index":7770},{"krate":0,"index":7773},{"krate":0,"index":7780},{"krate":0,"index":7785},{"krate":0,"index":7789},{"krate":0,"index":7794},{"krate":0,"index":7796},{"krate":0,"index":7799},{"krate":0,"index":7828},{"krate":0,"index":7831},{"krate":0,"index":7834},{"krate":0,"index":7837},{"krate":0,"index":7844},{"krate":0,"index":7849},{"krate":0,"index":7853},{"krate":0,"index":7858},{"krate":0,"index":7860},{"krate":0,"index":7863},{"krate":0,"index":7889},{"krate":0,"index":7892},{"krate":0,"index":7895},{"krate":0,"index":7898},{"krate":0,"index":7905},{"krate":0,"index":7910},{"krate":0,"index":7914},{"krate":0,"index":7919},{"krate":0,"index":7921},{"krate":0,"index":7924},{"krate":0,"index":7953},{"krate":0,"index":7956},{"krate":0,"index":7959},{"krate":0,"index":7962},{"krate":0,"index":7969},{"krate":0,"index":7974},{"krate":0,"index":7978},{"krate":0,"index":7983},{"krate":0,"index":7985},{"krate":0,"index":7988},{"krate":0,"index":8017},{"krate":0,"index":8020},{"krate":0,"index":8023},{"krate":0,"index":8026},{"krate":0,"index":8033},{"krate":0,"index":8038},{"krate":0,"index":8042},{"krate":0,"index":8047},{"krate":0,"index":8049},{"krate":0,"index":8052},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":8084},{"krate":0,"index":8087},{"krate":0,"index":8094},{"krate":0,"index":8099},{"krate":0,"index":8103},{"krate":0,"index":8108},{"krate":0,"index":8110},{"krate":0,"index":8113},{"krate":0,"index":8139},{"krate":0,"index":8142},{"krate":0,"index":8145},{"krate":0,"index":8148},{"krate":0,"index":8155},{"krate":0,"index":8160},{"krate":0,"index":8164},{"krate":0,"index":8169},{"krate":0,"index":8171},{"krate":0,"index":8174},{"krate":0,"index":8200},{"krate":0,"index":8203},{"krate":0,"index":8206},{"krate":0,"index":8209},{"krate":0,"index":8216},{"krate":0,"index":8221},{"krate":0,"index":8225},{"krate":0,"index":8230},{"krate":0,"index":8232},{"krate":0,"index":8235},{"krate":0,"index":8261},{"krate":0,"index":8264},{"krate":0,"index":8267},{"krate":0,"index":8270},{"krate":0,"index":8277},{"krate":0,"index":8282},{"krate":0,"index":8286},{"krate":0,"index":8291},{"krate":0,"index":8293},{"krate":0,"index":8296},{"krate":0,"index":8328},{"krate":0,"index":8331},{"krate":0,"index":8334},{"krate":0,"index":8337},{"krate":0,"index":8344},{"krate":0,"index":8349},{"krate":0,"index":8353},{"krate":0,"index":8358},{"krate":0,"index":8360},{"krate":0,"index":8363},{"krate":0,"index":8392},{"krate":0,"index":8395},{"krate":0,"index":8398},{"krate":0,"index":8401},{"krate":0,"index":8408},{"krate":0,"index":8413},{"krate":0,"index":8417},{"krate":0,"index":8422},{"krate":0,"index":8424},{"krate":0,"index":8427},{"krate":0,"index":8456},{"krate":0,"index":8459},{"krate":0,"index":8462},{"krate":0,"index":8465},{"krate":0,"index":8472},{"krate":0,"index":8477},{"krate":0,"index":8481},{"krate":0,"index":8486},{"krate":0,"index":8488},{"krate":0,"index":8491},{"krate":0,"index":8523},{"krate":0,"index":8526},{"krate":0,"index":8529},{"krate":0,"index":8532},{"krate":0,"index":8539},{"krate":0,"index":8544},{"krate":0,"index":8548},{"krate":0,"index":8553}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53503,"byte_end":53511,"line_start":261,"line_end":261,"column_start":13,"column_end":21}},{"value":"cfg(all(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n              \"stm32f303xc\", feature = \"stm32f303xd\", feature = \"stm32f303xe\",\n              feature = \"stm32f373\", feature = \"stm32f378\", feature =\n              \"stm32f328\", feature = \"stm32f358\", feature = \"stm32f398\",),\n          not(any())))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53524,"byte_end":53665,"line_start":262,"line_end":266,"column_start":13,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":7465},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":125948,"byte_end":125951,"line_start":1573,"line_end":1573,"column_start":19,"column_end":22},"name":"pd0","qualname":"::gpio::gpiod::Parts::pd0","value":"gpio::gpiod::PD0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7466},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":126465,"byte_end":126468,"line_start":1579,"line_end":1579,"column_start":19,"column_end":22},"name":"pd1","qualname":"::gpio::gpiod::Parts::pd1","value":"gpio::gpiod::PD1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7467},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":127131,"byte_end":127134,"line_start":1587,"line_end":1587,"column_start":19,"column_end":22},"name":"pd2","qualname":"::gpio::gpiod::Parts::pd2","value":"gpio::gpiod::PD2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7468},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":127693,"byte_end":127696,"line_start":1593,"line_end":1593,"column_start":19,"column_end":22},"name":"pd3","qualname":"::gpio::gpiod::Parts::pd3","value":"gpio::gpiod::PD3<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7469},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":128304,"byte_end":128307,"line_start":1600,"line_end":1600,"column_start":19,"column_end":22},"name":"pd4","qualname":"::gpio::gpiod::Parts::pd4","value":"gpio::gpiod::PD4<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7470},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":128915,"byte_end":128918,"line_start":1607,"line_end":1607,"column_start":19,"column_end":22},"name":"pd5","qualname":"::gpio::gpiod::Parts::pd5","value":"gpio::gpiod::PD5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7471},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":129364,"byte_end":129367,"line_start":1612,"line_end":1612,"column_start":19,"column_end":22},"name":"pd6","qualname":"::gpio::gpiod::Parts::pd6","value":"gpio::gpiod::PD6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7472},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":129975,"byte_end":129978,"line_start":1619,"line_end":1619,"column_start":19,"column_end":22},"name":"pd7","qualname":"::gpio::gpiod::Parts::pd7","value":"gpio::gpiod::PD7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7473},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":130586,"byte_end":130589,"line_start":1626,"line_end":1626,"column_start":19,"column_end":22},"name":"pd8","qualname":"::gpio::gpiod::Parts::pd8","value":"gpio::gpiod::PD8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7474},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":131171,"byte_end":131174,"line_start":1633,"line_end":1633,"column_start":19,"column_end":22},"name":"pd9","qualname":"::gpio::gpiod::Parts::pd9","value":"gpio::gpiod::PD9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7475},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":131689,"byte_end":131693,"line_start":1639,"line_end":1639,"column_start":20,"column_end":24},"name":"pd10","qualname":"::gpio::gpiod::Parts::pd10","value":"gpio::gpiod::PD10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7476},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":132149,"byte_end":132153,"line_start":1644,"line_end":1644,"column_start":20,"column_end":24},"name":"pd11","qualname":"::gpio::gpiod::Parts::pd11","value":"gpio::gpiod::PD11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7477},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":132609,"byte_end":132613,"line_start":1649,"line_end":1649,"column_start":20,"column_end":24},"name":"pd12","qualname":"::gpio::gpiod::Parts::pd12","value":"gpio::gpiod::PD12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7478},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":133309,"byte_end":133313,"line_start":1656,"line_end":1656,"column_start":20,"column_end":24},"name":"pd13","qualname":"::gpio::gpiod::Parts::pd13","value":"gpio::gpiod::PD13<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7479},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":133889,"byte_end":133893,"line_start":1662,"line_end":1662,"column_start":20,"column_end":24},"name":"pd14","qualname":"::gpio::gpiod::Parts::pd14","value":"gpio::gpiod::PD14<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7480},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":134469,"byte_end":134473,"line_start":1668,"line_end":1668,"column_start":20,"column_end":24},"name":"pd15","qualname":"::gpio::gpiod::Parts::pd15","value":"gpio::gpiod::PD15<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":7459},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7507},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":125909,"byte_end":125912,"line_start":1571,"line_end":1571,"column_start":31,"column_end":34},"name":"PDx","qualname":"::gpio::gpiod::PDx","value":"PDx {  }","parent":null,"children":[{"krate":0,"index":7509},{"krate":0,"index":7510}],"decl_id":null,"docs":" Partially erased pin\n","sig":null,"attributes":[{"value":"/ Partially erased pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":58121,"byte_end":58145,"line_start":390,"line_end":390,"column_start":17,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7537},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":125942,"byte_end":125945,"line_start":1573,"line_end":1573,"column_start":13,"column_end":16},"name":"PD0","qualname":"::gpio::gpiod::PD0","value":"PD0 {  }","parent":null,"children":[{"krate":0,"index":7539}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7542},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":126057,"byte_end":126065,"line_start":1574,"line_end":1574,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD0<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD0<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7545},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":126245,"byte_end":126253,"line_start":1576,"line_end":1576,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD0<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD0<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7598},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":126459,"byte_end":126462,"line_start":1579,"line_end":1579,"column_start":13,"column_end":16},"name":"PD1","qualname":"::gpio::gpiod::PD1","value":"PD1 {  }","parent":null,"children":[{"krate":0,"index":7600}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7603},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":126574,"byte_end":126582,"line_start":1580,"line_end":1580,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD1<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD1<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7606},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":126762,"byte_end":126770,"line_start":1582,"line_end":1582,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PD1<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD1<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7609},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":126843,"byte_end":126851,"line_start":1583,"line_end":1583,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PD1<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD1<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7612},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":126924,"byte_end":126932,"line_start":1584,"line_end":1584,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD1<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD1<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7665},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":127125,"byte_end":127128,"line_start":1587,"line_end":1587,"column_start":13,"column_end":16},"name":"PD2","qualname":"::gpio::gpiod::PD2","value":"PD2 {  }","parent":null,"children":[{"krate":0,"index":7667}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7670},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":127240,"byte_end":127248,"line_start":1588,"line_end":1588,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD2<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD2<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f328\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7673},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":127373,"byte_end":127381,"line_start":1589,"line_end":1589,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PD2<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD2<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f328\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7676},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":127506,"byte_end":127514,"line_start":1590,"line_end":1590,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PD2<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD2<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f303\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7679},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":127587,"byte_end":127595,"line_start":1591,"line_end":1591,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PD2<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD2<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7732},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":127687,"byte_end":127690,"line_start":1593,"line_end":1593,"column_start":13,"column_end":16},"name":"PD3","qualname":"::gpio::gpiod::PD3","value":"PD3 {  }","parent":null,"children":[{"krate":0,"index":7734}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7737},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":127802,"byte_end":127810,"line_start":1594,"line_end":1594,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD3<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD3<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7740},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":127922,"byte_end":127930,"line_start":1595,"line_end":1595,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PD3<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD3<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7743},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":128084,"byte_end":128092,"line_start":1597,"line_end":1597,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD3<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD3<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7796},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":128298,"byte_end":128301,"line_start":1600,"line_end":1600,"column_start":13,"column_end":16},"name":"PD4","qualname":"::gpio::gpiod::PD4","value":"PD4 {  }","parent":null,"children":[{"krate":0,"index":7798}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7801},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":128413,"byte_end":128421,"line_start":1601,"line_end":1601,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD4<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD4<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7804},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":128533,"byte_end":128541,"line_start":1602,"line_end":1602,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PD4<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD4<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7807},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":128695,"byte_end":128703,"line_start":1604,"line_end":1604,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD4<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD4<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7860},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":128909,"byte_end":128912,"line_start":1607,"line_end":1607,"column_start":13,"column_end":16},"name":"PD5","qualname":"::gpio::gpiod::PD5","value":"PD5 {  }","parent":null,"children":[{"krate":0,"index":7862}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7865},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":129024,"byte_end":129032,"line_start":1608,"line_end":1608,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD5<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD5<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7868},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":129144,"byte_end":129152,"line_start":1609,"line_end":1609,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD5<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD5<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7921},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":129358,"byte_end":129361,"line_start":1612,"line_end":1612,"column_start":13,"column_end":16},"name":"PD6","qualname":"::gpio::gpiod::PD6","value":"PD6 {  }","parent":null,"children":[{"krate":0,"index":7923}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7926},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":129473,"byte_end":129481,"line_start":1613,"line_end":1613,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD6<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD6<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7929},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":129593,"byte_end":129601,"line_start":1614,"line_end":1614,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PD6<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD6<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7932},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":129755,"byte_end":129763,"line_start":1616,"line_end":1616,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD6<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD6<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7985},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":129969,"byte_end":129972,"line_start":1619,"line_end":1619,"column_start":13,"column_end":16},"name":"PD7","qualname":"::gpio::gpiod::PD7","value":"PD7 {  }","parent":null,"children":[{"krate":0,"index":7987}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":7990},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":130084,"byte_end":130092,"line_start":1620,"line_end":1620,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD7<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD7<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7993},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":130204,"byte_end":130212,"line_start":1621,"line_end":1621,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PD7<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD7<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7996},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":130366,"byte_end":130374,"line_start":1623,"line_end":1623,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD7<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PD7<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8049},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":130580,"byte_end":130583,"line_start":1626,"line_end":1626,"column_start":13,"column_end":16},"name":"PD8","qualname":"::gpio::gpiod::PD8","value":"PD8 {  }","parent":null,"children":[{"krate":0,"index":8051}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8054},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":130695,"byte_end":130703,"line_start":1627,"line_end":1627,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD8<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD8<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8057},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":130951,"byte_end":130959,"line_start":1630,"line_end":1630,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD8<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD8<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8110},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":131165,"byte_end":131168,"line_start":1633,"line_end":1633,"column_start":13,"column_end":16},"name":"PD9","qualname":"::gpio::gpiod::PD9","value":"PD9 {  }","parent":null,"children":[{"krate":0,"index":8112}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8115},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":131280,"byte_end":131288,"line_start":1634,"line_end":1634,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD9<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD9<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8118},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":131468,"byte_end":131476,"line_start":1636,"line_end":1636,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD9<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD9<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8171},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":131682,"byte_end":131686,"line_start":1639,"line_end":1639,"column_start":13,"column_end":17},"name":"PD10","qualname":"::gpio::gpiod::PD10","value":"PD10 {  }","parent":null,"children":[{"krate":0,"index":8173}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8176},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":131808,"byte_end":131816,"line_start":1640,"line_end":1640,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD10<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD10<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8179},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":131928,"byte_end":131936,"line_start":1641,"line_end":1641,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD10<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD10<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8232},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":132142,"byte_end":132146,"line_start":1644,"line_end":1644,"column_start":13,"column_end":17},"name":"PD11","qualname":"::gpio::gpiod::PD11","value":"PD11 {  }","parent":null,"children":[{"krate":0,"index":8234}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8237},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":132268,"byte_end":132276,"line_start":1645,"line_end":1645,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD11<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD11<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8240},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":132388,"byte_end":132396,"line_start":1646,"line_end":1646,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD11<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD11<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8293},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":132602,"byte_end":132606,"line_start":1649,"line_end":1649,"column_start":13,"column_end":17},"name":"PD12","qualname":"::gpio::gpiod::PD12","value":"PD12 {  }","parent":null,"children":[{"krate":0,"index":8295}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8298},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":132728,"byte_end":132736,"line_start":1650,"line_end":1650,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD12<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD12<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8301},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":132848,"byte_end":132856,"line_start":1651,"line_end":1651,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PD12<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD12<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8304},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":132968,"byte_end":132976,"line_start":1652,"line_end":1652,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PD12<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD12<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8307},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":133088,"byte_end":133096,"line_start":1653,"line_end":1653,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PD12<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD12<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8360},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":133302,"byte_end":133306,"line_start":1656,"line_end":1656,"column_start":13,"column_end":17},"name":"PD13","qualname":"::gpio::gpiod::PD13","value":"PD13 {  }","parent":null,"children":[{"krate":0,"index":8362}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8365},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":133428,"byte_end":133436,"line_start":1657,"line_end":1657,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD13<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD13<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8368},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":133548,"byte_end":133556,"line_start":1658,"line_end":1658,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PD13<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD13<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8371},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":133668,"byte_end":133676,"line_start":1659,"line_end":1659,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PD13<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD13<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8424},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":133882,"byte_end":133886,"line_start":1662,"line_end":1662,"column_start":13,"column_end":17},"name":"PD14","qualname":"::gpio::gpiod::PD14","value":"PD14 {  }","parent":null,"children":[{"krate":0,"index":8426}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8429},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":134008,"byte_end":134016,"line_start":1663,"line_end":1663,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD14<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD14<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8432},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":134128,"byte_end":134136,"line_start":1664,"line_end":1664,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PD14<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD14<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8435},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":134248,"byte_end":134256,"line_start":1665,"line_end":1665,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PD14<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD14<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8488},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":134462,"byte_end":134466,"line_start":1668,"line_end":1668,"column_start":13,"column_end":17},"name":"PD15","qualname":"::gpio::gpiod::PD15","value":"PD15 {  }","parent":null,"children":[{"krate":0,"index":8490}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8493},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":134588,"byte_end":134596,"line_start":1669,"line_end":1669,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PD15<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD15<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8496},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":134708,"byte_end":134716,"line_start":1670,"line_end":1670,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PD15<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD15<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8499},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":134828,"byte_end":134836,"line_start":1671,"line_end":1671,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PD15<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD15<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f373\",\n          feature = \"stm32f378\", feature = \"stm32f358\", feature =\n          \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8502},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":134948,"byte_end":134956,"line_start":1672,"line_end":1672,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PD15<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PD15<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62292,"byte_end":62356,"line_start":490,"line_end":490,"column_start":29,"column_end":93}},{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\", feature = \"stm32f358\",\n          feature = \"stm32f398\",))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":62385,"byte_end":62487,"line_start":491,"line_end":493,"column_start":29,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":8555},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":135374,"byte_end":135379,"line_start":1687,"line_end":1687,"column_start":15,"column_end":20},"name":"gpioe","qualname":"::gpio::gpioe","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":8556},{"krate":0,"index":8557},{"krate":0,"index":8558},{"krate":0,"index":8559},{"krate":0,"index":8560},{"krate":0,"index":8561},{"krate":0,"index":8562},{"krate":0,"index":8565},{"krate":0,"index":8566},{"krate":0,"index":8583},{"krate":0,"index":8595},{"krate":0,"index":8617},{"krate":0,"index":8623},{"krate":0,"index":8625},{"krate":0,"index":8627},{"krate":0,"index":8629},{"krate":0,"index":8631},{"krate":0,"index":8633},{"krate":0,"index":8635},{"krate":0,"index":8637},{"krate":0,"index":8639},{"krate":0,"index":8641},{"krate":0,"index":8643},{"krate":0,"index":8647},{"krate":0,"index":8650},{"krate":0,"index":8657},{"krate":0,"index":8662},{"krate":0,"index":8666},{"krate":0,"index":8671},{"krate":0,"index":8673},{"krate":0,"index":8676},{"krate":0,"index":8708},{"krate":0,"index":8711},{"krate":0,"index":8714},{"krate":0,"index":8717},{"krate":0,"index":8724},{"krate":0,"index":8729},{"krate":0,"index":8733},{"krate":0,"index":8738},{"krate":0,"index":8740},{"krate":0,"index":8743},{"krate":0,"index":8772},{"krate":0,"index":8775},{"krate":0,"index":8778},{"krate":0,"index":8781},{"krate":0,"index":8788},{"krate":0,"index":8793},{"krate":0,"index":8797},{"krate":0,"index":8802},{"krate":0,"index":8804},{"krate":0,"index":8807},{"krate":0,"index":8839},{"krate":0,"index":8842},{"krate":0,"index":8845},{"krate":0,"index":8848},{"krate":0,"index":8855},{"krate":0,"index":8860},{"krate":0,"index":8864},{"krate":0,"index":8869},{"krate":0,"index":8871},{"krate":0,"index":8874},{"krate":0,"index":8906},{"krate":0,"index":8909},{"krate":0,"index":8912},{"krate":0,"index":8915},{"krate":0,"index":8922},{"krate":0,"index":8927},{"krate":0,"index":8931},{"krate":0,"index":8936},{"krate":0,"index":8938},{"krate":0,"index":8941},{"krate":0,"index":8973},{"krate":0,"index":8976},{"krate":0,"index":8979},{"krate":0,"index":8982},{"krate":0,"index":8989},{"krate":0,"index":8994},{"krate":0,"index":8998},{"krate":0,"index":9003},{"krate":0,"index":9005},{"krate":0,"index":9008},{"krate":0,"index":9040},{"krate":0,"index":9043},{"krate":0,"index":9046},{"krate":0,"index":9049},{"krate":0,"index":9056},{"krate":0,"index":9061},{"krate":0,"index":9065},{"krate":0,"index":9070},{"krate":0,"index":9072},{"krate":0,"index":9075},{"krate":0,"index":9101},{"krate":0,"index":9104},{"krate":0,"index":9107},{"krate":0,"index":9110},{"krate":0,"index":9117},{"krate":0,"index":9122},{"krate":0,"index":9126},{"krate":0,"index":9131},{"krate":0,"index":9133},{"krate":0,"index":9136},{"krate":0,"index":9162},{"krate":0,"index":9165},{"krate":0,"index":9168},{"krate":0,"index":9171},{"krate":0,"index":9178},{"krate":0,"index":9183},{"krate":0,"index":9187},{"krate":0,"index":9192},{"krate":0,"index":9194},{"krate":0,"index":9197},{"krate":0,"index":9223},{"krate":0,"index":9226},{"krate":0,"index":9229},{"krate":0,"index":9232},{"krate":0,"index":9239},{"krate":0,"index":9244},{"krate":0,"index":9248},{"krate":0,"index":9253},{"krate":0,"index":9255},{"krate":0,"index":9258},{"krate":0,"index":9284},{"krate":0,"index":9287},{"krate":0,"index":9290},{"krate":0,"index":9293},{"krate":0,"index":9300},{"krate":0,"index":9305},{"krate":0,"index":9309},{"krate":0,"index":9314},{"krate":0,"index":9316},{"krate":0,"index":9319},{"krate":0,"index":9345},{"krate":0,"index":9348},{"krate":0,"index":9351},{"krate":0,"index":9354},{"krate":0,"index":9361},{"krate":0,"index":9366},{"krate":0,"index":9370},{"krate":0,"index":9375},{"krate":0,"index":9377},{"krate":0,"index":9380},{"krate":0,"index":9406},{"krate":0,"index":9409},{"krate":0,"index":9412},{"krate":0,"index":9415},{"krate":0,"index":9422},{"krate":0,"index":9427},{"krate":0,"index":9431},{"krate":0,"index":9436},{"krate":0,"index":9438},{"krate":0,"index":9441},{"krate":0,"index":9467},{"krate":0,"index":9470},{"krate":0,"index":9473},{"krate":0,"index":9476},{"krate":0,"index":9483},{"krate":0,"index":9488},{"krate":0,"index":9492},{"krate":0,"index":9497},{"krate":0,"index":9499},{"krate":0,"index":9502},{"krate":0,"index":9528},{"krate":0,"index":9531},{"krate":0,"index":9534},{"krate":0,"index":9537},{"krate":0,"index":9544},{"krate":0,"index":9549},{"krate":0,"index":9553},{"krate":0,"index":9558},{"krate":0,"index":9560},{"krate":0,"index":9563},{"krate":0,"index":9592},{"krate":0,"index":9595},{"krate":0,"index":9598},{"krate":0,"index":9601},{"krate":0,"index":9608},{"krate":0,"index":9613},{"krate":0,"index":9617},{"krate":0,"index":9622},{"krate":0,"index":9624},{"krate":0,"index":9627},{"krate":0,"index":9656},{"krate":0,"index":9659},{"krate":0,"index":9662},{"krate":0,"index":9665},{"krate":0,"index":9672},{"krate":0,"index":9677},{"krate":0,"index":9681},{"krate":0,"index":9686}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53503,"byte_end":53511,"line_start":261,"line_end":261,"column_start":13,"column_end":21}},{"value":"cfg(all(any(feature = \"stm32f302\", feature = \"stm32f303xb\", feature =\n              \"stm32f303xc\", feature = \"stm32f303xd\", feature =\n              \"stm32f303xe\",), not(any())))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53524,"byte_end":53665,"line_start":262,"line_end":266,"column_start":13,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":8601},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":135549,"byte_end":135552,"line_start":1693,"line_end":1693,"column_start":19,"column_end":22},"name":"pe0","qualname":"::gpio::gpioe::Parts::pe0","value":"gpio::gpioe::PE0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8602},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":135986,"byte_end":135989,"line_start":1702,"line_end":1702,"column_start":19,"column_end":22},"name":"pe1","qualname":"::gpio::gpioe::Parts::pe1","value":"gpio::gpioe::PE1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8603},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136384,"byte_end":136387,"line_start":1710,"line_end":1710,"column_start":19,"column_end":22},"name":"pe2","qualname":"::gpio::gpioe::Parts::pe2","value":"gpio::gpioe::PE2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8604},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136893,"byte_end":136896,"line_start":1720,"line_end":1720,"column_start":19,"column_end":22},"name":"pe3","qualname":"::gpio::gpioe::Parts::pe3","value":"gpio::gpioe::PE3<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8605},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137402,"byte_end":137405,"line_start":1730,"line_end":1730,"column_start":19,"column_end":22},"name":"pe4","qualname":"::gpio::gpioe::Parts::pe4","value":"gpio::gpioe::PE4<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8606},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137911,"byte_end":137914,"line_start":1740,"line_end":1740,"column_start":19,"column_end":22},"name":"pe5","qualname":"::gpio::gpioe::Parts::pe5","value":"gpio::gpioe::PE5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8607},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138420,"byte_end":138423,"line_start":1750,"line_end":1750,"column_start":19,"column_end":22},"name":"pe6","qualname":"::gpio::gpioe::Parts::pe6","value":"gpio::gpioe::PE6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8608},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138851,"byte_end":138854,"line_start":1758,"line_end":1758,"column_start":19,"column_end":22},"name":"pe7","qualname":"::gpio::gpioe::Parts::pe7","value":"gpio::gpioe::PE7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8609},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139138,"byte_end":139141,"line_start":1764,"line_end":1764,"column_start":19,"column_end":22},"name":"pe8","qualname":"::gpio::gpioe::Parts::pe8","value":"gpio::gpioe::PE8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8610},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139425,"byte_end":139428,"line_start":1770,"line_end":1770,"column_start":19,"column_end":22},"name":"pe9","qualname":"::gpio::gpioe::Parts::pe9","value":"gpio::gpioe::PE9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8611},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139713,"byte_end":139717,"line_start":1776,"line_end":1776,"column_start":20,"column_end":24},"name":"pe10","qualname":"::gpio::gpioe::Parts::pe10","value":"gpio::gpioe::PE10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8612},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140011,"byte_end":140015,"line_start":1782,"line_end":1782,"column_start":20,"column_end":24},"name":"pe11","qualname":"::gpio::gpioe::Parts::pe11","value":"gpio::gpioe::PE11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8613},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140381,"byte_end":140385,"line_start":1789,"line_end":1789,"column_start":20,"column_end":24},"name":"pe12","qualname":"::gpio::gpioe::Parts::pe12","value":"gpio::gpioe::PE12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8614},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140751,"byte_end":140755,"line_start":1796,"line_end":1796,"column_start":20,"column_end":24},"name":"pe13","qualname":"::gpio::gpioe::Parts::pe13","value":"gpio::gpioe::PE13<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8615},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":141121,"byte_end":141125,"line_start":1803,"line_end":1803,"column_start":20,"column_end":24},"name":"pe14","qualname":"::gpio::gpioe::Parts::pe14","value":"gpio::gpioe::PE14<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8616},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":141530,"byte_end":141534,"line_start":1811,"line_end":1811,"column_start":20,"column_end":24},"name":"pe15","qualname":"::gpio::gpioe::Parts::pe15","value":"gpio::gpioe::PE15<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":8595},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8643},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":135510,"byte_end":135513,"line_start":1691,"line_end":1691,"column_start":31,"column_end":34},"name":"PEx","qualname":"::gpio::gpioe::PEx","value":"PEx {  }","parent":null,"children":[{"krate":0,"index":8645},{"krate":0,"index":8646}],"decl_id":null,"docs":" Partially erased pin\n","sig":null,"attributes":[{"value":"/ Partially erased pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":58121,"byte_end":58145,"line_start":390,"line_end":390,"column_start":17,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":8673},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":135543,"byte_end":135546,"line_start":1693,"line_end":1693,"column_start":13,"column_end":16},"name":"PE0","qualname":"::gpio::gpioe::PE0","value":"PE0 {  }","parent":null,"children":[{"krate":0,"index":8675}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8678},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":135654,"byte_end":135662,"line_start":1694,"line_end":1694,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE0<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE0<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8681},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":135693,"byte_end":135701,"line_start":1695,"line_end":1695,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE0<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE0<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8684},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":135732,"byte_end":135740,"line_start":1696,"line_end":1696,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PE0<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE0<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8687},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":135771,"byte_end":135779,"line_start":1697,"line_end":1697,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PE0<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE0<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":8740},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":135980,"byte_end":135983,"line_start":1702,"line_end":1702,"column_start":13,"column_end":16},"name":"PE1","qualname":"::gpio::gpioe::PE1","value":"PE1 {  }","parent":null,"children":[{"krate":0,"index":8742}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8745},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136091,"byte_end":136099,"line_start":1703,"line_end":1703,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE1<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE1<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8748},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136130,"byte_end":136138,"line_start":1704,"line_end":1704,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PE1<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE1<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8751},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136169,"byte_end":136177,"line_start":1705,"line_end":1705,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PE1<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE1<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":8804},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136378,"byte_end":136381,"line_start":1710,"line_end":1710,"column_start":13,"column_end":16},"name":"PE2","qualname":"::gpio::gpioe::PE2","value":"PE2 {  }","parent":null,"children":[{"krate":0,"index":8806}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8809},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136489,"byte_end":136497,"line_start":1711,"line_end":1711,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PE2<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE2<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8812},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136528,"byte_end":136536,"line_start":1712,"line_end":1712,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE2<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE2<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8815},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136567,"byte_end":136575,"line_start":1713,"line_end":1713,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE2<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE2<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8818},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136606,"byte_end":136614,"line_start":1714,"line_end":1714,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PE2<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE2<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":8871},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136887,"byte_end":136890,"line_start":1720,"line_end":1720,"column_start":13,"column_end":16},"name":"PE3","qualname":"::gpio::gpioe::PE3","value":"PE3 {  }","parent":null,"children":[{"krate":0,"index":8873}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8876},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":136998,"byte_end":137006,"line_start":1721,"line_end":1721,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PE3<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE3<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8879},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137037,"byte_end":137045,"line_start":1722,"line_end":1722,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE3<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE3<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8882},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137076,"byte_end":137084,"line_start":1723,"line_end":1723,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE3<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE3<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8885},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137115,"byte_end":137123,"line_start":1724,"line_end":1724,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PE3<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE3<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":8938},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137396,"byte_end":137399,"line_start":1730,"line_end":1730,"column_start":13,"column_end":16},"name":"PE4","qualname":"::gpio::gpioe::PE4","value":"PE4 {  }","parent":null,"children":[{"krate":0,"index":8940}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":8943},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137507,"byte_end":137515,"line_start":1731,"line_end":1731,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PE4<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE4<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8946},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137546,"byte_end":137554,"line_start":1732,"line_end":1732,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE4<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE4<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8949},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137585,"byte_end":137593,"line_start":1733,"line_end":1733,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE4<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE4<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":8952},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137624,"byte_end":137632,"line_start":1734,"line_end":1734,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PE4<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE4<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9005},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":137905,"byte_end":137908,"line_start":1740,"line_end":1740,"column_start":13,"column_end":16},"name":"PE5","qualname":"::gpio::gpioe::PE5","value":"PE5 {  }","parent":null,"children":[{"krate":0,"index":9007}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9010},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138016,"byte_end":138024,"line_start":1741,"line_end":1741,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PE5<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE5<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9013},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138055,"byte_end":138063,"line_start":1742,"line_end":1742,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE5<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE5<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9016},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138094,"byte_end":138102,"line_start":1743,"line_end":1743,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE5<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE5<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9019},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138133,"byte_end":138141,"line_start":1744,"line_end":1744,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PE5<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE5<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9072},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138414,"byte_end":138417,"line_start":1750,"line_end":1750,"column_start":13,"column_end":16},"name":"PE6","qualname":"::gpio::gpioe::PE6","value":"PE6 {  }","parent":null,"children":[{"krate":0,"index":9074}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9077},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138525,"byte_end":138533,"line_start":1751,"line_end":1751,"column_start":23,"column_end":31},"name":"into_af0","qualname":"<PE6<MODE>>::into_af0","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE6<AF0>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9080},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138564,"byte_end":138572,"line_start":1752,"line_end":1752,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE6<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE6<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9133},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138845,"byte_end":138848,"line_start":1758,"line_end":1758,"column_start":13,"column_end":16},"name":"PE7","qualname":"::gpio::gpioe::PE7","value":"PE7 {  }","parent":null,"children":[{"krate":0,"index":9135}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9138},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138956,"byte_end":138964,"line_start":1759,"line_end":1759,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE7<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE7<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9141},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":138995,"byte_end":139003,"line_start":1760,"line_end":1760,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE7<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PE7<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9194},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139132,"byte_end":139135,"line_start":1764,"line_end":1764,"column_start":13,"column_end":16},"name":"PE8","qualname":"::gpio::gpioe::PE8","value":"PE8 {  }","parent":null,"children":[{"krate":0,"index":9196}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9199},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139243,"byte_end":139251,"line_start":1765,"line_end":1765,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE8<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE8<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9202},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139282,"byte_end":139290,"line_start":1766,"line_end":1766,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE8<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE8<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9255},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139419,"byte_end":139422,"line_start":1770,"line_end":1770,"column_start":13,"column_end":16},"name":"PE9","qualname":"::gpio::gpioe::PE9","value":"PE9 {  }","parent":null,"children":[{"krate":0,"index":9257}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9260},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139530,"byte_end":139538,"line_start":1771,"line_end":1771,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE9<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE9<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9263},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139569,"byte_end":139577,"line_start":1772,"line_end":1772,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE9<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE9<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9316},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139706,"byte_end":139710,"line_start":1776,"line_end":1776,"column_start":13,"column_end":17},"name":"PE10","qualname":"::gpio::gpioe::PE10","value":"PE10 {  }","parent":null,"children":[{"krate":0,"index":9318}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9321},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139828,"byte_end":139836,"line_start":1777,"line_end":1777,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE10<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE10<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9324},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":139867,"byte_end":139875,"line_start":1778,"line_end":1778,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE10<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE10<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9377},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140004,"byte_end":140008,"line_start":1782,"line_end":1782,"column_start":13,"column_end":17},"name":"PE11","qualname":"::gpio::gpioe::PE11","value":"PE11 {  }","parent":null,"children":[{"krate":0,"index":9379}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9382},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140126,"byte_end":140134,"line_start":1783,"line_end":1783,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE11<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE11<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9385},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140165,"byte_end":140173,"line_start":1784,"line_end":1784,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE11<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE11<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9438},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140374,"byte_end":140378,"line_start":1789,"line_end":1789,"column_start":13,"column_end":17},"name":"PE12","qualname":"::gpio::gpioe::PE12","value":"PE12 {  }","parent":null,"children":[{"krate":0,"index":9440}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9443},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140496,"byte_end":140504,"line_start":1790,"line_end":1790,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE12<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE12<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9446},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140535,"byte_end":140543,"line_start":1791,"line_end":1791,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE12<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE12<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9499},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140744,"byte_end":140748,"line_start":1796,"line_end":1796,"column_start":13,"column_end":17},"name":"PE13","qualname":"::gpio::gpioe::PE13","value":"PE13 {  }","parent":null,"children":[{"krate":0,"index":9501}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9504},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140866,"byte_end":140874,"line_start":1797,"line_end":1797,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE13<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE13<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9507},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":140905,"byte_end":140913,"line_start":1798,"line_end":1798,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE13<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE13<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9560},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":141114,"byte_end":141118,"line_start":1803,"line_end":1803,"column_start":13,"column_end":17},"name":"PE14","qualname":"::gpio::gpioe::PE14","value":"PE14 {  }","parent":null,"children":[{"krate":0,"index":9562}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9565},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":141236,"byte_end":141244,"line_start":1804,"line_end":1804,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE14<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE14<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9568},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":141275,"byte_end":141283,"line_start":1805,"line_end":1805,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE14<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE14<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9571},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":141314,"byte_end":141322,"line_start":1806,"line_end":1806,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PE14<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE14<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9624},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":141523,"byte_end":141527,"line_start":1811,"line_end":1811,"column_start":13,"column_end":17},"name":"PE15","qualname":"::gpio::gpioe::PE15","value":"PE15 {  }","parent":null,"children":[{"krate":0,"index":9626}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9629},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":141645,"byte_end":141653,"line_start":1812,"line_end":1812,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PE15<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE15<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9632},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":141684,"byte_end":141692,"line_start":1813,"line_end":1813,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PE15<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE15<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9635},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":141723,"byte_end":141731,"line_start":1814,"line_end":1814,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PE15<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PE15<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":9688},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":154526,"byte_end":154531,"line_start":2068,"line_end":2068,"column_start":15,"column_end":20},"name":"gpiof","qualname":"::gpio::gpiof","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":9689},{"krate":0,"index":9690},{"krate":0,"index":9691},{"krate":0,"index":9692},{"krate":0,"index":9693},{"krate":0,"index":9694},{"krate":0,"index":9695},{"krate":0,"index":9698},{"krate":0,"index":9699},{"krate":0,"index":9716},{"krate":0,"index":9728},{"krate":0,"index":9750},{"krate":0,"index":9756},{"krate":0,"index":9758},{"krate":0,"index":9760},{"krate":0,"index":9762},{"krate":0,"index":9764},{"krate":0,"index":9766},{"krate":0,"index":9768},{"krate":0,"index":9770},{"krate":0,"index":9772},{"krate":0,"index":9774},{"krate":0,"index":9776},{"krate":0,"index":9780},{"krate":0,"index":9783},{"krate":0,"index":9790},{"krate":0,"index":9795},{"krate":0,"index":9799},{"krate":0,"index":9804},{"krate":0,"index":9806},{"krate":0,"index":9809},{"krate":0,"index":9835},{"krate":0,"index":9838},{"krate":0,"index":9841},{"krate":0,"index":9844},{"krate":0,"index":9851},{"krate":0,"index":9856},{"krate":0,"index":9860},{"krate":0,"index":9865},{"krate":0,"index":9867},{"krate":0,"index":9870},{"krate":0,"index":9893},{"krate":0,"index":9896},{"krate":0,"index":9899},{"krate":0,"index":9902},{"krate":0,"index":9909},{"krate":0,"index":9914},{"krate":0,"index":9918},{"krate":0,"index":9923},{"krate":0,"index":9925},{"krate":0,"index":9928},{"krate":0,"index":9951},{"krate":0,"index":9954},{"krate":0,"index":9957},{"krate":0,"index":9960},{"krate":0,"index":9967},{"krate":0,"index":9972},{"krate":0,"index":9976},{"krate":0,"index":9981},{"krate":0,"index":9983},{"krate":0,"index":9986},{"krate":0,"index":10006},{"krate":0,"index":10009},{"krate":0,"index":10012},{"krate":0,"index":10015},{"krate":0,"index":10022},{"krate":0,"index":10027},{"krate":0,"index":10031},{"krate":0,"index":10036},{"krate":0,"index":10038},{"krate":0,"index":10041},{"krate":0,"index":10067},{"krate":0,"index":10070},{"krate":0,"index":10073},{"krate":0,"index":10076},{"krate":0,"index":10083},{"krate":0,"index":10088},{"krate":0,"index":10092},{"krate":0,"index":10097},{"krate":0,"index":10099},{"krate":0,"index":10102},{"krate":0,"index":10122},{"krate":0,"index":10125},{"krate":0,"index":10128},{"krate":0,"index":10131},{"krate":0,"index":10138},{"krate":0,"index":10143},{"krate":0,"index":10147},{"krate":0,"index":10152},{"krate":0,"index":10154},{"krate":0,"index":10157},{"krate":0,"index":10189},{"krate":0,"index":10192},{"krate":0,"index":10195},{"krate":0,"index":10198},{"krate":0,"index":10205},{"krate":0,"index":10210},{"krate":0,"index":10214},{"krate":0,"index":10219},{"krate":0,"index":10221},{"krate":0,"index":10224},{"krate":0,"index":10244},{"krate":0,"index":10247},{"krate":0,"index":10250},{"krate":0,"index":10253},{"krate":0,"index":10260},{"krate":0,"index":10265},{"krate":0,"index":10269},{"krate":0,"index":10274},{"krate":0,"index":10276},{"krate":0,"index":10279},{"krate":0,"index":10299},{"krate":0,"index":10302},{"krate":0,"index":10305},{"krate":0,"index":10308},{"krate":0,"index":10315},{"krate":0,"index":10320},{"krate":0,"index":10324},{"krate":0,"index":10329},{"krate":0,"index":10331},{"krate":0,"index":10334},{"krate":0,"index":10354},{"krate":0,"index":10357},{"krate":0,"index":10360},{"krate":0,"index":10363},{"krate":0,"index":10370},{"krate":0,"index":10375},{"krate":0,"index":10379},{"krate":0,"index":10384},{"krate":0,"index":10386},{"krate":0,"index":10389},{"krate":0,"index":10418},{"krate":0,"index":10421},{"krate":0,"index":10424},{"krate":0,"index":10427},{"krate":0,"index":10434},{"krate":0,"index":10439},{"krate":0,"index":10443},{"krate":0,"index":10448},{"krate":0,"index":10450},{"krate":0,"index":10453},{"krate":0,"index":10473},{"krate":0,"index":10476},{"krate":0,"index":10479},{"krate":0,"index":10482},{"krate":0,"index":10489},{"krate":0,"index":10494},{"krate":0,"index":10498},{"krate":0,"index":10503},{"krate":0,"index":10505},{"krate":0,"index":10508},{"krate":0,"index":10528},{"krate":0,"index":10531},{"krate":0,"index":10534},{"krate":0,"index":10537},{"krate":0,"index":10544},{"krate":0,"index":10549},{"krate":0,"index":10553},{"krate":0,"index":10558},{"krate":0,"index":10560},{"krate":0,"index":10563},{"krate":0,"index":10583},{"krate":0,"index":10586},{"krate":0,"index":10589},{"krate":0,"index":10592},{"krate":0,"index":10599},{"krate":0,"index":10604},{"krate":0,"index":10608},{"krate":0,"index":10613},{"krate":0,"index":10615},{"krate":0,"index":10618},{"krate":0,"index":10638},{"krate":0,"index":10641},{"krate":0,"index":10644},{"krate":0,"index":10647},{"krate":0,"index":10654},{"krate":0,"index":10659},{"krate":0,"index":10663},{"krate":0,"index":10668},{"krate":0,"index":10670},{"krate":0,"index":10673},{"krate":0,"index":10693},{"krate":0,"index":10696},{"krate":0,"index":10699},{"krate":0,"index":10702},{"krate":0,"index":10709},{"krate":0,"index":10714},{"krate":0,"index":10718},{"krate":0,"index":10723}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53503,"byte_end":53511,"line_start":261,"line_end":261,"column_start":13,"column_end":21}},{"value":"cfg(all(any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n              \"stm32f303xd\", feature = \"stm32f303xe\",), not(any())))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":53524,"byte_end":53665,"line_start":262,"line_end":266,"column_start":13,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":9734},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":154701,"byte_end":154704,"line_start":2074,"line_end":2074,"column_start":19,"column_end":22},"name":"pf0","qualname":"::gpio::gpiof::Parts::pf0","value":"gpio::gpiof::PF0<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9735},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155057,"byte_end":155060,"line_start":2081,"line_end":2081,"column_start":19,"column_end":22},"name":"pf1","qualname":"::gpio::gpiof::Parts::pf1","value":"gpio::gpiof::PF1<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9736},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155374,"byte_end":155377,"line_start":2087,"line_end":2087,"column_start":19,"column_end":22},"name":"pf2","qualname":"::gpio::gpiof::Parts::pf2","value":"gpio::gpiof::PF2<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9737},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155694,"byte_end":155697,"line_start":2093,"line_end":2093,"column_start":19,"column_end":22},"name":"pf3","qualname":"::gpio::gpiof::Parts::pf3","value":"gpio::gpiof::PF3<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9738},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155802,"byte_end":155805,"line_start":2094,"line_end":2094,"column_start":19,"column_end":22},"name":"pf4","qualname":"::gpio::gpiof::Parts::pf4","value":"gpio::gpiof::PF4<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9739},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156161,"byte_end":156164,"line_start":2101,"line_end":2101,"column_start":19,"column_end":22},"name":"pf5","qualname":"::gpio::gpiof::Parts::pf5","value":"gpio::gpiof::PF5<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9740},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156269,"byte_end":156272,"line_start":2102,"line_end":2102,"column_start":19,"column_end":22},"name":"pf6","qualname":"::gpio::gpiof::Parts::pf6","value":"gpio::gpiof::PF6<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9741},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156634,"byte_end":156637,"line_start":2110,"line_end":2110,"column_start":19,"column_end":22},"name":"pf7","qualname":"::gpio::gpiof::Parts::pf7","value":"gpio::gpiof::PF7<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9742},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156742,"byte_end":156745,"line_start":2111,"line_end":2111,"column_start":19,"column_end":22},"name":"pf8","qualname":"::gpio::gpiof::Parts::pf8","value":"gpio::gpiof::PF8<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9743},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156850,"byte_end":156853,"line_start":2112,"line_end":2112,"column_start":19,"column_end":22},"name":"pf9","qualname":"::gpio::gpiof::Parts::pf9","value":"gpio::gpiof::PF9<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9744},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157119,"byte_end":157123,"line_start":2116,"line_end":2116,"column_start":20,"column_end":24},"name":"pf10","qualname":"::gpio::gpiof::Parts::pf10","value":"gpio::gpiof::PF10<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9745},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157528,"byte_end":157532,"line_start":2124,"line_end":2124,"column_start":20,"column_end":24},"name":"pf11","qualname":"::gpio::gpiof::Parts::pf11","value":"gpio::gpiof::PF11<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9746},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157647,"byte_end":157651,"line_start":2125,"line_end":2125,"column_start":20,"column_end":24},"name":"pf12","qualname":"::gpio::gpiof::Parts::pf12","value":"gpio::gpiof::PF12<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9747},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157766,"byte_end":157770,"line_start":2126,"line_end":2126,"column_start":20,"column_end":24},"name":"pf13","qualname":"::gpio::gpiof::Parts::pf13","value":"gpio::gpiof::PF13<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9748},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157885,"byte_end":157889,"line_start":2127,"line_end":2127,"column_start":20,"column_end":24},"name":"pf14","qualname":"::gpio::gpiof::Parts::pf14","value":"gpio::gpiof::PF14<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9749},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":158004,"byte_end":158008,"line_start":2128,"line_end":2128,"column_start":20,"column_end":24},"name":"pf15","qualname":"::gpio::gpiof::Parts::pf15","value":"gpio::gpiof::PF15<gpio::Input<gpio::Floating>>","parent":{"krate":0,"index":9728},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":55132,"byte_end":55139,"line_start":302,"line_end":302,"column_start":25,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":9776},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":154662,"byte_end":154665,"line_start":2072,"line_end":2072,"column_start":31,"column_end":34},"name":"PFx","qualname":"::gpio::gpiof::PFx","value":"PFx {  }","parent":null,"children":[{"krate":0,"index":9778},{"krate":0,"index":9779}],"decl_id":null,"docs":" Partially erased pin\n","sig":null,"attributes":[{"value":"/ Partially erased pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":58121,"byte_end":58145,"line_start":390,"line_end":390,"column_start":17,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":9806},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":154695,"byte_end":154698,"line_start":2074,"line_end":2074,"column_start":13,"column_end":16},"name":"PF0","qualname":"::gpio::gpiof::PF0","value":"PF0 {  }","parent":null,"children":[{"krate":0,"index":9808}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9811},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":154806,"byte_end":154814,"line_start":2075,"line_end":2075,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PF0<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PF0<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":9814},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":154845,"byte_end":154853,"line_start":2076,"line_end":2076,"column_start":23,"column_end":31},"name":"into_af6","qualname":"<PF0<MODE>>::into_af6","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PF0<AF6>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9867},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155051,"byte_end":155054,"line_start":2081,"line_end":2081,"column_start":13,"column_end":16},"name":"PF1","qualname":"::gpio::gpiof::PF1","value":"PF1 {  }","parent":null,"children":[{"krate":0,"index":9869}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9872},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155162,"byte_end":155170,"line_start":2082,"line_end":2082,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PF1<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PF1<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9925},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155368,"byte_end":155371,"line_start":2087,"line_end":2087,"column_start":13,"column_end":16},"name":"PF2","qualname":"::gpio::gpiof::PF2","value":"PF2 {  }","parent":null,"children":[{"krate":0,"index":9927}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9930},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155479,"byte_end":155487,"line_start":2088,"line_end":2088,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PF2<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PF2<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":9983},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155688,"byte_end":155691,"line_start":2093,"line_end":2093,"column_start":13,"column_end":16},"name":"PF3","qualname":"::gpio::gpiof::PF3","value":"PF3 {  }","parent":null,"children":[{"krate":0,"index":9985}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10038},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155796,"byte_end":155799,"line_start":2094,"line_end":2094,"column_start":13,"column_end":16},"name":"PF4","qualname":"::gpio::gpiof::PF4","value":"PF4 {  }","parent":null,"children":[{"krate":0,"index":10040}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":10043},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155907,"byte_end":155915,"line_start":2095,"line_end":2095,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PF4<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PF4<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":10046},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":155946,"byte_end":155954,"line_start":2096,"line_end":2096,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PF4<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PF4<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":10099},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156155,"byte_end":156158,"line_start":2101,"line_end":2101,"column_start":13,"column_end":16},"name":"PF5","qualname":"::gpio::gpiof::PF5","value":"PF5 {  }","parent":null,"children":[{"krate":0,"index":10101}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10154},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156263,"byte_end":156266,"line_start":2102,"line_end":2102,"column_start":13,"column_end":16},"name":"PF6","qualname":"::gpio::gpiof::PF6","value":"PF6 {  }","parent":null,"children":[{"krate":0,"index":10156}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":10159},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156374,"byte_end":156382,"line_start":2103,"line_end":2103,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PF6<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PF6<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":10162},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156413,"byte_end":156421,"line_start":2104,"line_end":2104,"column_start":23,"column_end":31},"name":"into_af2","qualname":"<PF6<MODE>>::into_af2","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PF6<AF2>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":10165},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156452,"byte_end":156460,"line_start":2105,"line_end":2105,"column_start":23,"column_end":31},"name":"into_af4","qualname":"<PF6<MODE>>::into_af4","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PF6<AF4>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":10168},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156491,"byte_end":156499,"line_start":2106,"line_end":2106,"column_start":23,"column_end":31},"name":"into_af7","qualname":"<PF6<MODE>>::into_af7","value":"fn (self, moder: &mut MODER, afr: &mut AFRL) -> PF6<AF7>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":10221},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156628,"byte_end":156631,"line_start":2110,"line_end":2110,"column_start":13,"column_end":16},"name":"PF7","qualname":"::gpio::gpiof::PF7","value":"PF7 {  }","parent":null,"children":[{"krate":0,"index":10223}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10276},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156736,"byte_end":156739,"line_start":2111,"line_end":2111,"column_start":13,"column_end":16},"name":"PF8","qualname":"::gpio::gpiof::PF8","value":"PF8 {  }","parent":null,"children":[{"krate":0,"index":10278}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10331},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":156844,"byte_end":156847,"line_start":2112,"line_end":2112,"column_start":13,"column_end":16},"name":"PF9","qualname":"::gpio::gpiof::PF9","value":"PF9 {  }","parent":null,"children":[{"krate":0,"index":10333}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10386},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157112,"byte_end":157116,"line_start":2116,"line_end":2116,"column_start":13,"column_end":17},"name":"PF10","qualname":"::gpio::gpiof::PF10","value":"PF10 {  }","parent":null,"children":[{"krate":0,"index":10388}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":10391},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157234,"byte_end":157242,"line_start":2117,"line_end":2117,"column_start":23,"column_end":31},"name":"into_af1","qualname":"<PF10<MODE>>::into_af1","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PF10<AF1>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":10394},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157273,"byte_end":157281,"line_start":2118,"line_end":2118,"column_start":23,"column_end":31},"name":"into_af3","qualname":"<PF10<MODE>>::into_af3","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PF10<AF3>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":10397},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157312,"byte_end":157320,"line_start":2119,"line_end":2119,"column_start":23,"column_end":31},"name":"into_af5","qualname":"<PF10<MODE>>::into_af5","value":"fn (self, moder: &mut MODER, afr: &mut AFRH) -> PF10<AF5>","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to serve as a specific alternate function\n","sig":null,"attributes":[{"value":"/ Configures the pin to serve as a specific alternate function","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61643,"byte_end":61707,"line_start":477,"line_end":477,"column_start":29,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":10450},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157521,"byte_end":157525,"line_start":2124,"line_end":2124,"column_start":13,"column_end":17},"name":"PF11","qualname":"::gpio::gpiof::PF11","value":"PF11 {  }","parent":null,"children":[{"krate":0,"index":10452}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10505},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157640,"byte_end":157644,"line_start":2125,"line_end":2125,"column_start":13,"column_end":17},"name":"PF12","qualname":"::gpio::gpiof::PF12","value":"PF12 {  }","parent":null,"children":[{"krate":0,"index":10507}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10560},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157759,"byte_end":157763,"line_start":2126,"line_end":2126,"column_start":13,"column_end":17},"name":"PF13","qualname":"::gpio::gpiof::PF13","value":"PF13 {  }","parent":null,"children":[{"krate":0,"index":10562}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10615},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157878,"byte_end":157882,"line_start":2127,"line_end":2127,"column_start":13,"column_end":17},"name":"PF14","qualname":"::gpio::gpiof::PF14","value":"PF14 {  }","parent":null,"children":[{"krate":0,"index":10617}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10670},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":157997,"byte_end":158001,"line_start":2128,"line_end":2128,"column_start":13,"column_end":17},"name":"PF15","qualname":"::gpio::gpiof::PF15","value":"PF15 {  }","parent":null,"children":[{"krate":0,"index":10672}],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/gpio.rs","byte_start":61419,"byte_end":61426,"line_start":470,"line_end":470,"column_start":21,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":365},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i2c","qualname":"::i2c","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":10725},{"krate":0,"index":10732},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":10734},{"krate":0,"index":10745},{"krate":0,"index":10750},{"krate":0,"index":10756},{"krate":0,"index":10763},{"krate":0,"index":10774},{"krate":0,"index":10779},{"krate":0,"index":10785}],"decl_id":null,"docs":" Inter-Integrated Circuit (I2C) bus\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3194,"byte_end":3229,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"! Inter-Integrated Circuit (I2C) bus","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":170348,"byte_end":170386,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10726},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171106,"byte_end":171109,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"Bus","qualname":"::i2c::Error::Bus","value":"Error::Bus","parent":{"krate":0,"index":10725},"children":[],"decl_id":null,"docs":" Bus error\n","sig":null,"attributes":[{"value":"/ Bus error","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171088,"byte_end":171101,"line_start":31,"line_end":31,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10728},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171140,"byte_end":171151,"line_start":34,"line_end":34,"column_start":5,"column_end":16},"name":"Arbitration","qualname":"::i2c::Error::Arbitration","value":"Error::Arbitration","parent":{"krate":0,"index":10725},"children":[],"decl_id":null,"docs":" Arbitration loss\n","sig":null,"attributes":[{"value":"/ Arbitration loss","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171115,"byte_end":171135,"line_start":33,"line_end":33,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10730},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171310,"byte_end":171321,"line_start":40,"line_end":40,"column_start":5,"column_end":16},"name":"_Extensible","qualname":"::i2c::Error::_Extensible","value":"Error::_Extensible","parent":{"krate":0,"index":10725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10725},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171076,"byte_end":171081,"line_start":30,"line_end":30,"column_start":10,"column_end":15},"name":"Error","qualname":"::i2c::Error","value":"Error::{Bus, Arbitration, _Extensible}","parent":null,"children":[{"krate":0,"index":10726},{"krate":0,"index":10728},{"krate":0,"index":10730}],"decl_id":null,"docs":" I2C error\n","sig":null,"attributes":[{"value":"/ I2C error","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171036,"byte_end":171049,"line_start":28,"line_end":28,"column_start":1,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":391},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171427,"byte_end":171433,"line_start":45,"line_end":45,"column_start":18,"column_end":24},"name":"SclPin","qualname":"::i2c::SclPin","value":"SclPin<I2C>","parent":null,"children":[],"decl_id":null,"docs":" SCL pin -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ SCL pin -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171367,"byte_end":171409,"line_start":44,"line_end":44,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171503,"byte_end":171509,"line_start":48,"line_end":48,"column_start":18,"column_end":24},"name":"SdaPin","qualname":"::i2c::SdaPin","value":"SdaPin<I2C>","parent":null,"children":[],"decl_id":null,"docs":" SDA pin -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ SDA pin -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171443,"byte_end":171485,"line_start":47,"line_end":47,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":404},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172357,"byte_end":172360,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"I2c","qualname":"::i2c::I2c","value":"I2c {  }","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"decl_id":null,"docs":" I2C peripheral operating in master mode\n","sig":null,"attributes":[{"value":"/ I2C peripheral operating in master mode","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172302,"byte_end":172345,"line_start":78,"line_end":78,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":10737},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":183078,"byte_end":183082,"line_start":370,"line_end":370,"column_start":12,"column_end":16},"name":"i2c1","qualname":"<I2c<I2C1, (SCL, SDA)>>::i2c1","value":"fn <F> (i2c: I2C1, pins: (SCL, SDA), freq: F, clocks: Clocks, apb1: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the I2C peripheral to work in master mode\n","sig":null,"attributes":[{"value":"/ Configures the I2C peripheral to work in master mode","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":173035,"byte_end":173091,"line_start":106,"line_end":106,"column_start":17,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":10766},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":183113,"byte_end":183117,"line_start":371,"line_end":371,"column_start":12,"column_end":16},"name":"i2c2","qualname":"<I2c<I2C2, (SCL, SDA)>>::i2c2","value":"fn <F> (i2c: I2C2, pins: (SCL, SDA), freq: F, clocks: Clocks, apb1: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the I2C peripheral to work in master mode\n","sig":null,"attributes":[{"value":"/ Configures the I2C peripheral to work in master mode","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":173035,"byte_end":173091,"line_start":106,"line_end":106,"column_start":17,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":411},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418}],"decl_id":null,"docs":" Prelude\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3243,"byte_end":3278,"line_start":123,"line_end":123,"column_start":1,"column_end":36}},{"value":"! Prelude","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/prelude.rs","byte_start":183215,"byte_end":183226,"line_start":1,"line_end":1,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":423},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pwm","qualname":"::pwm","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":480},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":491},{"krate":0,"index":496},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":10792},{"krate":0,"index":10793},{"krate":0,"index":10794},{"krate":0,"index":10795},{"krate":0,"index":10796},{"krate":0,"index":10797},{"krate":0,"index":10808},{"krate":0,"index":10818},{"krate":0,"index":10828},{"krate":0,"index":10838},{"krate":0,"index":10848},{"krate":0,"index":10858},{"krate":0,"index":10868},{"krate":0,"index":10878},{"krate":0,"index":10881},{"krate":0,"index":10883},{"krate":0,"index":10886},{"krate":0,"index":10888},{"krate":0,"index":10891},{"krate":0,"index":10893},{"krate":0,"index":10896},{"krate":0,"index":10898},{"krate":0,"index":10901},{"krate":0,"index":10903},{"krate":0,"index":10906},{"krate":0,"index":10908},{"krate":0,"index":10911},{"krate":0,"index":10913},{"krate":0,"index":10916},{"krate":0,"index":10918},{"krate":0,"index":10921},{"krate":0,"index":10923},{"krate":0,"index":10926},{"krate":0,"index":10928},{"krate":0,"index":10931},{"krate":0,"index":10933},{"krate":0,"index":10936},{"krate":0,"index":10938},{"krate":0,"index":10941},{"krate":0,"index":10943},{"krate":0,"index":10946},{"krate":0,"index":10948},{"krate":0,"index":10951},{"krate":0,"index":10953},{"krate":0,"index":10956},{"krate":0,"index":10958},{"krate":0,"index":10961},{"krate":0,"index":10963},{"krate":0,"index":10966},{"krate":0,"index":10968},{"krate":0,"index":10971},{"krate":0,"index":10973},{"krate":0,"index":10976},{"krate":0,"index":10978},{"krate":0,"index":10981},{"krate":0,"index":10983},{"krate":0,"index":10993},{"krate":0,"index":11003},{"krate":0,"index":11013},{"krate":0,"index":11023},{"krate":0,"index":11033},{"krate":0,"index":11036},{"krate":0,"index":11038},{"krate":0,"index":11041},{"krate":0,"index":11043},{"krate":0,"index":11046},{"krate":0,"index":11048},{"krate":0,"index":11051},{"krate":0,"index":11053},{"krate":0,"index":11056},{"krate":0,"index":11058},{"krate":0,"index":11061},{"krate":0,"index":11063},{"krate":0,"index":11066},{"krate":0,"index":11068},{"krate":0,"index":11071},{"krate":0,"index":11073},{"krate":0,"index":11076},{"krate":0,"index":11078},{"krate":0,"index":11081},{"krate":0,"index":11083},{"krate":0,"index":11086},{"krate":0,"index":11088},{"krate":0,"index":11091},{"krate":0,"index":11093},{"krate":0,"index":11096},{"krate":0,"index":11098},{"krate":0,"index":11101},{"krate":0,"index":11103},{"krate":0,"index":11106},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":11108},{"krate":0,"index":11109},{"krate":0,"index":11110},{"krate":0,"index":11111},{"krate":0,"index":11112},{"krate":0,"index":11113},{"krate":0,"index":11123},{"krate":0,"index":11133},{"krate":0,"index":11143},{"krate":0,"index":11153},{"krate":0,"index":11163},{"krate":0,"index":11166},{"krate":0,"index":11168},{"krate":0,"index":11171},{"krate":0,"index":11173},{"krate":0,"index":11176},{"krate":0,"index":11178},{"krate":0,"index":11181},{"krate":0,"index":11183},{"krate":0,"index":11186},{"krate":0,"index":11188},{"krate":0,"index":11191},{"krate":0,"index":11193},{"krate":0,"index":11196},{"krate":0,"index":11198},{"krate":0,"index":11201},{"krate":0,"index":11203},{"krate":0,"index":11206},{"krate":0,"index":11208},{"krate":0,"index":11211},{"krate":0,"index":11213},{"krate":0,"index":11216},{"krate":0,"index":11218},{"krate":0,"index":11221},{"krate":0,"index":11223},{"krate":0,"index":11226},{"krate":0,"index":11228},{"krate":0,"index":11231},{"krate":0,"index":11233},{"krate":0,"index":11236},{"krate":0,"index":11238},{"krate":0,"index":11241},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":11243},{"krate":0,"index":11244},{"krate":0,"index":11245},{"krate":0,"index":11246},{"krate":0,"index":11247},{"krate":0,"index":11248},{"krate":0,"index":11258},{"krate":0,"index":11268},{"krate":0,"index":11278},{"krate":0,"index":11288},{"krate":0,"index":11298},{"krate":0,"index":11301},{"krate":0,"index":11303},{"krate":0,"index":11306},{"krate":0,"index":11308},{"krate":0,"index":11311},{"krate":0,"index":11313},{"krate":0,"index":11316},{"krate":0,"index":11318},{"krate":0,"index":11321},{"krate":0,"index":11323},{"krate":0,"index":11326},{"krate":0,"index":11328},{"krate":0,"index":11331},{"krate":0,"index":11333},{"krate":0,"index":11336},{"krate":0,"index":11338},{"krate":0,"index":11341},{"krate":0,"index":11343},{"krate":0,"index":11346},{"krate":0,"index":11348},{"krate":0,"index":11351},{"krate":0,"index":11353},{"krate":0,"index":11356},{"krate":0,"index":552},{"krate":0,"index":11358},{"krate":0,"index":11359},{"krate":0,"index":11360},{"krate":0,"index":11361},{"krate":0,"index":11362},{"krate":0,"index":11363},{"krate":0,"index":11374},{"krate":0,"index":11384},{"krate":0,"index":11394},{"krate":0,"index":11404},{"krate":0,"index":11414},{"krate":0,"index":11424},{"krate":0,"index":11434},{"krate":0,"index":11444},{"krate":0,"index":11447},{"krate":0,"index":11449},{"krate":0,"index":11452},{"krate":0,"index":11454},{"krate":0,"index":11457},{"krate":0,"index":11459},{"krate":0,"index":11462},{"krate":0,"index":11464},{"krate":0,"index":11467},{"krate":0,"index":11469},{"krate":0,"index":11472},{"krate":0,"index":11474},{"krate":0,"index":11477},{"krate":0,"index":11479},{"krate":0,"index":11482},{"krate":0,"index":11484},{"krate":0,"index":11487},{"krate":0,"index":11489},{"krate":0,"index":11492},{"krate":0,"index":11494},{"krate":0,"index":11497},{"krate":0,"index":11499},{"krate":0,"index":11502},{"krate":0,"index":11504},{"krate":0,"index":11507},{"krate":0,"index":11509},{"krate":0,"index":11512},{"krate":0,"index":11514},{"krate":0,"index":11517},{"krate":0,"index":11519},{"krate":0,"index":11522},{"krate":0,"index":11524},{"krate":0,"index":11527},{"krate":0,"index":11529},{"krate":0,"index":11532},{"krate":0,"index":11534},{"krate":0,"index":11537},{"krate":0,"index":11539},{"krate":0,"index":11550},{"krate":0,"index":11560},{"krate":0,"index":11570},{"krate":0,"index":11580},{"krate":0,"index":11583},{"krate":0,"index":11585},{"krate":0,"index":11588},{"krate":0,"index":11590},{"krate":0,"index":11593},{"krate":0,"index":11595},{"krate":0,"index":11598},{"krate":0,"index":11600},{"krate":0,"index":11603},{"krate":0,"index":11605},{"krate":0,"index":11608},{"krate":0,"index":11610},{"krate":0,"index":11613},{"krate":0,"index":11615},{"krate":0,"index":11618},{"krate":0,"index":11620},{"krate":0,"index":11631},{"krate":0,"index":11641},{"krate":0,"index":11651},{"krate":0,"index":11654},{"krate":0,"index":11656},{"krate":0,"index":11659},{"krate":0,"index":11661},{"krate":0,"index":11664},{"krate":0,"index":11666},{"krate":0,"index":11669},{"krate":0,"index":11671},{"krate":0,"index":11674},{"krate":0,"index":11676},{"krate":0,"index":11679},{"krate":0,"index":11681},{"krate":0,"index":11684},{"krate":0,"index":11686},{"krate":0,"index":11697},{"krate":0,"index":11707},{"krate":0,"index":11717},{"krate":0,"index":11720},{"krate":0,"index":11722},{"krate":0,"index":11725},{"krate":0,"index":11727},{"krate":0,"index":11730},{"krate":0,"index":11732},{"krate":0,"index":11735},{"krate":0,"index":11737},{"krate":0,"index":11740}],"decl_id":null,"docs":"  # Pulse width modulation","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3296,"byte_end":3331,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"!\n  # Pulse width modulation\n\n  Numerous stm32 timers can be used to output pulse width modulated\n  signals on a variety of pins.  The timers support up to 4\n  simultaneous pwm outputs in separate `Channels`.  These channels\n  share a period and resolution, but can have a different duty cycle.\n  All pins on a shared channel have the exact same output.\n\n  ## Creating the (unconfigured) channels\n\n  Before we connect any pins, we need to convert our timer peripheral\n  into a set of channels.  We may only be interested in using one or\n  two of these channels, so we can simply ignore them with `_` when we\n  destructure.\n\n  ```\n    // (Other imports omitted)\n    use stm32f3xx-hal::pwm::tim3;\n\n    let dp = stm32f303::Peripherals::take().unwrap();\n\n    let mut flash = dp.FLASH.constrain();\n    let mut rcc = dp.RCC.constrain();\n    let clocks = rcc.cfgr.freeze(&mut flash.acr);\n\n    // Set the resolution of our duty cycle to 9000 and our period to\n    // 50hz.\n    let mut (c1_no_pins, _, _, c4_no_pins) =\n        tim3(device.TIM3, 9000, 50.hz(), clocks);\n  ```\n\n  In this case, we're only going to use channel 1 and channel 4.\n  Currently we can't enable these timers, because they don't have any\n  pins, so the following wouldn't compile.\n\n\n  ```\n    // DOES NOT COMPILE\n    c1_no_pins.enable();\n    c4_no_pins.enable();\n  ```\n\n  ## Connecting our pins and enabling the channels\n\n  From here we can connect as many compatible pins as we like.  Once\n  the channels have pins connected they can be enabled.\n\n  ```\n    let mut gpioa = dp.GPIOB.split(&mut rcc.ahb);\n    let pa6 = gpioa.pa6.into_af2(&mut gpioa.moder, &mut gpioa.afrl);\n\n    let mut gpiob = dp.GPIOB.split(&mut rcc.ahb);\n    let pb1 = gpiob.pb1.into_af2(&mut gpiob.moder, &mut gpiob.afrl);\n    let pb4 = gpiob.pb4.into_af2(&mut gpiob.moder, &mut gpiob.afrl);\n\n    let mut ch1 = ch1_no_pins\n        .output_to_pa6(pa6)\n        .output_to_pb4(pb4);\n\n    let mut ch4 = ch4_no_pins\n        .output_to_pb1(pb1);\n\n    ch1.enable();\n    ch4.enable();\n  ```\n\n  All three pins will output a 50hz period. PA6 and PB4 will share a\n  duty cycle, but the duty cycle for PB1 can be controlled\n  independently.\n\n  ```\n    // Affect PA6 and PB4\n    ch1.set_duty_cycle(1000);\n\n    // Affect only PB1\n    ch4.set_duty_cycle(2000);\n  ```\n\n  ## Single channel timers\n\n  Timers that only have only one channel do not return a tuple, and\n  instead return the (unconfigured) channel directly.\n\n  ```\n    // (Other imports omitted)\n    use stm32f3xx-hal::pwm::tim16;\n\n    let dp = stm32f303::Peripherals::take().unwrap();\n\n    let mut flash = dp.FLASH.constrain();\n    let mut rcc = dp.RCC.constrain();\n    let clocks = rcc.cfgr.freeze(&mut flash.acr);\n\n    // Set the resolution of our duty cycle to 9000 and our period to\n    // 50hz.\n    let mut c1_no_pins = tim16(device.TIM3, 9000, 50.hz(), clocks);\n  ```\n\n  ## Complementary timers\n\n  Certain timers have complementary outputs.  Currently, channels can\n  output to _either_ pins used for standard or complementary pins (and\n  do not exhibit complementary behaviors).  Most of the time this will\n  be totally invisible.\n\n  In this example, we use a complementary pin in the same way we'd use\n  any other pwm channel.\n\n  ```\n    // (Other imports omitted)\n    use stm32f3xx-hal::pwm::tim1;\n\n    let dp = stm32f303::Peripherals::take().unwrap();\n\n    let mut flash = dp.FLASH.constrain();\n    let mut rcc = dp.RCC.constrain();\n    let clocks = rcc.cfgr.freeze(&mut flash.acr);\n\n    // Set the resolution of our duty cycle to 9000 and our period to\n    // 50hz.\n    let mut (ch1_no_pins, _, _, _) = tim1(device.TIM3, 9000, 50.hz(), clocks);\n\n    let mut gpioa = dp.GPIOB.split(&mut rcc.ahb);\n    let pa7 = gpioa.pa7.into_af6(&mut gpioa.moder, &mut gpioa.afrl);\n\n    let mut ch1 = ch1_no_pins.output_to(pa7);\n    ch1.enable();\n  ```\n\n  We used this channel/pin exactly like any previous example.\n\n  However, we cannot use standard and complementary pins\n  simultaneously.  Luckily, typestates enforce this for us.\n\n  ```\n    ...\n\n    let mut gpioa = dp.GPIOB.split(&mut rcc.ahb);\n    let pa7 = gpioa.pa7.into_af6(&mut gpioa.moder, &mut gpioa.afrl);\n    let pa8 = gpioa.pa8.into_af6(&mut gpioa.moder, &mut gpioa.afrl);\n\n    let mut ch1 = ch1_no_pins\n        .output_to(pa7)\n        // DOES NOT COMPILE\n        .output_to(pa8);\n  ```\n\n  Once we've connected a complementary pin (PA7) we are now _only_\n  allowed to use other complementary pins.  PA8 is a valid choice if\n  we have no pins in use, but it cannot be used once we've used PA7.\n*/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":183945,"byte_end":188481,"line_start":1,"line_end":152,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":515},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194297,"byte_end":194305,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"name":"TIM2_CH1","qualname":"::pwm::TIM2_CH1","value":"TIM2_CH1 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 1 of Timer 1 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 1 of Timer 1 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194233,"byte_end":194285,"line_start":388,"line_end":388,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194373,"byte_end":194381,"line_start":391,"line_end":391,"column_start":12,"column_end":20},"name":"TIM2_CH2","qualname":"::pwm::TIM2_CH2","value":"TIM2_CH2 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 2 of Timer 1 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 2 of Timer 1 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194309,"byte_end":194361,"line_start":390,"line_end":390,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":517},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194449,"byte_end":194457,"line_start":393,"line_end":393,"column_start":12,"column_end":20},"name":"TIM2_CH3","qualname":"::pwm::TIM2_CH3","value":"TIM2_CH3 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 3 of Timer 1 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 3 of Timer 1 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194385,"byte_end":194437,"line_start":392,"line_end":392,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":518},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194525,"byte_end":194533,"line_start":395,"line_end":395,"column_start":12,"column_end":20},"name":"TIM2_CH4","qualname":"::pwm::TIM2_CH4","value":"TIM2_CH4 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 4 of Timer 1 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 4 of Timer 1 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194461,"byte_end":194513,"line_start":394,"line_end":394,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":519},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194603,"byte_end":194612,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"TIM15_CH1","qualname":"::pwm::TIM15_CH1","value":"TIM15_CH1 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 1 of Timer 15 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 1 of Timer 15 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194538,"byte_end":194591,"line_start":397,"line_end":397,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":520},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194681,"byte_end":194690,"line_start":400,"line_end":400,"column_start":12,"column_end":21},"name":"TIM15_CH2","qualname":"::pwm::TIM15_CH2","value":"TIM15_CH2 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 2 of Timer 15 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 2 of Timer 15 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194616,"byte_end":194669,"line_start":399,"line_end":399,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194760,"byte_end":194769,"line_start":403,"line_end":403,"column_start":12,"column_end":21},"name":"TIM16_CH1","qualname":"::pwm::TIM16_CH1","value":"TIM16_CH1 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 1 of Timer 16 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 1 of Timer 16 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194695,"byte_end":194748,"line_start":402,"line_end":402,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194839,"byte_end":194848,"line_start":406,"line_end":406,"column_start":12,"column_end":21},"name":"TIM17_CH1","qualname":"::pwm::TIM17_CH1","value":"TIM17_CH1 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 1 of Timer 17 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 1 of Timer 17 (type state)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194774,"byte_end":194827,"line_start":405,"line_end":405,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":523},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194928,"byte_end":194934,"line_start":409,"line_end":409,"column_start":12,"column_end":18},"name":"NoPins","qualname":"::pwm::NoPins","value":"NoPins {  }","parent":null,"children":[],"decl_id":null,"docs":" Type state used to represent a channel that has no pins yet\n","sig":null,"attributes":[{"value":"/ Type state used to represent a channel that has no pins yet","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194853,"byte_end":194916,"line_start":408,"line_end":408,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195014,"byte_end":195022,"line_start":411,"line_end":411,"column_start":12,"column_end":20},"name":"WithPins","qualname":"::pwm::WithPins","value":"WithPins {  }","parent":null,"children":[],"decl_id":null,"docs":" Type state used to represent a channel is using regular pins\n","sig":null,"attributes":[{"value":"/ Type state used to represent a channel is using regular pins","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":194938,"byte_end":195002,"line_start":410,"line_end":410,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":525},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195115,"byte_end":195124,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"WithNPins","qualname":"::pwm::WithNPins","value":"WithNPins {  }","parent":null,"children":[],"decl_id":null,"docs":" Type state used to represent a channel is using (only) complementary pins\n","sig":null,"attributes":[{"value":"/ Type state used to represent a channel is using (only) complementary pins","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195026,"byte_end":195103,"line_start":412,"line_end":412,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195356,"byte_end":195366,"line_start":420,"line_end":420,"column_start":12,"column_end":22},"name":"PwmChannel","qualname":"::pwm::PwmChannel","value":"PwmChannel {  }","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"decl_id":null,"docs":" Representation of a Channel for an abritary timer channel,\n that also holds a type state for whether or not this channel\n is using any pins yet.","sig":null,"attributes":[{"value":"/ Representation of a Channel for an abritary timer channel,","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195129,"byte_end":195191,"line_start":415,"line_end":415,"column_start":1,"column_end":63}},{"value":"/ that also holds a type state for whether or not this channel","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195192,"byte_end":195256,"line_start":416,"line_end":416,"column_start":1,"column_end":65}},{"value":"/ is using any pins yet.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195257,"byte_end":195283,"line_start":417,"line_end":417,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195284,"byte_end":195287,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ If there are no pins supplied, it cannot be enabled.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195288,"byte_end":195344,"line_start":419,"line_end":419,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":10983},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":210087,"byte_end":210091,"line_start":879,"line_end":879,"column_start":5,"column_end":9},"name":"tim2","qualname":"::pwm::tim2","value":"fn (tim: TIM2, res: u32, freq: Hertz, clocks: &Clocks) -> (PwmChannel<TIM2_CH1, NoPins>, PwmChannel<TIM2_CH2, NoPins>,\n PwmChannel<TIM2_CH3, NoPins>, PwmChannel<TIM2_CH4, NoPins>)","parent":null,"children":[],"decl_id":null,"docs":" Create one or more output channels from a TIM Peripheral\n This function requires the maximum resolution of the duty cycle,\n the period of the PWM signal and the frozen clock configuration.","sig":null,"attributes":[{"value":"/ Create one or more output channels from a TIM Peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195668,"byte_end":195728,"line_start":427,"line_end":427,"column_start":9,"column_end":69}},{"value":"/ This function requires the maximum resolution of the duty cycle,","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195737,"byte_end":195805,"line_start":428,"line_end":428,"column_start":9,"column_end":77}},{"value":"/ the period of the PWM signal and the frozen clock configuration.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195814,"byte_end":195882,"line_start":429,"line_end":429,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195891,"byte_end":195894,"line_start":430,"line_end":430,"column_start":9,"column_end":12}},{"value":"/ The resolution should be chosen to offer sufficient steps against","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195903,"byte_end":195972,"line_start":431,"line_end":431,"column_start":9,"column_end":78}},{"value":"/ your target peripheral.  For example, a servo that can turn from","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195981,"byte_end":196049,"line_start":432,"line_end":432,"column_start":9,"column_end":77}},{"value":"/ 0 degrees (2% duty cycle) to 180 degrees (4% duty cycle) might choose","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196058,"byte_end":196131,"line_start":433,"line_end":433,"column_start":9,"column_end":82}},{"value":"/ a resolution of 9000.  This allows the servo to be set in increments","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196140,"byte_end":196212,"line_start":434,"line_end":434,"column_start":9,"column_end":81}},{"value":"/ of exactly one degree.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196221,"byte_end":196247,"line_start":435,"line_end":435,"column_start":9,"column_end":35}},{"value":"allow(unused_parens)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196256,"byte_end":196279,"line_start":436,"line_end":436,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":11034},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":210589,"byte_end":210602,"line_start":898,"line_end":898,"column_start":35,"column_end":48},"name":"output_to_pa0","qualname":"<PwmChannel<TIM2_CH1, NoPins>>::output_to_pa0","value":"fn (self, _p: PA0<AF1>) -> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11037},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":210589,"byte_end":210602,"line_start":898,"line_end":898,"column_start":35,"column_end":48},"name":"output_to_pa0","qualname":"<PwmChannel<TIM2_CH1, WithPins>>::output_to_pa0","value":"fn (self, _p: PA0<AF1>) -> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11039},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":210649,"byte_end":210662,"line_start":899,"line_end":899,"column_start":35,"column_end":48},"name":"output_to_pa5","qualname":"<PwmChannel<TIM2_CH1, NoPins>>::output_to_pa5","value":"fn (self, _p: PA5<AF1>) -> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11042},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":210649,"byte_end":210662,"line_start":899,"line_end":899,"column_start":35,"column_end":48},"name":"output_to_pa5","qualname":"<PwmChannel<TIM2_CH1, WithPins>>::output_to_pa5","value":"fn (self, _p: PA5<AF1>) -> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11044},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":210709,"byte_end":210723,"line_start":900,"line_end":900,"column_start":35,"column_end":49},"name":"output_to_pa15","qualname":"<PwmChannel<TIM2_CH1, NoPins>>::output_to_pa15","value":"fn (self, _p: PA15<AF1>) -> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11047},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":210709,"byte_end":210723,"line_start":900,"line_end":900,"column_start":35,"column_end":49},"name":"output_to_pa15","qualname":"<PwmChannel<TIM2_CH1, WithPins>>::output_to_pa15","value":"fn (self, _p: PA15<AF1>) -> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11049},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":210982,"byte_end":210995,"line_start":910,"line_end":910,"column_start":35,"column_end":48},"name":"output_to_pd3","qualname":"<PwmChannel<TIM2_CH1, NoPins>>::output_to_pd3","value":"fn (self, _p: PD3<AF2>) -> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11052},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":210982,"byte_end":210995,"line_start":910,"line_end":910,"column_start":35,"column_end":48},"name":"output_to_pd3","qualname":"<PwmChannel<TIM2_CH1, WithPins>>::output_to_pd3","value":"fn (self, _p: PD3<AF2>) -> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11054},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211043,"byte_end":211056,"line_start":912,"line_end":912,"column_start":35,"column_end":48},"name":"output_to_pa1","qualname":"<PwmChannel<TIM2_CH2, NoPins>>::output_to_pa1","value":"fn (self, _p: PA1<AF1>) -> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11057},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211043,"byte_end":211056,"line_start":912,"line_end":912,"column_start":35,"column_end":48},"name":"output_to_pa1","qualname":"<PwmChannel<TIM2_CH2, WithPins>>::output_to_pa1","value":"fn (self, _p: PA1<AF1>) -> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11059},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211103,"byte_end":211116,"line_start":913,"line_end":913,"column_start":35,"column_end":48},"name":"output_to_pb3","qualname":"<PwmChannel<TIM2_CH2, NoPins>>::output_to_pb3","value":"fn (self, _p: PB3<AF1>) -> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11062},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211103,"byte_end":211116,"line_start":913,"line_end":913,"column_start":35,"column_end":48},"name":"output_to_pb3","qualname":"<PwmChannel<TIM2_CH2, WithPins>>::output_to_pb3","value":"fn (self, _p: PB3<AF1>) -> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11064},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211374,"byte_end":211387,"line_start":923,"line_end":923,"column_start":35,"column_end":48},"name":"output_to_pd4","qualname":"<PwmChannel<TIM2_CH2, NoPins>>::output_to_pd4","value":"fn (self, _p: PD4<AF2>) -> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11067},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211374,"byte_end":211387,"line_start":923,"line_end":923,"column_start":35,"column_end":48},"name":"output_to_pd4","qualname":"<PwmChannel<TIM2_CH2, WithPins>>::output_to_pd4","value":"fn (self, _p: PD4<AF2>) -> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11069},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211435,"byte_end":211448,"line_start":925,"line_end":925,"column_start":35,"column_end":48},"name":"output_to_pa2","qualname":"<PwmChannel<TIM2_CH3, NoPins>>::output_to_pa2","value":"fn (self, _p: PA2<AF1>) -> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11072},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211435,"byte_end":211448,"line_start":925,"line_end":925,"column_start":35,"column_end":48},"name":"output_to_pa2","qualname":"<PwmChannel<TIM2_CH3, WithPins>>::output_to_pa2","value":"fn (self, _p: PA2<AF1>) -> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11074},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211495,"byte_end":211508,"line_start":926,"line_end":926,"column_start":35,"column_end":48},"name":"output_to_pa9","qualname":"<PwmChannel<TIM2_CH3, NoPins>>::output_to_pa9","value":"fn (self, _p: PA9<AF10>) -> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11077},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211495,"byte_end":211508,"line_start":926,"line_end":926,"column_start":35,"column_end":48},"name":"output_to_pa9","qualname":"<PwmChannel<TIM2_CH3, WithPins>>::output_to_pa9","value":"fn (self, _p: PA9<AF10>) -> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11079},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211556,"byte_end":211570,"line_start":927,"line_end":927,"column_start":35,"column_end":49},"name":"output_to_pb10","qualname":"<PwmChannel<TIM2_CH3, NoPins>>::output_to_pb10","value":"fn (self, _p: PB10<AF1>) -> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11082},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211556,"byte_end":211570,"line_start":927,"line_end":927,"column_start":35,"column_end":49},"name":"output_to_pb10","qualname":"<PwmChannel<TIM2_CH3, WithPins>>::output_to_pb10","value":"fn (self, _p: PB10<AF1>) -> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11084},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211829,"byte_end":211842,"line_start":937,"line_end":937,"column_start":35,"column_end":48},"name":"output_to_pd7","qualname":"<PwmChannel<TIM2_CH3, NoPins>>::output_to_pd7","value":"fn (self, _p: PD7<AF2>) -> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11087},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211829,"byte_end":211842,"line_start":937,"line_end":937,"column_start":35,"column_end":48},"name":"output_to_pd7","qualname":"<PwmChannel<TIM2_CH3, WithPins>>::output_to_pd7","value":"fn (self, _p: PD7<AF2>) -> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11089},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211890,"byte_end":211903,"line_start":939,"line_end":939,"column_start":35,"column_end":48},"name":"output_to_pa3","qualname":"<PwmChannel<TIM2_CH4, NoPins>>::output_to_pa3","value":"fn (self, _p: PA3<AF1>) -> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11092},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211890,"byte_end":211903,"line_start":939,"line_end":939,"column_start":35,"column_end":48},"name":"output_to_pa3","qualname":"<PwmChannel<TIM2_CH4, WithPins>>::output_to_pa3","value":"fn (self, _p: PA3<AF1>) -> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11094},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211950,"byte_end":211964,"line_start":940,"line_end":940,"column_start":35,"column_end":49},"name":"output_to_pa10","qualname":"<PwmChannel<TIM2_CH4, NoPins>>::output_to_pa10","value":"fn (self, _p: PA10<AF1>) -> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11097},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":211950,"byte_end":211964,"line_start":940,"line_end":940,"column_start":35,"column_end":49},"name":"output_to_pa10","qualname":"<PwmChannel<TIM2_CH4, WithPins>>::output_to_pa10","value":"fn (self, _p: PA10<AF1>) -> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11099},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":212012,"byte_end":212026,"line_start":941,"line_end":941,"column_start":35,"column_end":49},"name":"output_to_pb11","qualname":"<PwmChannel<TIM2_CH4, NoPins>>::output_to_pb11","value":"fn (self, _p: PB11<AF1>) -> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11102},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":212012,"byte_end":212026,"line_start":941,"line_end":941,"column_start":35,"column_end":49},"name":"output_to_pb11","qualname":"<PwmChannel<TIM2_CH4, WithPins>>::output_to_pb11","value":"fn (self, _p: PB11<AF1>) -> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11104},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":212285,"byte_end":212298,"line_start":951,"line_end":951,"column_start":35,"column_end":48},"name":"output_to_pd6","qualname":"<PwmChannel<TIM2_CH4, NoPins>>::output_to_pd6","value":"fn (self, _p: PD6<AF2>) -> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11107},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":212285,"byte_end":212298,"line_start":951,"line_end":951,"column_start":35,"column_end":48},"name":"output_to_pd6","qualname":"<PwmChannel<TIM2_CH4, WithPins>>::output_to_pd6","value":"fn (self, _p: PD6<AF2>) -> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11535},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":223824,"byte_end":223837,"line_start":1329,"line_end":1329,"column_start":35,"column_end":48},"name":"output_to_pd1","qualname":"<PwmChannel<TIM8_CH4, NoPins>>::output_to_pd1","value":"fn (self, _p: PD1<AF4>) -> PwmChannel<TIM8_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11538},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":223824,"byte_end":223837,"line_start":1329,"line_end":1329,"column_start":35,"column_end":48},"name":"output_to_pd1","qualname":"<PwmChannel<TIM8_CH4, WithPins>>::output_to_pd1","value":"fn (self, _p: PD1<AF4>) -> PwmChannel<TIM8_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":11539},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":227756,"byte_end":227761,"line_start":1469,"line_end":1469,"column_start":5,"column_end":10},"name":"tim15","qualname":"::pwm::tim15","value":"fn (tim: TIM15, res: u16, freq: Hertz, clocks: &Clocks) -> (PwmChannel<TIM15_CH1, NoPins>, PwmChannel<TIM15_CH2, NoPins>)","parent":null,"children":[],"decl_id":null,"docs":" Create one or more output channels from a TIM Peripheral\n This function requires the maximum resolution of the duty cycle,\n the period of the PWM signal and the frozen clock configuration.","sig":null,"attributes":[{"value":"/ Create one or more output channels from a TIM Peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195668,"byte_end":195728,"line_start":427,"line_end":427,"column_start":9,"column_end":69}},{"value":"/ This function requires the maximum resolution of the duty cycle,","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195737,"byte_end":195805,"line_start":428,"line_end":428,"column_start":9,"column_end":77}},{"value":"/ the period of the PWM signal and the frozen clock configuration.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195814,"byte_end":195882,"line_start":429,"line_end":429,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195891,"byte_end":195894,"line_start":430,"line_end":430,"column_start":9,"column_end":12}},{"value":"/ The resolution should be chosen to offer sufficient steps against","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195903,"byte_end":195972,"line_start":431,"line_end":431,"column_start":9,"column_end":78}},{"value":"/ your target peripheral.  For example, a servo that can turn from","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195981,"byte_end":196049,"line_start":432,"line_end":432,"column_start":9,"column_end":77}},{"value":"/ 0 degrees (2% duty cycle) to 180 degrees (4% duty cycle) might choose","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196058,"byte_end":196131,"line_start":433,"line_end":433,"column_start":9,"column_end":82}},{"value":"/ a resolution of 9000.  This allows the servo to be set in increments","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196140,"byte_end":196212,"line_start":434,"line_end":434,"column_start":9,"column_end":81}},{"value":"/ of exactly one degree.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196221,"byte_end":196247,"line_start":435,"line_end":435,"column_start":9,"column_end":35}},{"value":"allow(unused_parens)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196256,"byte_end":196279,"line_start":436,"line_end":436,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":11581},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228109,"byte_end":228122,"line_start":1486,"line_end":1486,"column_start":37,"column_end":50},"name":"output_to_pa2","qualname":"<PwmChannel<TIM15_CH1, NoPins>>::output_to_pa2","value":"fn (self, _p: PA2<AF9>) -> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11584},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228109,"byte_end":228122,"line_start":1486,"line_end":1486,"column_start":37,"column_end":50},"name":"output_to_pa2","qualname":"<PwmChannel<TIM15_CH1, WithPins>>::output_to_pa2","value":"fn (self, _p: PA2<AF9>) -> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11586},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228291,"byte_end":228305,"line_start":1489,"line_end":1489,"column_start":37,"column_end":51},"name":"output_to_pb14","qualname":"<PwmChannel<TIM15_CH1, NoPins>>::output_to_pb14","value":"fn (self, _p: PB14<AF1>) -> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11589},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228291,"byte_end":228305,"line_start":1489,"line_end":1489,"column_start":37,"column_end":51},"name":"output_to_pb14","qualname":"<PwmChannel<TIM15_CH1, WithPins>>::output_to_pb14","value":"fn (self, _p: PB14<AF1>) -> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11591},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228566,"byte_end":228579,"line_start":1499,"line_end":1499,"column_start":37,"column_end":50},"name":"output_to_pf9","qualname":"<PwmChannel<TIM15_CH1, NoPins>>::output_to_pf9","value":"fn (self, _p: PF9<AF3>) -> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11594},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228566,"byte_end":228579,"line_start":1499,"line_end":1499,"column_start":37,"column_end":50},"name":"output_to_pf9","qualname":"<PwmChannel<TIM15_CH1, WithPins>>::output_to_pf9","value":"fn (self, _p: PF9<AF3>) -> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11596},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228630,"byte_end":228643,"line_start":1501,"line_end":1501,"column_start":38,"column_end":51},"name":"output_to_pa1","qualname":"<PwmChannel<TIM15_CH1, NoPins>>::output_to_pa1","value":"fn (self, _p: PA1<AF9>) -> PwmChannel<TIM15_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11599},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228630,"byte_end":228643,"line_start":1501,"line_end":1501,"column_start":38,"column_end":51},"name":"output_to_pa1","qualname":"<PwmChannel<TIM15_CH1, WithNPins>>::output_to_pa1","value":"fn (self, _p: PA1<AF9>) -> PwmChannel<TIM15_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11601},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228693,"byte_end":228707,"line_start":1502,"line_end":1502,"column_start":38,"column_end":52},"name":"output_to_pb15","qualname":"<PwmChannel<TIM15_CH1, NoPins>>::output_to_pb15","value":"fn (self, _p: PB15<AF2>) -> PwmChannel<TIM15_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11604},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228693,"byte_end":228707,"line_start":1502,"line_end":1502,"column_start":38,"column_end":52},"name":"output_to_pb15","qualname":"<PwmChannel<TIM15_CH1, WithNPins>>::output_to_pb15","value":"fn (self, _p: PB15<AF2>) -> PwmChannel<TIM15_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11606},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228757,"byte_end":228770,"line_start":1503,"line_end":1503,"column_start":37,"column_end":50},"name":"output_to_pa3","qualname":"<PwmChannel<TIM15_CH2, NoPins>>::output_to_pa3","value":"fn (self, _p: PA3<AF9>) -> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11609},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228757,"byte_end":228770,"line_start":1503,"line_end":1503,"column_start":37,"column_end":50},"name":"output_to_pa3","qualname":"<PwmChannel<TIM15_CH2, WithPins>>::output_to_pa3","value":"fn (self, _p: PA3<AF9>) -> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11611},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228939,"byte_end":228953,"line_start":1506,"line_end":1506,"column_start":37,"column_end":51},"name":"output_to_pb15","qualname":"<PwmChannel<TIM15_CH2, NoPins>>::output_to_pb15","value":"fn (self, _p: PB15<AF2>) -> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11614},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":228939,"byte_end":228953,"line_start":1506,"line_end":1506,"column_start":37,"column_end":51},"name":"output_to_pb15","qualname":"<PwmChannel<TIM15_CH2, WithPins>>::output_to_pb15","value":"fn (self, _p: PB15<AF2>) -> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11616},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229214,"byte_end":229228,"line_start":1516,"line_end":1516,"column_start":37,"column_end":51},"name":"output_to_pf10","qualname":"<PwmChannel<TIM15_CH2, NoPins>>::output_to_pf10","value":"fn (self, _p: PF10<AF3>) -> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11619},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229214,"byte_end":229228,"line_start":1516,"line_end":1516,"column_start":37,"column_end":51},"name":"output_to_pf10","qualname":"<PwmChannel<TIM15_CH2, WithPins>>::output_to_pf10","value":"fn (self, _p: PF10<AF3>) -> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":11620},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229280,"byte_end":229285,"line_start":1521,"line_end":1521,"column_start":5,"column_end":10},"name":"tim16","qualname":"::pwm::tim16","value":"fn (tim: TIM16, res: u16, freq: Hertz, clocks: &Clocks) -> (PwmChannel<TIM16_CH1, NoPins>)","parent":null,"children":[],"decl_id":null,"docs":" Create one or more output channels from a TIM Peripheral\n This function requires the maximum resolution of the duty cycle,\n the period of the PWM signal and the frozen clock configuration.","sig":null,"attributes":[{"value":"/ Create one or more output channels from a TIM Peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195668,"byte_end":195728,"line_start":427,"line_end":427,"column_start":9,"column_end":69}},{"value":"/ This function requires the maximum resolution of the duty cycle,","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195737,"byte_end":195805,"line_start":428,"line_end":428,"column_start":9,"column_end":77}},{"value":"/ the period of the PWM signal and the frozen clock configuration.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195814,"byte_end":195882,"line_start":429,"line_end":429,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195891,"byte_end":195894,"line_start":430,"line_end":430,"column_start":9,"column_end":12}},{"value":"/ The resolution should be chosen to offer sufficient steps against","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195903,"byte_end":195972,"line_start":431,"line_end":431,"column_start":9,"column_end":78}},{"value":"/ your target peripheral.  For example, a servo that can turn from","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195981,"byte_end":196049,"line_start":432,"line_end":432,"column_start":9,"column_end":77}},{"value":"/ 0 degrees (2% duty cycle) to 180 degrees (4% duty cycle) might choose","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196058,"byte_end":196131,"line_start":433,"line_end":433,"column_start":9,"column_end":82}},{"value":"/ a resolution of 9000.  This allows the servo to be set in increments","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196140,"byte_end":196212,"line_start":434,"line_end":434,"column_start":9,"column_end":81}},{"value":"/ of exactly one degree.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196221,"byte_end":196247,"line_start":435,"line_end":435,"column_start":9,"column_end":35}},{"value":"allow(unused_parens)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196256,"byte_end":196279,"line_start":436,"line_end":436,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":11652},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229543,"byte_end":229556,"line_start":1537,"line_end":1537,"column_start":37,"column_end":50},"name":"output_to_pa9","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pa9","value":"fn (self, _p: PA6<AF1>) -> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11655},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229543,"byte_end":229556,"line_start":1537,"line_end":1537,"column_start":37,"column_end":50},"name":"output_to_pa9","qualname":"<PwmChannel<TIM16_CH1, WithPins>>::output_to_pa9","value":"fn (self, _p: PA6<AF1>) -> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11657},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229605,"byte_end":229619,"line_start":1538,"line_end":1538,"column_start":37,"column_end":51},"name":"output_to_pa12","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pa12","value":"fn (self, _p: PA12<AF1>) -> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11660},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229605,"byte_end":229619,"line_start":1538,"line_end":1538,"column_start":37,"column_end":51},"name":"output_to_pa12","qualname":"<PwmChannel<TIM16_CH1, WithPins>>::output_to_pa12","value":"fn (self, _p: PA12<AF1>) -> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11662},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229669,"byte_end":229682,"line_start":1539,"line_end":1539,"column_start":37,"column_end":50},"name":"output_to_pb4","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pb4","value":"fn (self, _p: PB4<AF1>) -> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11665},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229669,"byte_end":229682,"line_start":1539,"line_end":1539,"column_start":37,"column_end":50},"name":"output_to_pb4","qualname":"<PwmChannel<TIM16_CH1, WithPins>>::output_to_pb4","value":"fn (self, _p: PB4<AF1>) -> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11667},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229731,"byte_end":229744,"line_start":1540,"line_end":1540,"column_start":37,"column_end":50},"name":"output_to_pb8","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pb8","value":"fn (self, _p: PB8<AF1>) -> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11670},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":229731,"byte_end":229744,"line_start":1540,"line_end":1540,"column_start":37,"column_end":50},"name":"output_to_pb8","qualname":"<PwmChannel<TIM16_CH1, WithPins>>::output_to_pb8","value":"fn (self, _p: PB8<AF1>) -> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11672},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230004,"byte_end":230017,"line_start":1550,"line_end":1550,"column_start":37,"column_end":50},"name":"output_to_pe0","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pe0","value":"fn (self, _p: PE0<AF4>) -> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11675},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230004,"byte_end":230017,"line_start":1550,"line_end":1550,"column_start":37,"column_end":50},"name":"output_to_pe0","qualname":"<PwmChannel<TIM16_CH1, WithPins>>::output_to_pe0","value":"fn (self, _p: PE0<AF4>) -> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11677},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230068,"byte_end":230082,"line_start":1552,"line_end":1552,"column_start":38,"column_end":52},"name":"output_to_pa13","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pa13","value":"fn (self, _p: PA13<AF1>) -> PwmChannel<TIM16_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11680},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230068,"byte_end":230082,"line_start":1552,"line_end":1552,"column_start":38,"column_end":52},"name":"output_to_pa13","qualname":"<PwmChannel<TIM16_CH1, WithNPins>>::output_to_pa13","value":"fn (self, _p: PA13<AF1>) -> PwmChannel<TIM16_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11682},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230133,"byte_end":230146,"line_start":1553,"line_end":1553,"column_start":38,"column_end":51},"name":"output_to_pb6","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pb6","value":"fn (self, _p: PB6<AF1>) -> PwmChannel<TIM16_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11685},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230133,"byte_end":230146,"line_start":1553,"line_end":1553,"column_start":38,"column_end":51},"name":"output_to_pb6","qualname":"<PwmChannel<TIM16_CH1, WithNPins>>::output_to_pb6","value":"fn (self, _p: PB6<AF1>) -> PwmChannel<TIM16_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":11686},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230197,"byte_end":230202,"line_start":1558,"line_end":1558,"column_start":5,"column_end":10},"name":"tim17","qualname":"::pwm::tim17","value":"fn (tim: TIM17, res: u16, freq: Hertz, clocks: &Clocks) -> (PwmChannel<TIM17_CH1, NoPins>)","parent":null,"children":[],"decl_id":null,"docs":" Create one or more output channels from a TIM Peripheral\n This function requires the maximum resolution of the duty cycle,\n the period of the PWM signal and the frozen clock configuration.","sig":null,"attributes":[{"value":"/ Create one or more output channels from a TIM Peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195668,"byte_end":195728,"line_start":427,"line_end":427,"column_start":9,"column_end":69}},{"value":"/ This function requires the maximum resolution of the duty cycle,","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195737,"byte_end":195805,"line_start":428,"line_end":428,"column_start":9,"column_end":77}},{"value":"/ the period of the PWM signal and the frozen clock configuration.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195814,"byte_end":195882,"line_start":429,"line_end":429,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195891,"byte_end":195894,"line_start":430,"line_end":430,"column_start":9,"column_end":12}},{"value":"/ The resolution should be chosen to offer sufficient steps against","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195903,"byte_end":195972,"line_start":431,"line_end":431,"column_start":9,"column_end":78}},{"value":"/ your target peripheral.  For example, a servo that can turn from","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":195981,"byte_end":196049,"line_start":432,"line_end":432,"column_start":9,"column_end":77}},{"value":"/ 0 degrees (2% duty cycle) to 180 degrees (4% duty cycle) might choose","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196058,"byte_end":196131,"line_start":433,"line_end":433,"column_start":9,"column_end":82}},{"value":"/ a resolution of 9000.  This allows the servo to be set in increments","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196140,"byte_end":196212,"line_start":434,"line_end":434,"column_start":9,"column_end":81}},{"value":"/ of exactly one degree.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196221,"byte_end":196247,"line_start":435,"line_end":435,"column_start":9,"column_end":35}},{"value":"allow(unused_parens)","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":196256,"byte_end":196279,"line_start":436,"line_end":436,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":11718},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230460,"byte_end":230473,"line_start":1574,"line_end":1574,"column_start":37,"column_end":50},"name":"output_to_pa7","qualname":"<PwmChannel<TIM17_CH1, NoPins>>::output_to_pa7","value":"fn (self, _p: PA7<AF1>) -> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11721},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230460,"byte_end":230473,"line_start":1574,"line_end":1574,"column_start":37,"column_end":50},"name":"output_to_pa7","qualname":"<PwmChannel<TIM17_CH1, WithPins>>::output_to_pa7","value":"fn (self, _p: PA7<AF1>) -> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11723},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230522,"byte_end":230535,"line_start":1575,"line_end":1575,"column_start":37,"column_end":50},"name":"output_to_pb5","qualname":"<PwmChannel<TIM17_CH1, NoPins>>::output_to_pb5","value":"fn (self, _p: PB5<AF10>) -> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11726},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230522,"byte_end":230535,"line_start":1575,"line_end":1575,"column_start":37,"column_end":50},"name":"output_to_pb5","qualname":"<PwmChannel<TIM17_CH1, WithPins>>::output_to_pb5","value":"fn (self, _p: PB5<AF10>) -> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11728},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230585,"byte_end":230598,"line_start":1576,"line_end":1576,"column_start":37,"column_end":50},"name":"output_to_pb9","qualname":"<PwmChannel<TIM17_CH1, NoPins>>::output_to_pb9","value":"fn (self, _p: PB9<AF1>) -> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11731},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230585,"byte_end":230598,"line_start":1576,"line_end":1576,"column_start":37,"column_end":50},"name":"output_to_pb9","qualname":"<PwmChannel<TIM17_CH1, WithPins>>::output_to_pb9","value":"fn (self, _p: PB9<AF1>) -> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11733},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230858,"byte_end":230871,"line_start":1586,"line_end":1586,"column_start":37,"column_end":50},"name":"output_to_pe1","qualname":"<PwmChannel<TIM17_CH1, NoPins>>::output_to_pe1","value":"fn (self, _p: PE1<AF4>) -> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11736},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230858,"byte_end":230871,"line_start":1586,"line_end":1586,"column_start":37,"column_end":50},"name":"output_to_pe1","qualname":"<PwmChannel<TIM17_CH1, WithPins>>::output_to_pe1","value":"fn (self, _p: PE1<AF4>) -> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11738},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230922,"byte_end":230936,"line_start":1588,"line_end":1588,"column_start":38,"column_end":52},"name":"output_to_pa13","qualname":"<PwmChannel<TIM17_CH1, NoPins>>::output_to_pa13","value":"fn (self, _p: PA13<AF1>) -> PwmChannel<TIM17_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":199961,"byte_end":200027,"line_start":527,"line_end":527,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200040,"byte_end":200103,"line_start":528,"line_end":528,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200116,"byte_end":200130,"line_start":529,"line_end":529,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200143,"byte_end":200146,"line_start":530,"line_end":530,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":200159,"byte_end":200206,"line_start":531,"line_end":531,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11741},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":230922,"byte_end":230936,"line_start":1588,"line_end":1588,"column_start":38,"column_end":52},"name":"output_to_pa13","qualname":"<PwmChannel<TIM17_CH1, WithNPins>>::output_to_pa13","value":"fn (self, _p: PA13<AF1>) -> PwmChannel<TIM17_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201071,"byte_end":201136,"line_start":553,"line_end":553,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201149,"byte_end":201216,"line_start":554,"line_end":554,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201229,"byte_end":201278,"line_start":555,"line_end":555,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201291,"byte_end":201294,"line_start":556,"line_end":556,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/pwm.rs","byte_start":201307,"byte_end":201354,"line_start":557,"line_end":557,"column_start":13,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":553},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rcc","qualname":"::rcc","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":592},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":11742},{"krate":0,"index":11751},{"krate":0,"index":11750},{"krate":0,"index":629}],"decl_id":null,"docs":" Reset and Clock Control\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3345,"byte_end":3380,"line_start":127,"line_end":127,"column_start":1,"column_end":36}},{"value":"! Reset and Clock Control","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":234225,"byte_end":234252,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":562},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":234430,"byte_end":234436,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"RccExt","qualname":"::rcc::RccExt","value":"RccExt","parent":null,"children":[{"krate":0,"index":563}],"decl_id":null,"docs":" Extension trait that constrains the `RCC` peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait that constrains the `RCC` peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":234363,"byte_end":234419,"line_start":11,"line_end":11,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":234533,"byte_end":234542,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"constrain","qualname":"::rcc::RccExt::constrain","value":"fn (self) -> Rcc","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" Constrains the `RCC` peripheral so it plays nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the `RCC` peripheral so it plays nicely with the other abstractions","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":234443,"byte_end":234525,"line_start":13,"line_end":13,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":566},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":234975,"byte_end":234978,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"Rcc","qualname":"::rcc::Rcc","value":"Rcc { ahb, apb1, apb2, cfgr }","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570}],"decl_id":null,"docs":" Constrained RCC peripheral\n","sig":null,"attributes":[{"value":"/ Constrained RCC peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":234933,"byte_end":234963,"line_start":34,"line_end":34,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":567},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235039,"byte_end":235042,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"name":"ahb","qualname":"::rcc::Rcc::ahb","value":"rcc::AHB","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" AMBA High-performance Bus (AHB) registers\n","sig":null,"attributes":[{"value":"/ AMBA High-performance Bus (AHB) registers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":234985,"byte_end":235030,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":568},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235108,"byte_end":235112,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"apb1","qualname":"::rcc::Rcc::apb1","value":"rcc::APB1","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Advanced Peripheral Bus 1 (APB1) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 1 (APB1) registers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235053,"byte_end":235099,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":569},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235179,"byte_end":235183,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"apb2","qualname":"::rcc::Rcc::apb2","value":"rcc::APB2","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Advanced Peripheral Bus 2 (APB2) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 2 (APB2) registers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235124,"byte_end":235170,"line_start":40,"line_end":40,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":570},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235227,"byte_end":235231,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"name":"cfgr","qualname":"::rcc::Rcc::cfgr","value":"rcc::CFGR","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Clock configuration\n","sig":null,"attributes":[{"value":"/ Clock configuration","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235195,"byte_end":235218,"line_start":42,"line_end":42,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":571},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235299,"byte_end":235302,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"AHB","qualname":"::rcc::AHB","value":"AHB {  }","parent":null,"children":[{"krate":0,"index":572}],"decl_id":null,"docs":" AMBA High-performance Bus (AHB) registers\n","sig":null,"attributes":[{"value":"/ AMBA High-performance Bus (AHB) registers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235242,"byte_end":235287,"line_start":46,"line_end":46,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":576},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235744,"byte_end":235748,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"APB1","qualname":"::rcc::APB1","value":"APB1 {  }","parent":null,"children":[{"krate":0,"index":577}],"decl_id":null,"docs":" Advanced Peripheral Bus 1 (APB1) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 1 (APB1) registers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235686,"byte_end":235732,"line_start":63,"line_end":63,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":581},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":236195,"byte_end":236199,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"APB2","qualname":"::rcc::APB2","value":"APB2 {  }","parent":null,"children":[{"krate":0,"index":582}],"decl_id":null,"docs":" Advanced Peripheral Bus 2 (APB2) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 2 (APB2) registers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":236137,"byte_end":236183,"line_start":80,"line_end":80,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":238515,"byte_end":238519,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"CFGR","qualname":"::rcc::CFGR","value":"CFGR {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597}],"decl_id":null,"docs":" Clock configuration\n","sig":null,"attributes":[{"value":"/ Clock configuration","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":238480,"byte_end":238503,"line_start":160,"line_end":160,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":240767,"byte_end":240774,"line_start":235,"line_end":235,"column_start":12,"column_end":19},"name":"use_hse","qualname":"<CFGR>::use_hse","value":"fn <F> (mut self, freq: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Uses HSE (external oscillator) instead of HSI (internal RC oscillator) as the clock source.\n Will result in a hang if an external oscillator is not connected or it fails to start.\n","sig":null,"attributes":[{"value":"/ Uses HSE (external oscillator) instead of HSI (internal RC oscillator) as the clock source.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":240565,"byte_end":240660,"line_start":233,"line_end":233,"column_start":5,"column_end":100}},{"value":"/ Will result in a hang if an external oscillator is not connected or it fails to start.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":240665,"byte_end":240755,"line_start":234,"line_end":234,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":240957,"byte_end":240961,"line_start":244,"line_end":244,"column_start":12,"column_end":16},"name":"hclk","qualname":"<CFGR>::hclk","value":"fn <F> (mut self, freq: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a frequency for the AHB bus\n","sig":null,"attributes":[{"value":"/ Sets a frequency for the AHB bus","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":240909,"byte_end":240945,"line_start":243,"line_end":243,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":241146,"byte_end":241151,"line_start":253,"line_end":253,"column_start":12,"column_end":17},"name":"pclk1","qualname":"<CFGR>::pclk1","value":"fn <F> (mut self, freq: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a frequency for the APB1 bus\n","sig":null,"attributes":[{"value":"/ Sets a frequency for the APB1 bus","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":241097,"byte_end":241134,"line_start":252,"line_end":252,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":241337,"byte_end":241342,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"pclk2","qualname":"<CFGR>::pclk2","value":"fn <F> (mut self, freq: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a frequency for the APB2 bus\n","sig":null,"attributes":[{"value":"/ Sets a frequency for the APB2 bus","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":241288,"byte_end":241325,"line_start":261,"line_end":261,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":241527,"byte_end":241533,"line_start":271,"line_end":271,"column_start":12,"column_end":18},"name":"sysclk","qualname":"<CFGR>::sysclk","value":"fn <F> (mut self, freq: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the system (core) frequency\n","sig":null,"attributes":[{"value":"/ Sets the system (core) frequency","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":241479,"byte_end":241515,"line_start":270,"line_end":270,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":249088,"byte_end":249094,"line_start":461,"line_end":461,"column_start":12,"column_end":18},"name":"freeze","qualname":"<CFGR>::freeze","value":"fn (self, acr: &mut ACR) -> Clocks","parent":null,"children":[],"decl_id":null,"docs":" Freezes the clock configuration, making it effective\n","sig":null,"attributes":[{"value":"/ Freezes the clock configuration, making it effective","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":249020,"byte_end":249076,"line_start":460,"line_end":460,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":11742},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253066,"byte_end":253072,"line_start":587,"line_end":587,"column_start":12,"column_end":18},"name":"Clocks","qualname":"::rcc::Clocks","value":"Clocks {  }","parent":null,"children":[{"krate":0,"index":11743},{"krate":0,"index":11744},{"krate":0,"index":11745},{"krate":0,"index":11746},{"krate":0,"index":11747},{"krate":0,"index":11748},{"krate":0,"index":11749}],"decl_id":null,"docs":" Frozen clock frequencies","sig":null,"attributes":[{"value":"/ Frozen clock frequencies","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":252903,"byte_end":252931,"line_start":583,"line_end":583,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":252932,"byte_end":252935,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ The existence of this value indicates that the clock configuration can no longer be changed","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":252936,"byte_end":253031,"line_start":585,"line_end":585,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253270,"byte_end":253274,"line_start":599,"line_end":599,"column_start":12,"column_end":16},"name":"hclk","qualname":"<Clocks>::hclk","value":"fn (&self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the AHB\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the AHB","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253222,"byte_end":253258,"line_start":598,"line_end":598,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253371,"byte_end":253376,"line_start":604,"line_end":604,"column_start":12,"column_end":17},"name":"pclk1","qualname":"<Clocks>::pclk1","value":"fn (&self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB1\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB1","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253322,"byte_end":253359,"line_start":603,"line_end":603,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253474,"byte_end":253479,"line_start":609,"line_end":609,"column_start":12,"column_end":17},"name":"pclk2","qualname":"<Clocks>::pclk2","value":"fn (&self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB2\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB2","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253425,"byte_end":253462,"line_start":608,"line_end":608,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253760,"byte_end":253766,"line_start":624,"line_end":624,"column_start":12,"column_end":18},"name":"sysclk","qualname":"<Clocks>::sysclk","value":"fn (&self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the system (core) frequency\n","sig":null,"attributes":[{"value":"/ Returns the system (core) frequency","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253709,"byte_end":253748,"line_start":623,"line_end":623,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253906,"byte_end":253918,"line_start":629,"line_end":629,"column_start":12,"column_end":24},"name":"usbclk_valid","qualname":"<Clocks>::usbclk_valid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the USBCLK clock frequency is valid for the USB peripheral\n","sig":null,"attributes":[{"value":"/ Returns whether the USBCLK clock frequency is valid for the USB peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253816,"byte_end":253894,"line_start":628,"line_end":628,"column_start":5,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":637},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serial","qualname":"::serial","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":656},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":11753},{"krate":0,"index":11764},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":11766},{"krate":0,"index":11783},{"krate":0,"index":11790},{"krate":0,"index":11794},{"krate":0,"index":11795},{"krate":0,"index":11799},{"krate":0,"index":11803},{"krate":0,"index":11810},{"krate":0,"index":11817},{"krate":0,"index":11834},{"krate":0,"index":11841},{"krate":0,"index":11845},{"krate":0,"index":11846},{"krate":0,"index":11850},{"krate":0,"index":11854},{"krate":0,"index":11861},{"krate":0,"index":11868},{"krate":0,"index":11885},{"krate":0,"index":11892},{"krate":0,"index":11896},{"krate":0,"index":11897},{"krate":0,"index":11901},{"krate":0,"index":11905},{"krate":0,"index":11912}],"decl_id":null,"docs":" Serial\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3394,"byte_end":3429,"line_start":129,"line_end":129,"column_start":1,"column_end":36}},{"value":"! Serial","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":253971,"byte_end":253981,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":665},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255045,"byte_end":255049,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Rxne","qualname":"::serial::Event::Rxne","value":"Event::Rxne","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" New data has been received\n","sig":null,"attributes":[{"value":"/ New data has been received","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255010,"byte_end":255040,"line_start":47,"line_end":47,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":667},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255084,"byte_end":255087,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Txe","qualname":"::serial::Event::Txe","value":"Event::Txe","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" New data can be sent\n","sig":null,"attributes":[{"value":"/ New data can be sent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255055,"byte_end":255079,"line_start":49,"line_end":49,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":664},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":254998,"byte_end":255003,"line_start":46,"line_end":46,"column_start":10,"column_end":15},"name":"Event","qualname":"::serial::Event","value":"Event::{Rxne, Txe}","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":667}],"decl_id":null,"docs":" Interrupt event\n","sig":null,"attributes":[{"value":"/ Interrupt event","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":254969,"byte_end":254988,"line_start":45,"line_end":45,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11754},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255169,"byte_end":255176,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Framing","qualname":"::serial::Error::Framing","value":"Error::Framing","parent":{"krate":0,"index":11753},"children":[],"decl_id":null,"docs":" Framing error\n","sig":null,"attributes":[{"value":"/ Framing error","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255147,"byte_end":255164,"line_start":56,"line_end":56,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11756},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255202,"byte_end":255207,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"name":"Noise","qualname":"::serial::Error::Noise","value":"Error::Noise","parent":{"krate":0,"index":11753},"children":[],"decl_id":null,"docs":" Noise error\n","sig":null,"attributes":[{"value":"/ Noise error","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255182,"byte_end":255197,"line_start":58,"line_end":58,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11758},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255239,"byte_end":255246,"line_start":61,"line_end":61,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::serial::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":11753},"children":[],"decl_id":null,"docs":" RX buffer overrun\n","sig":null,"attributes":[{"value":"/ RX buffer overrun","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255213,"byte_end":255234,"line_start":60,"line_end":60,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11760},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255279,"byte_end":255285,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Parity","qualname":"::serial::Error::Parity","value":"Error::Parity","parent":{"krate":0,"index":11753},"children":[],"decl_id":null,"docs":" Parity check error\n","sig":null,"attributes":[{"value":"/ Parity check error","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255252,"byte_end":255274,"line_start":62,"line_end":62,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11762},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255310,"byte_end":255321,"line_start":65,"line_end":65,"column_start":5,"column_end":16},"name":"_Extensible","qualname":"::serial::Error::_Extensible","value":"Error::_Extensible","parent":{"krate":0,"index":11753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11753},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255135,"byte_end":255140,"line_start":55,"line_end":55,"column_start":10,"column_end":15},"name":"Error","qualname":"::serial::Error","value":"Error::{Framing, Noise, Overrun, Parity, _Extensible}","parent":null,"children":[{"krate":0,"index":11754},{"krate":0,"index":11756},{"krate":0,"index":11758},{"krate":0,"index":11760},{"krate":0,"index":11762}],"decl_id":null,"docs":" Serial error\n","sig":null,"attributes":[{"value":"/ Serial error","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255092,"byte_end":255108,"line_start":53,"line_end":53,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":669},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255425,"byte_end":255430,"line_start":70,"line_end":70,"column_start":18,"column_end":23},"name":"TxPin","qualname":"::serial::TxPin","value":"TxPin<USART>","parent":null,"children":[],"decl_id":null,"docs":" TX pin - DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ TX pin - DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255367,"byte_end":255407,"line_start":69,"line_end":69,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":671},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255500,"byte_end":255505,"line_start":73,"line_end":73,"column_start":18,"column_end":23},"name":"RxPin","qualname":"::serial::RxPin","value":"RxPin<USART>","parent":null,"children":[],"decl_id":null,"docs":" RX pin - DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ RX pin - DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255442,"byte_end":255482,"line_start":72,"line_end":72,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":692},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259086,"byte_end":259092,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"Serial","qualname":"::serial::Serial","value":"Serial {  }","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"decl_id":null,"docs":" Serial abstraction\n","sig":null,"attributes":[{"value":"/ Serial abstraction","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259052,"byte_end":259074,"line_start":202,"line_end":202,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":697},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259176,"byte_end":259178,"line_start":209,"line_end":209,"column_start":12,"column_end":14},"name":"Rx","qualname":"::serial::Rx","value":"Rx {  }","parent":null,"children":[{"krate":0,"index":699}],"decl_id":null,"docs":" Serial receiver\n","sig":null,"attributes":[{"value":"/ Serial receiver","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259145,"byte_end":259164,"line_start":208,"line_end":208,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259257,"byte_end":259259,"line_start":214,"line_end":214,"column_start":12,"column_end":14},"name":"Tx","qualname":"::serial::Tx","value":"Tx {  }","parent":null,"children":[{"krate":0,"index":702}],"decl_id":null,"docs":" Serial transmitter\n","sig":null,"attributes":[{"value":"/ Serial transmitter","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259223,"byte_end":259245,"line_start":213,"line_end":213,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":11769},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":269095,"byte_end":269101,"line_start":461,"line_end":461,"column_start":14,"column_end":20},"name":"usart1","qualname":"<Serial<USART1, (TX, RX)>>::usart1","value":"fn (usart: USART1, pins: (TX, RX), baud_rate: Bps, clocks: Clocks, apb: &mut APB2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a USART peripheral to provide serial communication\n","sig":null,"attributes":[{"value":"/ Configures a USART peripheral to provide serial communication","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259525,"byte_end":259590,"line_start":224,"line_end":224,"column_start":17,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":11820},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":269151,"byte_end":269157,"line_start":462,"line_end":462,"column_start":14,"column_end":20},"name":"usart2","qualname":"<Serial<USART2, (TX, RX)>>::usart2","value":"fn (usart: USART2, pins: (TX, RX), baud_rate: Bps, clocks: Clocks, apb: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a USART peripheral to provide serial communication\n","sig":null,"attributes":[{"value":"/ Configures a USART peripheral to provide serial communication","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259525,"byte_end":259590,"line_start":224,"line_end":224,"column_start":17,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":11871},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":269207,"byte_end":269213,"line_start":463,"line_end":463,"column_start":14,"column_end":20},"name":"usart3","qualname":"<Serial<USART3, (TX, RX)>>::usart3","value":"fn (usart: USART3, pins: (TX, RX), baud_rate: Bps, clocks: Clocks, apb: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a USART peripheral to provide serial communication\n","sig":null,"attributes":[{"value":"/ Configures a USART peripheral to provide serial communication","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259525,"byte_end":259590,"line_start":224,"line_end":224,"column_start":17,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":704},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spi","qualname":"::spi","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":711},{"krate":0,"index":715},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":724},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":11919},{"krate":0,"index":11928},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":757},{"krate":0,"index":11930},{"krate":0,"index":11942},{"krate":0,"index":11947},{"krate":0,"index":11949},{"krate":0,"index":11951},{"krate":0,"index":11963},{"krate":0,"index":11968},{"krate":0,"index":11970},{"krate":0,"index":11972},{"krate":0,"index":11984},{"krate":0,"index":11989},{"krate":0,"index":11991}],"decl_id":null,"docs":" Serial Peripheral Interface (SPI) bus\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3446,"byte_end":3481,"line_start":131,"line_end":131,"column_start":1,"column_end":36}},{"value":"! Serial Peripheral Interface (SPI) bus","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":269433,"byte_end":269474,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11920},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270686,"byte_end":270693,"line_start":54,"line_end":54,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::spi::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":11919},"children":[],"decl_id":null,"docs":" Overrun occurred\n","sig":null,"attributes":[{"value":"/ Overrun occurred","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270661,"byte_end":270681,"line_start":53,"line_end":53,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11922},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270727,"byte_end":270736,"line_start":56,"line_end":56,"column_start":5,"column_end":14},"name":"ModeFault","qualname":"::spi::Error::ModeFault","value":"Error::ModeFault","parent":{"krate":0,"index":11919},"children":[],"decl_id":null,"docs":" Mode fault occurred\n","sig":null,"attributes":[{"value":"/ Mode fault occurred","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270699,"byte_end":270722,"line_start":55,"line_end":55,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11924},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270760,"byte_end":270763,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"Crc","qualname":"::spi::Error::Crc","value":"Error::Crc","parent":{"krate":0,"index":11919},"children":[],"decl_id":null,"docs":" CRC error\n","sig":null,"attributes":[{"value":"/ CRC error","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270742,"byte_end":270755,"line_start":57,"line_end":57,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11926},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270788,"byte_end":270799,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"_Extensible","qualname":"::spi::Error::_Extensible","value":"Error::_Extensible","parent":{"krate":0,"index":11919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11919},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270649,"byte_end":270654,"line_start":52,"line_end":52,"column_start":10,"column_end":15},"name":"Error","qualname":"::spi::Error","value":"Error::{Overrun, ModeFault, Crc, _Extensible}","parent":null,"children":[{"krate":0,"index":11920},{"krate":0,"index":11922},{"krate":0,"index":11924},{"krate":0,"index":11926}],"decl_id":null,"docs":" SPI error\n","sig":null,"attributes":[{"value":"/ SPI error","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270609,"byte_end":270622,"line_start":50,"line_end":50,"column_start":1,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":735},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270905,"byte_end":270911,"line_start":65,"line_end":65,"column_start":18,"column_end":24},"name":"SckPin","qualname":"::spi::SckPin","value":"SckPin<SPI>","parent":null,"children":[],"decl_id":null,"docs":" SCK pin -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ SCK pin -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270845,"byte_end":270887,"line_start":64,"line_end":64,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":737},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270982,"byte_end":270989,"line_start":68,"line_end":68,"column_start":18,"column_end":25},"name":"MisoPin","qualname":"::spi::MisoPin","value":"MisoPin<SPI>","parent":null,"children":[],"decl_id":null,"docs":" MISO pin -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ MISO pin -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270921,"byte_end":270964,"line_start":67,"line_end":67,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":739},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271060,"byte_end":271067,"line_start":71,"line_end":71,"column_start":18,"column_end":25},"name":"MosiPin","qualname":"::spi::MosiPin","value":"MosiPin<SPI>","parent":null,"children":[],"decl_id":null,"docs":" MOSI pin -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ MOSI pin -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":270999,"byte_end":271042,"line_start":70,"line_end":70,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":272026,"byte_end":272029,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"Spi","qualname":"::spi::Spi","value":"Spi {  }","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756}],"decl_id":null,"docs":" SPI peripheral operating in full duplex master mode\n","sig":null,"attributes":[{"value":"/ SPI peripheral operating in full duplex master mode","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271959,"byte_end":272014,"line_start":107,"line_end":107,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":11934},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":278346,"byte_end":278350,"line_start":271,"line_end":271,"column_start":12,"column_end":16},"name":"spi1","qualname":"<Spi<SPI1, (SCK, MISO, MOSI)>>::spi1","value":"fn <F> (spi: SPI1, pins: (SCK, MISO, MOSI), mode: Mode, freq: F, clocks: Clocks, apb2: &mut APB2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the SPI peripheral to operate in full duplex master mode\n","sig":null,"attributes":[{"value":"/ Configures the SPI peripheral to operate in full duplex master mode","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":272289,"byte_end":272360,"line_start":117,"line_end":117,"column_start":17,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":11955},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":278394,"byte_end":278398,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"spi2","qualname":"<Spi<SPI2, (SCK, MISO, MOSI)>>::spi2","value":"fn <F> (spi: SPI2, pins: (SCK, MISO, MOSI), mode: Mode, freq: F, clocks: Clocks, apb2: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the SPI peripheral to operate in full duplex master mode\n","sig":null,"attributes":[{"value":"/ Configures the SPI peripheral to operate in full duplex master mode","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":272289,"byte_end":272360,"line_start":117,"line_end":117,"column_start":17,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":11976},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":278442,"byte_end":278446,"line_start":273,"line_end":273,"column_start":12,"column_end":16},"name":"spi3","qualname":"<Spi<SPI3, (SCK, MISO, MOSI)>>::spi3","value":"fn <F> (spi: SPI3, pins: (SCK, MISO, MOSI), mode: Mode, freq: F, clocks: Clocks, apb2: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the SPI peripheral to operate in full duplex master mode\n","sig":null,"attributes":[{"value":"/ Configures the SPI peripheral to operate in full duplex master mode","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":272289,"byte_end":272360,"line_start":117,"line_end":117,"column_start":17,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":758},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":11993},{"krate":0,"index":11997},{"krate":0,"index":11996},{"krate":0,"index":11999},{"krate":0,"index":12003},{"krate":0,"index":12002},{"krate":0,"index":12005},{"krate":0,"index":12009},{"krate":0,"index":12008},{"krate":0,"index":12011},{"krate":0,"index":12015},{"krate":0,"index":12014},{"krate":0,"index":12017},{"krate":0,"index":12029},{"krate":0,"index":12030},{"krate":0,"index":12023},{"krate":0,"index":12021},{"krate":0,"index":12020},{"krate":0,"index":761},{"krate":0,"index":767},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":12033},{"krate":0,"index":12036},{"krate":0,"index":12035},{"krate":0,"index":779},{"krate":0,"index":12038},{"krate":0,"index":12041},{"krate":0,"index":12040},{"krate":0,"index":783}],"decl_id":null,"docs":" Time units\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3495,"byte_end":3530,"line_start":133,"line_end":133,"column_start":1,"column_end":36}},{"value":"! Time units","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":279937,"byte_end":279951,"line_start":1,"line_end":1,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11993},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280064,"byte_end":280067,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Bps","qualname":"::time::Bps","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bits per second\n","sig":null,"attributes":[{"value":"/ Bits per second","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280010,"byte_end":280029,"line_start":7,"line_end":7,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11999},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280123,"byte_end":280128,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Hertz","qualname":"::time::Hertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hertz\n","sig":null,"attributes":[{"value":"/ Hertz","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280079,"byte_end":280088,"line_start":11,"line_end":11,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":12005},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280188,"byte_end":280197,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"KiloHertz","qualname":"::time::KiloHertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" KiloHertz\n","sig":null,"attributes":[{"value":"/ KiloHertz","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280140,"byte_end":280153,"line_start":15,"line_end":15,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":12011},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280257,"byte_end":280266,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"MegaHertz","qualname":"::time::MegaHertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" MegaHertz\n","sig":null,"attributes":[{"value":"/ MegaHertz","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280209,"byte_end":280222,"line_start":19,"line_end":19,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":12017},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280349,"byte_end":280361,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"MilliSeconds","qualname":"::time::MilliSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Time unit\n","sig":null,"attributes":[{"value":"/ Time unit","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280278,"byte_end":280291,"line_start":23,"line_end":23,"column_start":1,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":761},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280451,"byte_end":280457,"line_start":28,"line_end":28,"column_start":11,"column_end":17},"name":"U32Ext","qualname":"::time::U32Ext","value":"U32Ext","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766}],"decl_id":null,"docs":" Extension trait that adds convenience methods to the `u32` type\n","sig":null,"attributes":[{"value":"/ Extension trait that adds convenience methods to the `u32` type","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280373,"byte_end":280440,"line_start":27,"line_end":27,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280489,"byte_end":280492,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"bps","qualname":"::time::U32Ext::bps","value":"fn (self) -> Bps","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":" Wrap in `Bps`\n","sig":null,"attributes":[{"value":"/ Wrap in `Bps`","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280464,"byte_end":280481,"line_start":29,"line_end":29,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280539,"byte_end":280541,"line_start":33,"line_end":33,"column_start":8,"column_end":10},"name":"hz","qualname":"::time::U32Ext::hz","value":"fn (self) -> Hertz","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":" Wrap in `Hertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `Hertz`","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280512,"byte_end":280531,"line_start":32,"line_end":32,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280594,"byte_end":280597,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"khz","qualname":"::time::U32Ext::khz","value":"fn (self) -> KiloHertz","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":" Wrap in `KiloHertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `KiloHertz`","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280563,"byte_end":280586,"line_start":35,"line_end":35,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280654,"byte_end":280657,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"mhz","qualname":"::time::U32Ext::mhz","value":"fn (self) -> MegaHertz","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":" Wrap in `MegaHertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `MegaHertz`","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280623,"byte_end":280646,"line_start":38,"line_end":38,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280717,"byte_end":280719,"line_start":42,"line_end":42,"column_start":8,"column_end":10},"name":"ms","qualname":"::time::U32Ext::ms","value":"fn (self) -> MilliSeconds","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":" Wrap in `MilliSeconds`\n","sig":null,"attributes":[{"value":"/ Wrap in `MilliSeconds`","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":280683,"byte_end":280709,"line_start":41,"line_end":41,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":12033},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281471,"byte_end":281480,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"MonoTimer","qualname":"::time::MonoTimer","value":"MonoTimer {  }","parent":null,"children":[{"krate":0,"index":12034}],"decl_id":null,"docs":" A monotonic nondecreasing timer\n","sig":null,"attributes":[{"value":"/ A monotonic nondecreasing timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281401,"byte_end":281436,"line_start":85,"line_end":85,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281576,"byte_end":281579,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<MonoTimer>::new","value":"fn (mut dwt: DWT, clocks: Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Monotonic` timer\n","sig":null,"attributes":[{"value":"/ Creates a new `Monotonic` timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281529,"byte_end":281564,"line_start":92,"line_end":92,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281901,"byte_end":281910,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"frequency","qualname":"<MonoTimer>::frequency","value":"fn (self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency at which the monotonic timer is operating at\n","sig":null,"attributes":[{"value":"/ Returns the frequency at which the monotonic timer is operating at","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281819,"byte_end":281889,"line_start":104,"line_end":104,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":282021,"byte_end":282024,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"now","qualname":"<MonoTimer>::now","value":"fn (self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\"\n","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\"","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281962,"byte_end":282009,"line_start":109,"line_end":109,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":12038},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":282213,"byte_end":282220,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":12039}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock\n","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":282122,"byte_end":282178,"line_start":117,"line_end":117,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":282320,"byte_end":282327,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"fn (self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Ticks elapsed since the `Instant` was created\n","sig":null,"attributes":[{"value":"/ Ticks elapsed since the `Instant` was created","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":282259,"byte_end":282308,"line_start":124,"line_end":124,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":785},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":12043},{"krate":0,"index":12045},{"krate":0,"index":12046},{"krate":0,"index":12055},{"krate":0,"index":12070},{"krate":0,"index":12072},{"krate":0,"index":12073},{"krate":0,"index":12082},{"krate":0,"index":12097},{"krate":0,"index":12099},{"krate":0,"index":12100},{"krate":0,"index":12109},{"krate":0,"index":12124},{"krate":0,"index":12126},{"krate":0,"index":12127},{"krate":0,"index":12136},{"krate":0,"index":12151},{"krate":0,"index":12153},{"krate":0,"index":12154},{"krate":0,"index":12163},{"krate":0,"index":12178},{"krate":0,"index":12180},{"krate":0,"index":12181},{"krate":0,"index":12190},{"krate":0,"index":12205},{"krate":0,"index":12207},{"krate":0,"index":12208},{"krate":0,"index":12217},{"krate":0,"index":12232},{"krate":0,"index":12234},{"krate":0,"index":12235},{"krate":0,"index":12244},{"krate":0,"index":12259},{"krate":0,"index":12261},{"krate":0,"index":12262},{"krate":0,"index":12271},{"krate":0,"index":12286},{"krate":0,"index":12288},{"krate":0,"index":12289},{"krate":0,"index":12298},{"krate":0,"index":12313},{"krate":0,"index":12315},{"krate":0,"index":12316},{"krate":0,"index":12325}],"decl_id":null,"docs":" Timers\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3545,"byte_end":3580,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"! Timers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":282406,"byte_end":282416,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":811},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":283753,"byte_end":283760,"line_start":59,"line_end":59,"column_start":11,"column_end":18},"name":"PclkSrc","qualname":"::timer::PclkSrc","value":"PclkSrc","parent":null,"children":[{"krate":0,"index":812}],"decl_id":null,"docs":" Associated clocks with timers\n","sig":null,"attributes":[{"value":"/ Associated clocks with timers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":283709,"byte_end":283742,"line_start":58,"line_end":58,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":283770,"byte_end":283777,"line_start":60,"line_end":60,"column_start":8,"column_end":15},"name":"get_clk","qualname":"::timer::PclkSrc::get_clk","value":"fn (clocks: &Clocks) -> Hertz","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":813},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":283839,"byte_end":283844,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"Timer","qualname":"::timer::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"decl_id":null,"docs":" Hardware timers\n","sig":null,"attributes":[{"value":"/ Hardware timers","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":283808,"byte_end":283827,"line_start":63,"line_end":63,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":818},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":283974,"byte_end":283980,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"Update","qualname":"::timer::Event::Update","value":"Event::Update","parent":{"krate":0,"index":817},"children":[],"decl_id":null,"docs":" Timer timed out / count down ended\n","sig":null,"attributes":[{"value":"/ Timer timed out / count down ended","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":283931,"byte_end":283969,"line_start":71,"line_end":71,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":817},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":283919,"byte_end":283924,"line_start":70,"line_end":70,"column_start":10,"column_end":15},"name":"Event","qualname":"::timer::Event","value":"Event::{Update}","parent":null,"children":[{"krate":0,"index":818}],"decl_id":null,"docs":" Interrupt events\n","sig":null,"attributes":[{"value":"/ Interrupt events","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":283889,"byte_end":283909,"line_start":69,"line_end":69,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":12056},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":289255,"byte_end":289259,"line_start":245,"line_end":245,"column_start":16,"column_end":20},"name":"tim1","qualname":"<Timer<TIM1>>::tim1","value":"fn <T> (tim: TIM1, timeout: T, clocks: Clocks, apb2: &mut APB2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":12083},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":289336,"byte_end":289340,"line_start":249,"line_end":249,"column_start":16,"column_end":20},"name":"tim2","qualname":"<Timer<TIM2>>::tim2","value":"fn <T> (tim: TIM2, timeout: T, clocks: Clocks, apb1: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":12110},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":289417,"byte_end":289421,"line_start":253,"line_end":253,"column_start":16,"column_end":20},"name":"tim3","qualname":"<Timer<TIM3>>::tim3","value":"fn <T> (tim: TIM3, timeout: T, clocks: Clocks, apb1: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":12137},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":289498,"byte_end":289502,"line_start":257,"line_end":257,"column_start":16,"column_end":20},"name":"tim4","qualname":"<Timer<TIM4>>::tim4","value":"fn <T> (tim: TIM4, timeout: T, clocks: Clocks, apb1: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":12164},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":289579,"byte_end":289583,"line_start":261,"line_end":261,"column_start":16,"column_end":20},"name":"tim6","qualname":"<Timer<TIM6>>::tim6","value":"fn <T> (tim: TIM6, timeout: T, clocks: Clocks, apb1: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":12191},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":289660,"byte_end":289664,"line_start":265,"line_end":265,"column_start":16,"column_end":20},"name":"tim7","qualname":"<Timer<TIM7>>::tim7","value":"fn <T> (tim: TIM7, timeout: T, clocks: Clocks, apb1: &mut APB1) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":12218},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":289741,"byte_end":289745,"line_start":269,"line_end":269,"column_start":16,"column_end":20},"name":"tim8","qualname":"<Timer<TIM8>>::tim8","value":"fn <T> (tim: TIM8, timeout: T, clocks: Clocks, apb2: &mut APB2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":12245},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":289823,"byte_end":289828,"line_start":273,"line_end":273,"column_start":17,"column_end":22},"name":"tim15","qualname":"<Timer<TIM15>>::tim15","value":"fn <T> (tim: TIM15, timeout: T, clocks: Clocks, apb2: &mut APB2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":12272},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":289908,"byte_end":289913,"line_start":277,"line_end":277,"column_start":17,"column_end":22},"name":"tim16","qualname":"<Timer<TIM16>>::tim16","value":"fn <T> (tim: TIM16, timeout: T, clocks: Clocks, apb2: &mut APB2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":12299},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":289993,"byte_end":289998,"line_start":281,"line_end":281,"column_start":17,"column_end":22},"name":"tim17","qualname":"<Timer<TIM17>>::tim17","value":"fn <T> (tim: TIM17, timeout: T, clocks: Clocks, apb2: &mut APB2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":12326},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":290078,"byte_end":290083,"line_start":285,"line_end":285,"column_start":17,"column_end":22},"name":"tim20","qualname":"<Timer<TIM20>>::tim20","value":"fn <T> (tim: TIM20, timeout: T, clocks: Clocks, apb2: &mut APB2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/timer.rs","byte_start":286312,"byte_end":286374,"line_start":136,"line_end":136,"column_start":17,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":821},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"usb","qualname":"::usb","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":847}],"decl_id":null,"docs":" USB peripheral","sig":null,"attributes":[{"value":"cfg(all(feature = \"stm32-usbd\",\n          any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n              \"stm32f303xd\", feature = \"stm32f303xe\",)))","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3596,"byte_end":3785,"line_start":137,"line_end":145,"column_start":1,"column_end":4}},{"value":"! USB peripheral","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293076,"byte_end":293094,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293095,"byte_end":293098,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Requires the `stm32-usbd` feature and one of the `stm32f303x*` features.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293099,"byte_end":293175,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293176,"byte_end":293179,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! See <https://github.com/stm32-rs/stm32f3xx-hal/tree/master/examples>","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293180,"byte_end":293252,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"! for usage examples.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293253,"byte_end":293276,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":831},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293439,"byte_end":293449,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"Peripheral","qualname":"::usb::Peripheral","value":"Peripheral { usb, pin_dm, pin_dp }","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":832},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293460,"byte_end":293463,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"name":"usb","qualname":"::usb::Peripheral::usb","value":"stm32f3::stm32f303::USB","parent":{"krate":0,"index":831},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":833},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293478,"byte_end":293484,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"pin_dm","qualname":"::usb::Peripheral::pin_dm","value":"gpio::gpioa::PA11<gpio::AF14>","parent":{"krate":0,"index":831},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":834},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293506,"byte_end":293512,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"name":"pin_dp","qualname":"::usb::Peripheral::pin_dp","value":"gpio::gpioa::PA12<gpio::AF14>","parent":{"krate":0,"index":831},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":847},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":294562,"byte_end":294572,"line_start":52,"line_end":52,"column_start":10,"column_end":20},"name":"UsbBusType","qualname":"::usb::UsbBusType","value":"UsbBus<Peripheral>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":848},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watchdog","qualname":"::watchdog","value":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":877},{"krate":0,"index":882}],"decl_id":null,"docs":" Watchdog\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3800,"byte_end":3835,"line_start":148,"line_end":148,"column_start":1,"column_end":36}},{"value":"! Watchdog","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":294596,"byte_end":294608,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":859},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":294816,"byte_end":294835,"line_start":12,"line_end":12,"column_start":12,"column_end":31},"name":"IndependentWatchDog","qualname":"::watchdog::IndependentWatchDog","value":"IndependentWatchDog {  }","parent":null,"children":[{"krate":0,"index":860}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":295047,"byte_end":295050,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<IndependentWatchDog>::new","value":"fn (iwdg: IWDG) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `IndependentWatchDog` without starting it. Call `start` to start the watchdog. See `WatchdogEnable` and `Watchdog` for more info.\n","sig":null,"attributes":[{"value":"/ Creates a new `IndependentWatchDog` without starting it. Call `start` to start the watchdog. See `WatchdogEnable` and `Watchdog` for more info.","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":294888,"byte_end":295035,"line_start":17,"line_end":17,"column_start":5,"column_end":152}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":295202,"byte_end":295215,"line_start":23,"line_end":23,"column_start":12,"column_end":25},"name":"stop_on_debug","qualname":"<IndependentWatchDog>::stop_on_debug","value":"fn (&self, dbg: &DBGMCU, stop: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the watchdog to stop when a breakpoint is hit while debugging\n","sig":null,"attributes":[{"value":"/ Set the watchdog to stop when a breakpoint is hit while debugging","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":295121,"byte_end":295190,"line_start":22,"line_end":22,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":295961,"byte_end":295969,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"interval","qualname":"<IndependentWatchDog>::interval","value":"fn (&self) -> MilliSeconds","parent":null,"children":[],"decl_id":null,"docs":" Returns the interval in ms\n","sig":null,"attributes":[{"value":"/ Returns the interval in ms","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":295919,"byte_end":295949,"line_start":47,"line_end":47,"column_start":5,"column_end":35}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5284,"byte_end":5294,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5399,"byte_end":5409,"line_start":66,"line_end":66,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6177,"byte_end":6183,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6344,"byte_end":6352,"line_start":106,"line_end":106,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6820,"byte_end":6825,"line_start":125,"line_end":125,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6906,"byte_end":6913,"line_start":131,"line_end":131,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21356,"byte_end":21361,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21712,"byte_end":21717,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21824,"byte_end":21829,"line_start":36,"line_end":36,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21932,"byte_end":21937,"line_start":42,"line_end":42,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":22040,"byte_end":22045,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":22401,"byte_end":22406,"line_start":64,"line_end":64,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":22508,"byte_end":22513,"line_start":70,"line_end":70,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23753,"byte_end":23761,"line_start":44,"line_end":44,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":26936,"byte_end":26944,"line_start":143,"line_end":143,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27253,"byte_end":27266,"line_start":158,"line_end":158,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29702,"byte_end":29703,"line_start":231,"line_end":231,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29944,"byte_end":29945,"line_start":243,"line_end":243,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31754,"byte_end":31755,"line_start":306,"line_end":306,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31817,"byte_end":31818,"line_start":310,"line_end":310,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":33877,"byte_end":33888,"line_start":375,"line_end":375,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34082,"byte_end":34088,"line_start":387,"line_end":387,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34459,"byte_end":34463,"line_start":408,"line_end":408,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34922,"byte_end":34927,"line_start":427,"line_end":427,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45279,"byte_end":45284,"line_start":11,"line_end":11,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45551,"byte_end":45554,"line_start":30,"line_end":30,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171593,"byte_end":171596,"line_start":51,"line_end":51,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171634,"byte_end":171637,"line_start":52,"line_end":52,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171676,"byte_end":171679,"line_start":54,"line_end":54,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171717,"byte_end":171720,"line_start":55,"line_end":55,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172077,"byte_end":172080,"line_start":69,"line_end":69,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172164,"byte_end":172167,"line_start":72,"line_end":72,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172205,"byte_end":172208,"line_start":73,"line_end":73,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172247,"byte_end":172251,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172289,"byte_end":172292,"line_start":76,"line_end":76,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":234576,"byte_end":234579,"line_start":17,"line_end":17,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235325,"byte_end":235328,"line_start":51,"line_end":51,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235771,"byte_end":235775,"line_start":68,"line_end":68,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":236222,"byte_end":236226,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":240554,"byte_end":240558,"line_start":232,"line_end":232,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253209,"byte_end":253215,"line_start":597,"line_end":597,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255554,"byte_end":255557,"line_start":75,"line_end":75,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255603,"byte_end":255606,"line_start":76,"line_end":76,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255652,"byte_end":255655,"line_start":77,"line_end":77,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255993,"byte_end":255996,"line_start":90,"line_end":90,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":256043,"byte_end":256047,"line_start":92,"line_end":92,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":256093,"byte_end":256096,"line_start":93,"line_end":93,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":256142,"byte_end":256145,"line_start":94,"line_end":94,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":256483,"byte_end":256486,"line_start":107,"line_end":107,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":256533,"byte_end":256536,"line_start":109,"line_end":109,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257006,"byte_end":257009,"line_start":125,"line_end":125,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257056,"byte_end":257059,"line_start":127,"line_end":127,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257529,"byte_end":257532,"line_start":143,"line_end":143,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257579,"byte_end":257583,"line_start":145,"line_end":145,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257629,"byte_end":257633,"line_start":146,"line_end":146,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257998,"byte_end":258001,"line_start":160,"line_end":160,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":258278,"byte_end":258282,"line_start":172,"line_end":172,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":258328,"byte_end":258332,"line_start":173,"line_end":173,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":258697,"byte_end":258700,"line_start":187,"line_end":187,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259038,"byte_end":259042,"line_start":200,"line_end":200,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271106,"byte_end":271109,"line_start":73,"line_end":73,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271422,"byte_end":271426,"line_start":86,"line_end":86,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271509,"byte_end":271513,"line_start":89,"line_end":89,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271553,"byte_end":271556,"line_start":91,"line_end":91,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271641,"byte_end":271645,"line_start":94,"line_end":94,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271730,"byte_end":271734,"line_start":97,"line_end":97,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271774,"byte_end":271777,"line_start":99,"line_end":99,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271816,"byte_end":271819,"line_start":100,"line_end":100,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271859,"byte_end":271863,"line_start":102,"line_end":102,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271903,"byte_end":271906,"line_start":104,"line_end":104,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271945,"byte_end":271949,"line_start":105,"line_end":105,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281094,"byte_end":281099,"line_start":67,"line_end":67,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281202,"byte_end":281207,"line_start":73,"line_end":73,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281314,"byte_end":281323,"line_start":79,"line_end":79,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281513,"byte_end":281522,"line_start":91,"line_end":91,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":282245,"byte_end":282252,"line_start":123,"line_end":123,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293550,"byte_end":293560,"line_start":21,"line_end":21,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293595,"byte_end":293605,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":294862,"byte_end":294881,"line_start":16,"line_end":16,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":297026,"byte_end":297045,"line_start":86,"line_end":86,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":297251,"byte_end":297270,"line_start":96,"line_end":96,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":2994,"byte_end":2997,"line_start":112,"line_end":112,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3043,"byte_end":3048,"line_start":114,"line_end":114,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3088,"byte_end":3091,"line_start":116,"line_end":116,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":111}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3137,"byte_end":3142,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":289}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3188,"byte_end":3192,"line_start":120,"line_end":120,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":303}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3238,"byte_end":3241,"line_start":122,"line_end":122,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":365}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3287,"byte_end":3294,"line_start":124,"line_end":124,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":411}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3340,"byte_end":3343,"line_start":126,"line_end":126,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":423}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3389,"byte_end":3392,"line_start":128,"line_end":128,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":553}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3438,"byte_end":3444,"line_start":130,"line_end":130,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":637}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3490,"byte_end":3493,"line_start":132,"line_end":132,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":704}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3539,"byte_end":3543,"line_start":134,"line_end":134,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":758}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3589,"byte_end":3594,"line_start":136,"line_end":136,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":785}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3794,"byte_end":3797,"line_start":146,"line_end":146,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":821}},{"kind":"Mod","span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/lib.rs","byte_start":3844,"byte_end":3852,"line_start":149,"line_end":149,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":848}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5284,"byte_end":5294,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":47},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":5399,"byte_end":5409,"line_start":66,"line_end":66,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6177,"byte_end":6183,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":894},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6344,"byte_end":6352,"line_start":106,"line_end":106,"column_start":23,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":8,"index":62228},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6820,"byte_end":6825,"line_start":125,"line_end":125,"column_start":18,"column_end":23},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":72},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/adc.rs","byte_start":6906,"byte_end":6913,"line_start":131,"line_end":131,"column_start":22,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":8,"index":61754},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21356,"byte_end":21361,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21712,"byte_end":21717,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":93},"to":{"krate":4,"index":20}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21824,"byte_end":21829,"line_start":36,"line_end":36,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":93},"to":{"krate":4,"index":20}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":21932,"byte_end":21937,"line_start":42,"line_end":42,"column_start":22,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":93},"to":{"krate":4,"index":20}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":22040,"byte_end":22045,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":93},"to":{"krate":4,"index":23}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":22401,"byte_end":22406,"line_start":64,"line_end":64,"column_start":23,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":93},"to":{"krate":4,"index":23}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/delay.rs","byte_start":22508,"byte_end":22513,"line_start":70,"line_end":70,"column_start":22,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":93},"to":{"krate":4,"index":23}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":23753,"byte_end":23761,"line_start":44,"line_end":44,"column_start":32,"column_end":40},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":26936,"byte_end":26944,"line_start":143,"line_end":143,"column_start":41,"column_end":49},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":136},"to":{"krate":1,"index":2098}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":27253,"byte_end":27266,"line_start":158,"line_end":158,"column_start":32,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29702,"byte_end":29703,"line_start":231,"line_end":231,"column_start":34,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":175},"to":{"krate":0,"index":168}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":29944,"byte_end":29945,"line_start":243,"line_end":243,"column_start":35,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":180},"to":{"krate":0,"index":171}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31754,"byte_end":31755,"line_start":306,"line_end":306,"column_start":37,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":195},"to":{"krate":0,"index":188}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":31817,"byte_end":31818,"line_start":310,"line_end":310,"column_start":38,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":198},"to":{"krate":0,"index":191}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":33877,"byte_end":33888,"line_start":375,"line_end":375,"column_start":45,"column_end":56},"kind":{"Impl":{"id":73}},"from":{"krate":1,"index":13866},"to":{"krate":0,"index":191}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34082,"byte_end":34088,"line_start":387,"line_end":387,"column_start":30,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":8,"index":52910},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34459,"byte_end":34463,"line_start":408,"line_end":408,"column_start":29,"column_end":33},"kind":{"Impl":{"id":75}},"from":{"krate":8,"index":52943},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":34922,"byte_end":34927,"line_start":427,"line_end":427,"column_start":30,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":8,"index":52880},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":35453,"byte_end":35460,"line_start":449,"line_end":449,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":283},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/dma.rs","byte_start":44571,"byte_end":44577,"line_start":730,"line_end":730,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":133},"to":{"krate":0,"index":286}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45279,"byte_end":45284,"line_start":11,"line_end":11,"column_start":19,"column_end":24},"kind":{"Impl":{"id":83}},"from":{"krate":8,"index":7703},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/flash.rs","byte_start":45551,"byte_end":45554,"line_start":30,"line_end":30,"column_start":6,"column_end":9},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171593,"byte_end":171596,"line_start":51,"line_end":51,"column_start":30,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":391}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171634,"byte_end":171637,"line_start":52,"line_end":52,"column_start":30,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5699},"to":{"krate":0,"index":391}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171676,"byte_end":171679,"line_start":54,"line_end":54,"column_start":30,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4402},"to":{"krate":0,"index":391}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":171717,"byte_end":171720,"line_start":55,"line_end":55,"column_start":30,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":9867},"to":{"krate":0,"index":391}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172077,"byte_end":172080,"line_start":69,"line_end":69,"column_start":30,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":10154},"to":{"krate":0,"index":391}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172164,"byte_end":172167,"line_start":72,"line_end":72,"column_start":30,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5620},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172205,"byte_end":172208,"line_start":73,"line_end":73,"column_start":30,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5781},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172247,"byte_end":172251,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4484},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/i2c.rs","byte_start":172289,"byte_end":172292,"line_start":76,"line_end":76,"column_start":30,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9806},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":234576,"byte_end":234579,"line_start":17,"line_end":17,"column_start":17,"column_end":20},"kind":{"Impl":{"id":94}},"from":{"krate":8,"index":8254},"to":{"krate":0,"index":562}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235325,"byte_end":235328,"line_start":51,"line_end":51,"column_start":6,"column_end":9},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":235771,"byte_end":235775,"line_start":68,"line_end":68,"column_start":6,"column_end":10},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":236222,"byte_end":236226,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":240554,"byte_end":240558,"line_start":232,"line_end":232,"column_start":6,"column_end":10},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/rcc.rs","byte_start":253209,"byte_end":253215,"line_start":597,"line_end":597,"column_start":6,"column_end":12},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":11742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255554,"byte_end":255557,"line_start":75,"line_end":75,"column_start":38,"column_end":41},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4402},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255603,"byte_end":255606,"line_start":76,"line_end":76,"column_start":38,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255652,"byte_end":255655,"line_start":77,"line_end":77,"column_start":38,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6639},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":255993,"byte_end":255996,"line_start":90,"line_end":90,"column_start":38,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":8673},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":256043,"byte_end":256047,"line_start":92,"line_end":92,"column_start":38,"column_end":42},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4484},"to":{"krate":0,"index":671}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":256093,"byte_end":256096,"line_start":93,"line_end":93,"column_start":38,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5620},"to":{"krate":0,"index":671}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":256142,"byte_end":256145,"line_start":94,"line_end":94,"column_start":38,"column_end":41},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6700},"to":{"krate":0,"index":671}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":256483,"byte_end":256486,"line_start":107,"line_end":107,"column_start":38,"column_end":41},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":8740},"to":{"krate":0,"index":671}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":256533,"byte_end":256536,"line_start":109,"line_end":109,"column_start":38,"column_end":41},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3882},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257006,"byte_end":257009,"line_start":125,"line_end":125,"column_start":38,"column_end":41},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":7860},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257056,"byte_end":257059,"line_start":127,"line_end":127,"column_start":38,"column_end":41},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3955},"to":{"krate":0,"index":671}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257529,"byte_end":257532,"line_start":143,"line_end":143,"column_start":38,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7921},"to":{"krate":0,"index":671}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257579,"byte_end":257583,"line_start":145,"line_end":145,"column_start":38,"column_end":42},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5860},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257629,"byte_end":257633,"line_start":146,"line_end":146,"column_start":38,"column_end":42},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7041},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":257998,"byte_end":258001,"line_start":160,"line_end":160,"column_start":38,"column_end":41},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":8049},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":258278,"byte_end":258282,"line_start":172,"line_end":172,"column_start":38,"column_end":42},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":5927},"to":{"krate":0,"index":671}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":258328,"byte_end":258332,"line_start":173,"line_end":173,"column_start":38,"column_end":42},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7111},"to":{"krate":0,"index":671}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":258697,"byte_end":258700,"line_start":187,"line_end":187,"column_start":38,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":8110},"to":{"krate":0,"index":671}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/serial.rs","byte_start":259038,"byte_end":259042,"line_start":200,"line_end":200,"column_start":38,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":9624},"to":{"krate":0,"index":671}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271106,"byte_end":271109,"line_start":73,"line_end":73,"column_start":30,"column_end":33},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4098},"to":{"krate":0,"index":735}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271422,"byte_end":271426,"line_start":86,"line_end":86,"column_start":30,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6067},"to":{"krate":0,"index":735}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271509,"byte_end":271513,"line_start":89,"line_end":89,"column_start":30,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7041},"to":{"krate":0,"index":735}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271553,"byte_end":271556,"line_start":91,"line_end":91,"column_start":31,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4165},"to":{"krate":0,"index":737}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271641,"byte_end":271645,"line_start":94,"line_end":94,"column_start":31,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6137},"to":{"krate":0,"index":737}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271730,"byte_end":271734,"line_start":97,"line_end":97,"column_start":31,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7111},"to":{"krate":0,"index":737}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271774,"byte_end":271777,"line_start":99,"line_end":99,"column_start":31,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4244},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271816,"byte_end":271819,"line_start":100,"line_end":100,"column_start":31,"column_end":34},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":5456},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271859,"byte_end":271863,"line_start":102,"line_end":102,"column_start":31,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":6210},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271903,"byte_end":271906,"line_start":104,"line_end":104,"column_start":31,"column_end":34},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5456},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/spi.rs","byte_start":271945,"byte_end":271949,"line_start":105,"line_end":105,"column_start":31,"column_end":35},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":7181},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281094,"byte_end":281099,"line_start":67,"line_end":67,"column_start":26,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":11999},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281202,"byte_end":281207,"line_start":73,"line_end":73,"column_start":26,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11999},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281314,"byte_end":281323,"line_start":79,"line_end":79,"column_start":26,"column_end":35},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":12005},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":281513,"byte_end":281522,"line_start":91,"line_end":91,"column_start":6,"column_end":15},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":12033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/time.rs","byte_start":282245,"byte_end":282252,"line_start":123,"line_end":123,"column_start":6,"column_end":13},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":12038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293550,"byte_end":293560,"line_start":21,"line_end":21,"column_start":22,"column_end":32},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/usb.rs","byte_start":293595,"byte_end":293605,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":831},"to":{"krate":21,"index":1522}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":294862,"byte_end":294881,"line_start":16,"line_end":16,"column_start":6,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":297026,"byte_end":297045,"line_start":86,"line_end":86,"column_start":25,"column_end":44},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":859},"to":{"krate":4,"index":284}},{"span":{"file_name":"/home/ahmed/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.5.0/src/watchdog.rs","byte_start":297251,"byte_end":297270,"line_start":96,"line_end":96,"column_start":19,"column_end":38},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":859},"to":{"krate":4,"index":282}}]}